today:
    curr_time: 13       # current time (=next integer hour): 13:00, for the start of the planner
    day: 1              # 1-7 for Mon.-Sun., for fixed_time tasks
    strictness: 0.5     # 0-1 for balance between enjoyment and productivity

sleeping:
    type: sleeping
    duration_min: 5     # sleeping duration: 5-12 hours
    duration_max: 12
    bedtime_min: 22     # bedtime range suggestion: 22:00-4:00
    bedtime_max: 4
    enjoyment: 6        # enjoyment: 0-10, float
    productivity: 2     # coefficient at bedtime_min and duration_max
                        # true productivity over time depends on bedtime and duration
                        # multiply by productivity of other tasks

lecture:
    type: fixed_time
    day:                # 1-7 for Mon.-Sun.
        - 2             # have classes on Tue. and Thu.
        - 4
    start: 14           # format: in 24h; fixed time start at 14:00
    duration: 2         # duration: 2 hours
    enjoyment: 5        # 0-10, float
    productivity: 8     # 0-10, float, the larger, the more important

hw:
    type: fixed_ddl
    approx_time: 3      # approximate required time: 3 hours, extended by certain percentage (like 40%) in the main planner function
    deadline: 10        # deadline in 10 hours
    enjoyment: 1        # 0-10, float
    productivity: 5     # 0-10, float, the larger, the more important

lab:
    type: as_soon_as_possible
    approx_time: 2      # approximate required time: 2 hours, extended by certain percentage (like 40%) in the main planner function
    enjoyment: 5        # 0-10, float
    productivity: 6     # 0-10, float, the larger, the more important

film:
    type: fun
    enjoyment: 7        # 0-10, float
    productivity: 1     # 0-10, float

exercise:
    type: long_term
    insist_day: 2       # insisted for 2 days, update every time of imiplementation
    enjoyment: 3        # 0-10, float
    productivity: 3     # 0-10, float

housekeeping:
    type: necessity
    time: []            # example: 
                        # before bed ([bedtime - housekeeping.duration, bedtime])
                        # after get up ([bedtime + sleeping.duration, bedtime + sleeping.duration + housekeeping.duration])
    duration: 0.75      # 45 mins
    enjoyment: 0        # 0-10, float
    productivity: 0     # 0-10, float

transportation:
    type: necessity
    time: []            # before class ([lecture.start - transportation.duration, lecture.start])
    duration: 0.5       # 0.5 hours
    enjoyment: 0        # 0-10, float
    productivity: 0     # 0-10, float

breakfast:
    type: meal
    time: [7, 10]       # breakfast at 7:00-10:00
    duration: 0.33      # 20 mins
    enjoyment: 3        # 0-10, float
    productivity: 0     # 0-10, float

lunch:
    type: meal
    time: [11, 14]      # lunch at 11:00-14:00
    duration: 0.5       # 0.5 hours
    enjoyment: 3        # 0-10, float
    productivity: 0     # 0-10, float

dinner:
    type: meal
    time: [17, 20]      # dinner at 17:00-20:00
    duration: 2         # 2 hours, including cooking
    enjoyment: 4        # 0-10, float
    productivity: 0     # 0-10, float

