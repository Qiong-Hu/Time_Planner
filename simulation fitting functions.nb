(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    704442,      13159]
NotebookOptionsPosition[    699510,      13066]
NotebookOutlinePosition[    699896,      13083]
CellTagsIndexPosition[    699853,      13080]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "example", " ", "discrete", " ", "rwd", " ", "data", " ", "for", " ", 
     "time"}], "-", 
    RowBox[{"dependent", " ", "decreasing", " ", "task"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.5", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "0.5"}], "}"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.788988514160843*^9, 3.788988571378394*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"d9a36d09-c0f7-4ab7-af78-f47c85e19b66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"2", " ", "fitting", " ", "funcs", " ", "for", " ", "data"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", "data", "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1.361"}], "x"}], "+", "2.829"}], "]"}], "+", 
        "1.23"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"10.198", "-", 
        RowBox[{"3.961", " ", "x"}], "+", 
        RowBox[{"0.408", 
         SuperscriptBox["x", "2"]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7821489174707785`*^9, 3.782149123644705*^9}, {
   3.7821491604646263`*^9, 3.7821491634908953`*^9}, {3.782149214762558*^9, 
   3.7821492785920367`*^9}, {3.782149437790826*^9, 3.7821495956505136`*^9}, 
   3.7821500527452345`*^9, {3.7821502663350267`*^9, 3.782150266578885*^9}, {
   3.7821503308031387`*^9, 3.7821503383148403`*^9}, {3.7889885783266573`*^9, 
   3.788988626135661*^9}},ExpressionUUID->"981b4f8c-c929-40e7-826b-\
2a14dd14bdfc"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.5, 10.}, {1., 5.}, {2., 3.}, {4., 2.}, {5., 1.}, {6., 
       0.5}}]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
s8vLdLh97+f2Ff8P0WHAgQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3170#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVl3k4lO0XxxVRKoYZS9QYzRjaJMmrzTnkLUlFkdJiSZbs4c2LSlKKRKUS
CS0vLaISabFlT4hIpdLzzIwle2SN3/37a67Pdc59zvcs9z3Xo+7ovePQdDEx
sdnTxMT+/5t03FFyhVOUYb6TG9/+EA9LGjjmNhw3GCsztdWy4+FUWf4pDudf
MKnNjunfzcOkwmi1GZxzML1ed+qMOQ891gd4DqtdB15KWd/rlTxsGHeN61O7
BxJ2W9n7pvNQ6gul2a2WB1ouH2/tSeFialWy70+1SpiV+tVyz/eF+Cjz3BcP
7c9gfUi06qmZOrrA++tdR2iIjisOFLxRQy/hIjr7UQcs4en8juEsQGn1cM3v
Bn2walR/f7OLCl5gvF2cav8LCgcuKplOKaHjF6sC8erfcN+cN70qQgF9S8Md
vTXHwPL+wJc+ZOJjnzk7lTf/gfd2Cb88jOUwNdi9U8dGDAdDqmukgmQwLHnC
crBrGuY0JgW1DUujWEMrvgoSxwNzh66olUsh39850GrxDBwJkZNaHS+BgqFr
u2a/lsTBjH/3V1LT0Ex4+Ngl35nYNHm5xCBwErYJYpew2dJotXNWivPHUeh8
4xhakTEbl+bGjGyX/g3ack0LNtjNxfP+9TlVQQMgihaFXTk0Fyce/6uR6DUA
SdLDbW3uczGWue2ln+MAzJFQfnI+cC6abDi+b73ZAHT+3rOx6eJcrLaa8NdV
GYC7LV+93Erm4lL0nrz9sh/mpwsLYhbJYIiBjt8diX6QhiGHll8yaHpgfcWq
A70QaKQ1M2dMBndfyH9jYNoLog17H8VMk8U+oxDBNt1eKDYtGjOWlUXTlRlX
siV7IWhH9OV7i2UxFoQ5h7J64OchjdJ/HGTR9U/G4AGpHqg+b60lV0v8ZW/t
z3jTBWtiztZ0NspiesZTMYWsLki/+NK/pEUW42unVcbc6ILwq+pFRztlMSVp
Z2V+QBew634v7Z3OQIOD785OX9QFTZ+KS63ZDKy7PE9c/fJP2NRtO7zQmoFi
USxhXkAn3GSdajixm4H279tXNDl1wuDaB5ktexk4Eq72S8KqE1Iix12uOhJ/
vez667qdMKZ5o3mWDwNdHwdJpvZ1wEPHr3l9kQwMXBSCGj4dwGi2C8kvJPFk
LCcljrWD81TEbtUSBp79c+Sjt1c7vOJn6QWWM7B9zzCv264d3ALEulfUMDDW
VnOB2oZ2KJZP3X/3C9EfzAuzl24H/62U4fnfDExZfZm950YbNBc7TbNdKoem
D4xT1WtE0Gf0WeXYcjkM/ddkW0axCKSKtuul6BL7+l/Sm3NFoF+wxkVkIIcV
d22eZqWIIO4l492Rv+UQx9YWor8Itme/io86IIfpWUeqDrJFUHaXpfM6Vg6V
reJTnh0Xwjde5ObWy3LIaDLYsCFACEO3pxzFr8lh1tYzQ63uQuDd6ryyOYnw
Aq1z5nuEEHazcLzxnhxyjCI8BHpCMLzmUd5TLId1V55ylXoF8OxsyQHOEOGA
kp1nvQWQbvZWOWJEDlP+VjALdBFAwpz6+u5xOfQxfKoebCeA0NjvG19Ol8fQ
+03+edsFYB4/pr2LIY91Hi/vK68QAJWmMxW1RB4xYcLKYZiGRre/8ga0iX1Y
zf5EHw0VSwz99ujKI+d4rHlWBw0ZmVva+Kvl0WfGnkqzFhoCc51rizaS85MR
OxyLaZApv5E87CCPWfH7b6teomHaudt7DhySx9ZTO9+4nKdh0Ow+s9SVxL92
taTsDA2fanIjLnnLo8UaCffXwTTcaar3XnZMHmPdjm2KdqbhWvynRXGhhBNb
fH0caIi0baXHTsmj/e+zx5z30eD9rdumIpLUx680iNpBwxrRTDwYL499Pm2G
uUDDsnTZscpEeSzsyPRbsZYGzmHFbJ1kki+q9Fy+Pg0zerhak3flkbG5eY+c
Ng11Q4aM60+JvkeJ564voMF5RkBrTQ2xcxM09cRoUFGr/Dj+ntQzapTM+kNB
jcGCWq1G4r9r/fkZYxToe5S+DvtC9N7SLlMepECyQSFRv52cDxvPk+ig4EWX
26WDP4m+s9DiKqLASzL/XGwPOa/w0e8rTUHTaufAzkHSvyIx8ZFvFNxNybG+
OY2J6GCYOtBIwe4X0lvfSjBRJ57t9bmBgjkfDpiMSDGRY70jq/49Bf5SUit3
yDCxzz47bvAdBVrqexefkGNiayalz66moGVNpvpDFhPrwp227a6iwMTLhiGp
ysSsQsevf8ooGIl4ILWSzcQUze9WbqUUPEydmrRTZ2IsK9NI+IYCVmNad54m
E31CNwfLFFFQ0TMuEC0mPMWseFlAQchMixamNhPtJXQj/82nQLB2pMpTj4kW
Ka5e/FcUxFubFyf8RfT/dTJW4SUF5t4peeVrCFt1ayq8oEDs3GDW4HrCww/1
NPIoyL5lmq5uROrjFOb8/ZwC11c3kreZEK7lP/onl4L5TX1XgzcRlvih8jyH
grpekwvpZkxkFPRMzCIcPuv66cathMUsrDyeUWDA7Q6Zbkm4XEL9ezYFXeuM
/JdbEWbNPehIOGXXFfd9NoTbXFV+P6XAyqfD8ZwtYVTelEB4ZuR625z9hNVU
O7YRfnX7oiVtTzjcV4xF2Oe10JThRNhbNbrjCQW8j6txvQvhVuWYWsLNfdF/
HT5M9H50kywjfF6a0r7mSdhK5lc1YeTp80t8CNtIWgsID66PXNDvR7jVcukc
Ej/d5huLfZT0p7cv0ITwPl/dOVuCCIfTa6IJM6LOiAceI/uSvOiIiHDJnc9j
d0IJ4xu2BakvMF974P0pMg+XLKwivLQ5rGPyDJkXq/+jFelPa39T65JIwptO
C3oJx81e0rw7msxXzNM5kfTTVONE7elYJoZC+n4b0v8Jw4ayJ5fJfkj8VcUl
8zl4JPjZnASyT5zt4j1kfvq6354tSiL71nPwgYjMV3oAczamMFGsoJ/XS+af
5SuZG/ofqe9Q4PnlZF9OrXDLTbpH9K71DXIh+7Sr/23ui4dED5NenVlI8vlc
fD74hOSrXLHMi+xjrc7gc7kcJhamyTgISyi41bcrTzuP5I9wcvYg+7zZZ/4L
1wJyH7YGC+9VUnDVO+1ly1syjwFSbR0FbsulX43WkP61jvo311OwrtfjlWI9
yV+nJPntAwW0l+5ri2aSPyf/hvInCnS8XueXCAgnPE/cQlEgrs0p+NFG+hOv
0VYgIPe3O6xgsvP/PFvCpI3cB0/TQoN+4n/T+ElwFwWVHg1FD/+Q/hfva00f
puDGUv3iSjEWWtRdzE0k74dPV3yxSJxF9ID9TfK+KHoceMORZiFHUorfIE6D
o3tHSZwiC+vcjE6NMWhYtcS89PE8FhZGGIrcWTTM/PmotGY+C7PSslW6lWjI
POxfNpPLwtju2SNsNRom3KbKQ5aTeBedw5G8d7WLHCuu67LIPJb46ejScKuj
pCJnFQtbe9xW6pD3cbNbZGXfWnLeylLLzpCGq64Kb51MWcgwqKaDttOw3GVJ
jbkDsR84knrPn4ZvbmreGU5Ef5a54/QgGs57MBkyrsR/+WSh5wkaOnzHLWu9
SL5nIpuQSBpuh7xttAwhen68+xmYSoPSJfevu66Rel4MPuitp6Eszu54bgKx
U0ZmRz7R4H9tp5ryTVK/vvMZqVYa3t9Y6/DpDgvRVa/ZrZuGqLTZwr1PWJjy
U/Rj7iwBTL160GX/joWhfneiGzYI4FFBcnRRHbH7OM0K3SKAfcWXtRd+IHoT
xxfCTgHklQf70J9JvsDM5UOOAvCr3zJ4qJ30c8eyTDwlgLa2n+OHxRXI+31y
o3W5AGrll84OWK2ArWNRTf77yf+1p2dH4joFzOpy9al0FsKj8kflxaCAhTKp
qO0jhAshK8IZGxWwjl4YrnVKCOYi/T8Pdigg573Hte/3hFCVZ9RLuSugWN68
XpsxIZTa2zRY3FTA2FcfHX3TRKD3Mv7x0VTin6tSUf1EBHcUPsfcvEP0/Hh+
0CBfBOFV+8y77iugRYWkITaKwFjPsTQiVwHtm9uPy0u0QaGUZ25+nQKmzChb
UeTUBi8fhSUuFVdETpxg7ybddpA0t1a5JqmIdUOqfpXYDpYdmtenSStibPKF
Kwe2t0Mb993VJgbxf6sxUeTRDszrSpdC2cQ/TNXCM70d3E89PPthtSKG+vOY
u7gdoLq7KSDERxHR/uEMH81OcB5KHxT5KaL9G/PwnQad8PhSsJ/lURLfS0vG
bHMnbHrH8eUfV0SxpIsbfNw7wc/Y3aMuisSzXbIqNasT3i4VO8hLU8RCm5CV
Vwx/QvC0xRbVX0l+27gbpa5dIDKZ3cz/QfTtVtqcFdwFFme77E4KSHyRv0XG
hS7gyWZ66/8k+XMKvL9ld0H1fL2YlBFiV4/rmz+9G9gGhjX+TCVkaBqMS6d0
Q7HXDvMFm5XQosdD70FHD0i3BJl6ZSthXY6J6uSnPtA/em9uTC6xp91UGhT0
gYN8c33mCyXMyhbJDvT2wXPTVfv7C5WwWcNocIZkPzg/6/X1f6eEHEe189G6
/VB0wSkxSKSEBsYnR1Sj+8n3wLaeM8rKGJry+c0q0wEQ/qcelxyijOmNNG9/
0y+I05onkWc9Dy0UB1gPbw9DbIJzuQNHBXGX9YP3ueNgG7e/Zk6bCsZLfUtZ
pyqGIyZ3R5PzVTFWZtu9zPrpSAuNA4sj5mP7d929Njdn4K31K1TfOSxAZeMG
9kTPTMw4HSDnsoyNjF2a1Y1b5mCE9cEt4kNsbHW76T3wURZXtaTei3inhlZP
5X84Tshh/KLEjHdbONhM5Rcaz2bhicLo+C15HDQvy7MaPKyIW1Wt71bx1DE9
s9K8QKCMRl7le+XOqaP/EZHyMmtVTJ7vyKseIvb0wMR/2GzkvUm7um3vQmxu
NxjS9eRg7LLixfX5CzFlnsqmNR/U0fmXxPvKxVysMHgimejORcfHA5xzMVzc
3Wi57cQI+R4O2zlhdpGLPoefY+wUDwN2Zn+cc5mLnKD/Am5JauDZoYALsVeJ
/6x5aVUsDXy0enT8WhIXWW02WotXaOBo0VTTfw+4WJi87o7GYQ2MrZ8TXVLO
xZEZt07KfNXAhNuermcquXi2Z7hkk0ADb/vXbDB9y8Vsy0azsJ8amKMYO/a2
houtEXz2+KgGttgyXRsaif/ThfS4Ih816XkbKJqLM2eGiVZb8lEnO4h9R8hF
i4TtOyJ283HN6S+jh9q4iGl3xJrs+GiumZTV0Uni6Qh5R734eMSdw+7v52KI
eGFURRQfQ9adHH3yi4sPD1fO5lzm4+m51Af/IVK/uW1NYAIf4zNvR42McPHD
CXlV7Xt8vBUq4fJijNjfr74bmcXHB5aHjEMmuJie1O7bnsvH7IVlCwwnuRgo
YJ/cVMDH/F/80akpLnbdbalPK+Pj/wC4CsFA
        "]]},
      Annotation[#, "Charting`Private`Tag$3214#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{384.9999999999863, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6.}, {0, 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.782148994764454*^9, 3.782149005664199*^9}, 
   3.782149124173391*^9, 3.782149163994622*^9, {3.7821492489669886`*^9, 
   3.7821492805898943`*^9}, 3.782149448358778*^9, {3.782149534360591*^9, 
   3.782149565942504*^9}, 3.782149596272149*^9, 3.782150267253519*^9, 
   3.782150340649523*^9, {3.7889885919234343`*^9, 3.7889885996016846`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"69877c80-39a4-4b53-a63e-4f0fed5711f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"data", ",", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"a", " ", "x"}], "+", "b"}], "]"}], "+", "c"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], "]"}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"b10fd17a-bfd5-4926-8d09-5b5ea1203c92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"-", "1.3615670285678705`"}]}], ",", 
   RowBox[{"b", "\[Rule]", "2.8292984755704413`"}], ",", 
   RowBox[{"c", "\[Rule]", "1.2299940411268382`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7821494710787783`*^9, 3.782150260663272*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f7152d60-7168-42a7-a4f4-932d9e6927c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"data", ",", " ", 
   RowBox[{"a", "+", 
    RowBox[{"b", " ", "x"}], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["x", "2"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7821500860391865`*^9, 3.78215011799691*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"a435531e-c85c-4c1d-9f2c-a5f7da089497"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "10.198017313599546`"}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"-", "3.961258493903001`"}]}], ",", 
   RowBox[{"c", "\[Rule]", "0.408452015265754`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.782150095118004*^9, 3.7821501186995173`*^9}, 
   3.782150259518925*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"0cfdf960-617e-47c3-a125-3b491e33099b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "example", " ", "of", " ", "rwd", " ", "func", " ", "of", " ", "fixed"}],
      "-", 
     RowBox[{"ddl", " ", "tasks"}]}], ",", " ", 
    RowBox[{"concave", " ", "func"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"10", "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"0.5", "*", "x"}], "]"}]}], "+", "1"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7825014760197225`*^9, 3.7825015475756383`*^9}, {
  3.7889886296928244`*^9, 3.7889886681204104`*^9}, {3.7889887032138095`*^9, 
  3.7889887111796007`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"040cefc0-6da7-4544-b44c-491c7d598e69"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVx3k41HkcwHFXT6rN1WG/Zn7zcxY5Q0rR51NUcnSMepxhSVs6dMwiq1o9
VMTySI4SOWqTrZGjJzkfybN6utxqx5FmrYwiOTKY79o/3s/7eekEhvKDFeTk
5Nzm+//OwYPNdZ+CN38LypVRyqKSg9bJXuIIgare14XztsrJyCol+0BkV2/g
P2+XV50lt8hB0NPNsaqRsehxcKo6hQjAde05xag5FrvNLzskkhjI4/icmZSy
eHvF7kvxJBW4fTrJAxMsRiuXro4jBbDdpiu3VMKip1eucPRrGSx0Ftfat7O4
hEb77uDVgrcJs7u9lkWDvV8Gn11tAFPb89nH77MY/toWMsabwGe/f1xlCoua
Zeo98vJvgKs7GWYUxeLjfoeXb+xaQLT7Yt7aIBbrQ25xvIbbYK0TX8PQmcWJ
VfaqD453wrF623a+JYsK00VqHIP34N7FTxjTZNGGBjx2fyiC0Dv3HN/KePgy
xvp145peiDrXfEP4Dw/ZZMl04Zc+uCzx9+xu4qFkqren3aIfUkjPiJ+QhwVD
lS9Ufv8ITw9Udaik8FCF+WNELBYDz1385L6AhwlHyg/d1h8AxUX53iWePJzE
IvHhC/+CT/yra1W2PBRYNpStfDYIBVmaY/ZcHvY+bLjarDME3iuNtbNnGJwJ
abtpFCkBC4vy6wPvGTTeslB2qHIY/o4Rl9RVMrgjT+fnR5pfYF3iY5FTJoPh
jL/uB98RuMZk7AqNYNBkeP+STrdRGFHesC3dg8FlqqPKDdJRaPxFsXujFYNK
tTeFellfwYL9jJlqDB61rny3yGUM6jJyXXcOcbFoZ+DtmskxaAjPvNLzjIsT
Ei21gbRvYMS/Xu+Ww8Vy9x2KqY7j4N3qLGgP4+IFp9icsoFxSLUuVti+h4s6
3c5d+bET4BEXFVlhxMWN62NSieUkOMd/cFlMOejLezMt3zoJdulmscEdHJx4
kdh/MnoKvknt+o4VcjBDyU/A1/8OWb61y5POc3BZT3meQsN3yNXzP1/izsEF
56L32Z6aBoXgWkvU56BcoZ+wX0MKdkkaQ0untPD0DWGiRr0Uwv5UYFSfa2G1
8RVl9RMzID6x69fhFC1Udz5tclFlFmwa78VYBmmhyPRt69mqWdAVR3j9ZKaF
xdmgL/abg1XKNht+mCV4QGijzsjmQCRIk1Y0EfwtNjdadF8GugF6exRTCD4Y
ZG6quFKQmbQeGfcleOVWbEDPLgoLkrbxFsz7IP+zwcO9FP5KK65e4UOQW1VV
7OZBQc3qSLWNF8H4JJ/GhEAKGzss6sL3Ezxsk/l18VkKDjORzRNuBHVjljst
vEthvHVmRf9mgrINUUs771GYNZcYjNoTfPf5Y8vdIgoRNenaMjuCyR6lB7Y/
ohAyrd1BNhGka/hnYqsohCXUbtmznqCoOSlbsZVCY2McqTAn+OTSVFBrO4W3
FUfbnpsRTN3kb5TfRaFuYPhsiylBlztmZVt7KBwOeR4jMSb4NOJVU/QnClsF
NzK5hgTTTNcl7R2moHxtS6HhaoKn+rP26YxQyOyNyLdeRdDQ9Vhv3TiFgYhk
D1d9gkrybQXJUxSy5Y6re+oR7CvfFBIgpcAxaSkP0iVYFZJvbjFH4eSPNY6h
OgTT2SUTlFKI6zeridQm+B/EPz9W
       "]]},
     Annotation[#, "Charting`Private`Tag$3261#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 6.281718227016094},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {6.281718227016094, 7.999999979591837}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.782501511849742*^9, {3.7825015419035873`*^9, 3.7825015481280622`*^9}, 
   3.788988791721855*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"cb0a0a08-5cd8-4058-b704-66c6ef0a2c0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "find", " ", "fitting", " ", "rwd", " ", "func", " ", "for", " ", "asap", 
    " ", "task"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"app", "=", "10"}], ";", 
    RowBox[{"rwd", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "rwd"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"app", "*", "1.4"}], ",", 
         RowBox[{"rwd", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"app", "*", "2.5"}], ",", 
         RowBox[{"rwd", "/", "5"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FindFit", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "b"}], " ", "x"}], "]"}]}], "+", "rwd", "-", "a"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.782502870326665*^9, 3.782502949449246*^9}, {
  3.7825029858259773`*^9, 3.782503000678895*^9}, {3.7825032672908664`*^9, 
  3.782503277044876*^9}, {3.782503612227332*^9, 3.7825036397569647`*^9}, {
  3.782506044845049*^9, 3.782506089045244*^9}, {3.782506146878396*^9, 
  3.7825061693198104`*^9}, {3.7825062224240046`*^9, 3.7825062239938564`*^9}, {
  3.782506265321544*^9, 3.782506265522343*^9}, {3.7889888197748146`*^9, 
  3.78898885882987*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"b007378d-e2c5-4e51-a958-e5893f9ca00f"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*FractionBox[RowBox[{\\\"-\\\", \\\"11.250002494670174`\\\"}], \
RowBox[{\\\"-\\\", \
\\\"7.981207653386247`15.954589770191005*^2798008\\\"}]]\\) \
\:592a\:5c0f\:ff0c\:4e0d\:9002\:5408\:88ab\:8868\:793a\:4e3a\:5f52\:4e00\:5316\
\:673a\:5668\:6570\:ff1b\:53ef\:80fd\:65e0\:6cd5\:4fdd\:6301\:539f\:6765\:7684\
\:7cbe\:5ea6.\"",2,13,1,16365179138183586010,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7825062662429333`*^9, 3.788988861467761*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[11]:=",ExpressionUUID->"589148cd-f26d-40f7-8df2-\
59311d59fb98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "3.25`"}], ",", 
   RowBox[{"b", "\[Rule]", "14193.541843428724`"}], ",", 
   RowBox[{"c", "\[Rule]", "1.`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.782502957554681*^9, {3.7825029953287344`*^9, 3.7825030009637313`*^9}, 
   3.7825032776363573`*^9, {3.7825036176710424`*^9, 3.782503640264223*^9}, 
   3.7825060918488717`*^9, 3.7825061498159637`*^9, 3.7825062245396833`*^9, 
   3.7825062662459307`*^9, 3.7889888615002003`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"0fd015df-c2ba-4249-a707-92681d6e3ac0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rwd", " ", "func", " ", "for", " ", "meal"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rwd", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "rwd"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "rwd"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"24", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "25"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "6"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", "data", "]"}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0.6", "*", "rwd", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "11.5"}], ")"}], "2"]}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             SuperscriptBox["0.5", "2"]}], ")"}]}], "]"}]}], "+", 
        RowBox[{"0.4", "*", "rwd", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", "12.5"}], ")"}], "2"]}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             SuperscriptBox["1", "2"]}], ")"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "8", ",", "16"}], "}"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.7825030011096478`*^9, {3.782503160005052*^9, 3.7825032072742014`*^9}, {
   3.7825032841120205`*^9, 3.7825034406869025`*^9}, {3.78250365087733*^9, 
   3.782503687972424*^9}, {3.7825037742984223`*^9, 3.7825037749200525`*^9}, {
   3.7825038587364907`*^9, 3.7825040059450936`*^9}, {3.782504046450376*^9, 
   3.7825040473224897`*^9}, {3.7825041347898436`*^9, 3.782504175638482*^9}, {
   3.7825060029581957`*^9, 3.7825060394231153`*^9}, {3.782506181794245*^9, 
   3.782506209077633*^9}, {3.7825062441683598`*^9, 3.782506345040337*^9}, {
   3.782506510406011*^9, 3.7825065439088306`*^9}, {3.7825067707715015`*^9, 
   3.782506815747246*^9}, {3.782509779387961*^9, 3.7825098964492965`*^9}, {
   3.7825099681981077`*^9, 3.782510135900895*^9}, {3.782510255524338*^9, 
   3.78251026520716*^9}, {3.782510334955138*^9, 3.7825106023434973`*^9}, {
   3.7825106863361692`*^9, 3.782510690942604*^9}, {3.7825114191020784`*^9, 
   3.782511420614594*^9}, {3.7825114999396443`*^9, 3.7825116472999244`*^9}, {
   3.7825116808647194`*^9, 3.7825117311574144`*^9}, {3.7825118389190235`*^9, 
   3.782512024375167*^9}, {3.782512062540265*^9, 3.7825121095372095`*^9}, {
   3.7889888686369777`*^9, 3.7889888751815734`*^9}, {3.7890113538915644`*^9, 
   3.789011374307032*^9}, {3.789011416257806*^9, 3.7890114236879115`*^9}, {
   3.78901323388939*^9, 
   3.7890132618478956`*^9}},ExpressionUUID->"5f86d4cc-fa5f-42c4-9cdc-\
7b45ddc02f64"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0., 0.}, {11., 0.}, {11., 3.}, {14., 3.}, {14., 0.}, {24., 
       0.}}]}, {}}, {}, {}, {}, {}}, 
   LineBox[{{0, 0}, {11, 0}, {11, 3}, {14, 3}, {14, 0}, {24, 0}}], {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
u7TEwc80phZvwAn4HzB2XjE=
        "]]},
      Annotation[#, "Charting`Private`Tag$35539#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{393.7499999999983, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 25}, {0, 6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7825031951821957`*^9, 3.7825032079394493`*^9}, 
   3.782503293382553*^9, {3.7825033236996326`*^9, 3.7825033441503897`*^9}, {
   3.7825033877187176`*^9, 3.7825034421967325`*^9}, 3.782503688940538*^9, 
   3.7825037753584414`*^9, {3.7825039871277213`*^9, 3.782504007219102*^9}, 
   3.7825040478821783`*^9, {3.782504142357892*^9, 3.7825041519281745`*^9}, 
   3.7825041948805313`*^9, 3.782506209779231*^9, {3.7825062758055553`*^9, 
   3.782506315774602*^9}, 3.782506347059596*^9, {3.782506511906557*^9, 
   3.782506544634395*^9}, {3.782506794569421*^9, 3.782506808689994*^9}, {
   3.782509834142821*^9, 3.7825098982526217`*^9}, {3.782510012435858*^9, 
   3.782510136326768*^9}, {3.7825103807866845`*^9, 3.7825106027492833`*^9}, 
   3.7825106915748425`*^9, {3.7825114159765124`*^9, 3.7825114210483637`*^9}, {
   3.7825115035682106`*^9, 3.7825116289908466`*^9}, 3.7825117327803288`*^9, {
   3.7825118523298445`*^9, 3.7825119473416286`*^9}, {3.7825119789354143`*^9, 
   3.782512024937825*^9}, {3.7825120636116314`*^9, 3.7825121100509024`*^9}, 
   3.782539190214451*^9, 3.788988900090185*^9, 3.7890114270210605`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"202e2300-c130-4756-8198-00a5825e50a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"new", " ", "rwd", " ", "func", " ", "for", " ", 
    RowBox[{"meal", ":", " ", 
     RowBox[{"generalised", " ", "logistic", " ", "func"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"logistic", " ", 
     RowBox[{"contribution", ":", " ", "y"}]}], "=", 
    RowBox[{"1", "/", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"x", "-", "u"}], ")"}]}], "/", "b"}]]}], ")"}], "a"]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"logistic", " ", 
     RowBox[{"sigmoid", ":", " ", "y"}]}], "=", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["e", 
        RowBox[{"-", "x"}]]}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"meal", "[", 
     RowBox[{"x_", ",", "l_", ",", "r_", ",", " ", "rwd_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"rwd", "*", 
      SuperscriptBox[
       RowBox[{"LogisticSigmoid", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "l", "+", "1"}], ")"}], "*", "3"}], "]"}], "3"]}],
      "+", 
     RowBox[{"rwd", "*", 
      SuperscriptBox[
       RowBox[{"LogisticSigmoid", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", "x"}], ")"}], "*", "3"}], "]"}], "3"]}], "-", 
     "rwd"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"early", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"early", ",", "rwd"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"late", ",", "rwd"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"late", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"24", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"meal", "[", 
        RowBox[{"x", ",", "7", ",", "10", ",", "3"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "5", ",", "11"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"meal", "[", 
        RowBox[{"x", ",", "11", ",", "14", ",", "3"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "9", ",", "15"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"meal", "[", 
        RowBox[{"x", ",", "17", ",", "20", ",", "4"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "15", ",", "21"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"7", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"11", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"11", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"17", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"20", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"20", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Breakfast\>\"", ",", "12"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"8.5", ",", "3.2"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Lunch\>\"", ",", "12"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"12.5", ",", "3.2"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Dinner\>\"", ",", "12"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"18.5", ",", "4.2"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
     "  ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "24.25"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4.15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", "12"}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "0.015", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", "12"}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "0.015", "]"}]}], "}"}]}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Reward Function for Meals\>\""}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", " ", "\"\<Reward Value\>\""}], "}"}]}], 
     ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"#", ",", "24"}], "]"}], "]"}], "<>", 
              "\"\<:00\>\""}]}], "}"}], "&"}], ",", "25", ",", "0"}], "]"}], 
        ",", "Automatic"}], "}"}]}], ",", "  ", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "13", ",", "Thick"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7890114325076947`*^9, 3.7890114696363573`*^9}, {
   3.789011509550774*^9, 3.7890115840074015`*^9}, {3.789011868486498*^9, 
   3.7890118824392004`*^9}, {3.789012157325658*^9, 3.789012410391819*^9}, {
   3.789012445624076*^9, 3.7890125588400955`*^9}, {3.7890126060437374`*^9, 
   3.7890127228709874`*^9}, {3.7890127753049116`*^9, 3.78901280175451*^9}, {
   3.7890128448279285`*^9, 3.7890129060579576`*^9}, {3.7890130089407187`*^9, 
   3.789013213115884*^9}, {3.789013272897376*^9, 3.789013350024989*^9}, {
   3.789013625382987*^9, 3.7890136861164074`*^9}, {3.7890137175789876`*^9, 
   3.789013839274933*^9}, {3.7890138737236476`*^9, 3.7890138860110083`*^9}, {
   3.789013953171437*^9, 3.789013966685362*^9}, {3.7890140347944336`*^9, 
   3.789014159979341*^9}, {3.7890142073617644`*^9, 3.7890142847829266`*^9}, {
   3.7890143238162355`*^9, 3.7890143348532343`*^9}, {3.7890145855267053`*^9, 
   3.789014678705801*^9}, {3.789014721802849*^9, 3.7890148489939413`*^9}, 
   3.789015643149312*^9, {3.7890158474062605`*^9, 3.789015872826413*^9}, 
   3.789015914155879*^9, {3.789015954909693*^9, 3.7890159626094666`*^9}, {
   3.7890160141870985`*^9, 3.7890160262797403`*^9}, {3.7890162373555818`*^9, 
   3.7890163605983963`*^9}, {3.789016448710353*^9, 3.789016586892185*^9}, {
   3.7890166556663566`*^9, 3.789016656064109*^9}, {3.7890168526057158`*^9, 
   3.7890168564198713`*^9}, {3.789064936530243*^9, 3.789064983700676*^9}, {
   3.7890650428465915`*^9, 3.789065067739805*^9}},
 CellLabel->
  "In[911]:=",ExpressionUUID->"e450b15a-7041-477a-a6f2-b37340b0fbed"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
jc3N0d/2dQ3eTPp+bm19lmSG9F8lufc/ou+ntpYt2RR9+/16f2sOPV7hoPru
FAqQHSVUP8Z2+t7q6nYKZWXJpj18Qq//R+RVtQlaim5sdHqOHWdMCPYyRrea
ZhIs8rHNZmRuiBsjCjOf9YkCen33uyVdRuiov+2C3Av6eTGMJO83Qul2K5Q/
Jdist9i+8hgiTeVdATcr6f0HfZWd00N8wgoOt6uwR0rZv9rroYkNFd2H1dj6
vCk/+3RRVIO2eFUN/T76H//RehL1mNi1LNTT+z8z4th2HOXudy5haqCP52L9
z/A4ChD1uM/dSF8/EjzVfwyJfbviJdNMr+fTa/3zKHLySRFyaKPPb7MoltdB
B8wyCF7t9PnVdkXvjqDNao9nr32g91vlfc3qCCpiflmb9pFe/1nq2VhttJbQ
4dLVQ5/PMZbEdhjFvCC91hzG5p4cCD6qiWyTOB/pf6bXl7USWNZAey9tjbUe
wQZbfc5cDfQJJOwDRrGDtqtzcGggaof6pqJx+n7pTRo1IrRQfHjxzQT9Ptha
OO5HqOHOic9tk/T6+WzfnqsjFxuL4u9T9PwMfBv3DqKS2YuW1J/0/Jap4Smq
KLQz8LDcHD2/SsQ3UVVkVnpD7uAv+niWOtvsA+jvlXhm89/0en+JMWX7kfbm
58/i/tDnPzn3YVEZCf4qTrq/TP/70lLZGamMfnRXXMtboeebHrKiKKO49Caj
pjX6+OF/ewz3IbugDwd71+n+sFI3o4QUHXp3jP2lr1esjvuWEiLqDG2Z36DH
dae4pZVQ366xtX//tv//3zP/D6CG3ho=
        "]]},
      Annotation[#, "Charting`Private`Tag$95975#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJw92nc41d8fAHDjuhcpMkpS1nWXWVlFzptKQpIkK0mSvUOlkpUyQshKVlIJ
lZCQIisroQhJVkLyRVb6nfvP7596Xs85533e7zM+9/N5HhK27sZn2VhYWFrx
P8z/qZ1bCSwsksDCMiBa2aSE9mhdUPnNtE2w9mcxZWRY0O0wxIotfi5J11cZ
+YbHttSyMz1fvZeqguo0SHdukJj9ez7xpaii3od2jRc5sav3Nzsvq6LpTW9X
nLmwoeHzQSs1JPQ7wMZwHbO/R1UKeTeyuz9LF+DFHvTUON6wB/nzG1kR+Jj9
yX2nldVR5NUn0fNMsxhMiOeoo+fmDv994scOPFvRHqaB2DYMVKRtYo4fuf3i
tCbK8G08QtmOzaetOL1bCxV/pwRtFsM2ogwUXNVCDUYhxZzi2IrHIoPrtNAv
BtryUwK7yOXmhRPaSPNr8VChNLZHSTfv9X3I2IBfKJPCrJc4Pta1D9m/dD8Y
R2Xms7NzQXo/irrNyPehM+vZOvi+cT/qO5hxfrccdvvTf5/FddBM8d8HDHnm
euQ/mbqggwiSlr1bFZjzGe2z6dRBMqtCaE2Rmb87wSfqILpYFMFZo8S0JmWS
7xDassUv1UCDOX/hM35bA9T5PHmz8V6mH2lo9xugGMOK2yc0mfEsgy5aHEac
IayRtsC0WCLF0hAtTkcE+O9nxgvKl1c3QsU3ChYvH8D2b1I4fc0IeZA/+ATr
MPu/EnrVYITGzTe5Rusy67H9+MfiKPpcm3Eyx4C5Hhl3RKONUfypmp6Hh7HV
ylQ3Dhgjo+WR44WG2J+HC00UjqEGBRnDciNm/FCj/q5jqCzlhWa7CXYZ60DU
ruMoyaNJbNUKe+bFTl8VM2SybiqV1Zo5n0jU2l0zxJfLK0w6xdyfZ0JKJHMU
/sWEj/808zzEurwZMEf+Ol9ZaGeZ8cXbpLMtkdI31sty9szzIBLzSdgKzVwi
L+08h61rG+UWY4Ucnjr+3uvIzNdqj1PoSWQmOvftmCs2LcDe4/opJFi6ydrc
DdvM+nEs0Qa1H93da+2OLbhD4bKeDdK9fqXD0ZO53+uoqV02SG2Ws+bqeWxC
zUfnpdNIuGFbzuPL2Pk8lVaX7BDt797me1eY9XxbLHpvh1R3Ws/dvort8OGj
0razyDQtfX/ANeZ5ULzQV3MWxXuIjRiEYueRxCji59DGLRKU6Uhs8lnlPGEn
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
hST17H28fx3zjjJJJHjC+MVtnksFWsotVi/sUWJ4B+RRQZe+WrOKfeL1y9N8
+VQwU96Qw5lCgj2K2wILn1Mhfr5VczkVn5/0H2eyi6mgVP5uTCmNBN48JQfv
vKDCZEhbgxt2/rgh79VSKlzp6lQaxN6WGZhu+IoKm6ptql/eJeHvjOGKqbdU
AOPQtYP3SCAaWJTxrYYKJoO65r7Yu6cDQrpqqWBVYzabje3VJGRQWYfr2fFy
cBX7e9DBL5FNeH05CkrvZ+B4vwVeB76n4vdX3g2t2KKnBrN8mnE9lUfuz2Ob
qF9wsmrF52tn8h3tTBLU/fdoSaaDCtqJ+25/xB467dcv9hHfH+6ExXnsf237
3gh0UmGOczVjcxa+z/l94StdVPAwX1dhhv3IboPw+x4qGMSOSHRg13X0rlT1
UmHCPzt3Gvs7PPj67Au+313HPLizcT7b4EFKP6634dRHhB3V5ani9I0KFacz
+zOxRXjpRuZD+H48lBErw87VHXTU/Y7XW822oAW76pXhXcoIFRRZvEoWsPXm
OUqFRvF5mUxU4M4hQbd8ZTthDNcX8W9BFHs6U4bwfZwKBEVpT8C++GVoW8cP
KjgUSpGPYhOFUlTfTOD1/TAufRpbLJzT+d4kFfYPqW+6ip3/5nVI9BQVCgRY
OaKw1VZ80y9P4/vlsqKdgm3kNvLBcoYKi5tm8p9h9z1I+6n3G9/PC5t7KrEd
vh3j2DOLzxu11aQBe05knRj9P/y8ukgV78AONHmrJjxHBftwZfUv2DzRF4xJ
81QYF+fK/Y6dVK/osoBt1vrU5ic2mXU8dGSBCsTuvc6z2E/33LvX+YcKImrl
7xaxNX1MX9Ys4vtVuNNjDbvpyfqPz5aosPP5Uyf2+/i8jtVOZi5TocobXpCw
h8QDiLErVBjsHz2yDtvNYpd44CoV9JIf79mAvXx7Yrf7XyoMcMaf58MOa8k8
Zr1GhV69HBZ+bH6Suevhf1QoV/v6hel04LuuwUIDq3M6JAFsxsX6DBlWGrRT
eoOY7SXPr5SLsNEgJyjZcCO29pRyJxc7DdK0gpx4sVspU1OL2J0jMd082BY2
OaRxAg3y8qvjuLBHky0lPnHQoCl63T0ObO+P/Op1RBoIgtMKCzbL+iaTFyQa
pCt0PljB9UfqXHPL4aRB3HWUM48tHKgWfpuLBiCXOTONnfPyV2YQNw2mqycj
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
bZ/pxg==
        "]]},
      Annotation[#, "Charting`Private`Tag$96019#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$96063#1"]& ]}, {}, {}}, 
   {RGBColor[1, 0, 0], LineBox[{{7, 0}, {7, 3}, {10, 3}, {10, 0}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{11, 0}, {11, 3}, {14, 3}, {14, 0}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{17, 0}, {17, 4}, {20, 4}, {20, 0}}]}, {
    InsetBox[
     StyleBox["\<\"Breakfast\"\>",
      StripOnInput->False,
      FontSize->12], {8.5, 3.2}], InsetBox[
     StyleBox["\<\"Lunch\"\>",
      StripOnInput->False,
      FontSize->12], {12.5, 3.2}], InsetBox[
     StyleBox["\<\"Dinner\"\>",
      StripOnInput->False,
      FontSize->12], {18.5, 4.2}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Reward Value\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->{{
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.015]}, {
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.015]}},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{933.636363636362, Automatic},
  LabelStyle->Directive[
    GrayLevel[0], 13, 
    Thickness[Large]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Reward Function for Meals\"", TraditionalForm],
  PlotRange->{{0, 24.25}, {0, 4.15}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["\"0:00\"", TraditionalForm]}, {1, 
      FormBox["\"1:00\"", TraditionalForm]}, {2, 
      FormBox["\"2:00\"", TraditionalForm]}, {3, 
      FormBox["\"3:00\"", TraditionalForm]}, {4, 
      FormBox["\"4:00\"", TraditionalForm]}, {5, 
      FormBox["\"5:00\"", TraditionalForm]}, {6, 
      FormBox["\"6:00\"", TraditionalForm]}, {7, 
      FormBox["\"7:00\"", TraditionalForm]}, {8, 
      FormBox["\"8:00\"", TraditionalForm]}, {9, 
      FormBox["\"9:00\"", TraditionalForm]}, {10, 
      FormBox["\"10:00\"", TraditionalForm]}, {11, 
      FormBox["\"11:00\"", TraditionalForm]}, {12, 
      FormBox["\"12:00\"", TraditionalForm]}, {13, 
      FormBox["\"13:00\"", TraditionalForm]}, {14, 
      FormBox["\"14:00\"", TraditionalForm]}, {15, 
      FormBox["\"15:00\"", TraditionalForm]}, {16, 
      FormBox["\"16:00\"", TraditionalForm]}, {17, 
      FormBox["\"17:00\"", TraditionalForm]}, {18, 
      FormBox["\"18:00\"", TraditionalForm]}, {19, 
      FormBox["\"19:00\"", TraditionalForm]}, {20, 
      FormBox["\"20:00\"", TraditionalForm]}, {21, 
      FormBox["\"21:00\"", TraditionalForm]}, {22, 
      FormBox["\"22:00\"", TraditionalForm]}, {23, 
      FormBox["\"23:00\"", TraditionalForm]}, {24, 
      FormBox["\"0:00\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.789016351001382*^9, 3.789016361662755*^9}, {
   3.7890164509712873`*^9, 3.789016539979431*^9}, 3.789016587412795*^9, 
   3.7890166576160307`*^9, 3.789016857394718*^9, {3.789064949290634*^9, 
   3.7890649843306303`*^9}, {3.789065044263297*^9, 3.7890650504182844`*^9}},
 CellLabel->
  "Out[913]=",ExpressionUUID->"57d4b1a4-8e69-4763-a441-17fdd7beeb77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"smoothstep", " ", "func"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"3", 
        SuperscriptBox["x", "2"]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"6", 
        SuperscriptBox["x", "5"]}], "-", 
       RowBox[{"15", 
        SuperscriptBox["x", "4"]}], "+", 
       RowBox[{"10", 
        SuperscriptBox["x", "3"]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "20"}], 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"70", 
        SuperscriptBox["x", "6"]}], "-", 
       RowBox[{"84", 
        SuperscriptBox["x", "5"]}], "+", 
       RowBox[{"35", 
        SuperscriptBox["x", "4"]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7889882788454123`*^9, 3.788988372438192*^9}, {
  3.7889884094924755`*^9, 3.788988475276924*^9}, {3.7889909259782553`*^9, 
  3.7889909419459224`*^9}, {3.7889971740358067`*^9, 3.7889972292844505`*^9}, {
  3.7890111387588816`*^9, 3.7890111430789804`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"7dc02264-70a3-4096-a0d4-6b1fde6d9a96"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
rZ7+M84s/XkI/g9IADTq
        "]]},
      Annotation[#, "Charting`Private`Tag$34940#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
TCST6utrg3f0no+hUQ0Isyu0TpL8gMEoNfke3bf4tedxn61PB3R5t+j3v26C
29aaglXVHyHswal7ubcFX57WhDaLfwLzTr/9kFo7pu3b7m70/AyXie3/vUnu
wKa9nLPWpV3gqk612TPciUMp4jbPVvcgSZ6hGuvQhcsip9d/M/2CqU/CLSrv
eiA3cuy/jsNfIRdwR2n49les4B3lqvn7FROFsus52r9hYcXdHInEb2g0jiq+
NdeLc9tLO5do9yJ6PDa9WK0PjzXPJJX/6oW0It97R4d+TDKElg/EfEcZR8Xr
Ob8BFBoc4oje3we3dSyRq8k/4KMR+KBgoA86m6e4w5IHId6t9TE1sB+W2wUP
3r81BJWdAdFrtg7AtnJmxSL/YZiue/+HvXUAAf3yp3gNGZh8Hd7r5PcDM3qK
nbxSI4hbaOamLzmIKdmnDZ/aR7CipzBlQc0gjD4uOnXOmYlFXn6Gys5D4Nqz
oY9axALbQ7OcXv5hOAmcNPf3YqFupMPhwcphTBlqWJr7sBCmqKdgKjiM0Y9J
/Gp+LKx+rp7dLjIMoxZux7EAFhTqZR6/khnGK0ch2cNhLJj2j2U8pZH12jbX
ViWw8EI86L6n/TCaVFYH5BSx4JKQE85fNQxbzmqhuGEWimcSgqpqhkFn038h
NMLCjNl1P5d6Em/1O8FEJgtBEqcutjQOw7z+9Nq7oywkPuE+FdkxjD3fX26/
8YuF2nIrOX4mud7l6KDcAgqC39e+4RNkIE4+dSBQkMKpA5y1lUIMfLz+h/fb
GgopmWPlziIMTF0NY9+9loLc+Ya85vUMHI06T2OIUNg7eSnhtjwD5gu1pNUk
KNhzttjxqZP1QhyGMuQpvNwUzMXnwMCeayKy0XspKLWtfhvpxIDva26Fgn0U
cq9m3hZwZSBii61sqzqJ97ZOSNCdgVE/p6XLDlIIdlwkL+rPwK6QgmuXtSjo
5/vryccwkNv9126NAYUfKl4JmuUMsB13n0w4S8H8O8/pN3SSbyUzKMGSwqfQ
RInD1WQ92rG18VYUGrtKnxx9xcDzD6IHo2wo5Hn/LT/RQvajXZp/5RyFq1WX
v1sNkHziPyiKuFLg03KR8182goj+7uY0PwpJlbz/qfCN4NWq4PFYfwqKytlD
P1eMwH1f10TINQq6MoMZFmtGIBglH2cfSOHGYjPxvZIjCK5QubAuhMLCas1V
bCojMFfMyz0aQeHXbnE2bytyPP1hXu89CoH55T07bEeQ9YkzOe8+BYFNpi+Z
9iT+wUNefg8obBOK9TzlNAKxm0fYhZMpOE3xTKpeIfEDB/fvT6MwVDA1NB0x
AnpDp/SZRxS65JtaPcrI9cePtH4opPCAwefFUTGCUfdb3zyKKJx5aCAdXjmC
Xcd7lgkXk+slO9yT6kg+AZavTj0n+a3tEalvIut90an+UELqwT1iI9BP8le6
vftBBYWDA5wzT5cykesKi/BXFJakaabvWs5EnJbD5pUNpN4WobpV/EwsT96z
KZHYoHtZcvtqJhTFS7MzX5P71bby4Iw4E0YJoYyCRgpXqiQiNJWYOHpzsjir
iTwf9yHZZ8YEV5kH/58OCuOe45wWFkzQHQTMrT6S5+lEJqP7LBPuO8fGmohL
eXnzO2yJjV2H0zsp1Pn27H3jwsRoeaDCoc8UPp/xOp13neTT1nvFpofCOtLJ
N4eQfLZPG78iNl/bL/0klEneC6dAmS8UBlp1WOkRTJhLB9UNEI/uF/aKT2Ai
mGdqzuQbhcUbShN8nzIR0dJdu76PgiaHo/e/XCam0iufuxOHfVl/xjOfxNvg
zv6OmC/uxka358RCQTGX+ikILzF5blPFxB4t656KAQpbGVPtuh+In0mZbxsi
72OOEp/ILMmHO3ZVCpNCkcnUsiY2FgaZr62GiJctLuG5xsGC+U4muyKLAt1U
jWuIi4Up5RmJUuL13PvnClaQvmV4UrKBIvux1GPqbGRBbPQ6veYnBdryFYy5
TSzIjMQrs49RiC1tG8xTYJF6tf6nRqzBb9QnuJ2Fo1xd5XnEjyrMPvfRWLBl
U7sYM07BQeh8w1VDFhSretswSepdK1+/+QQLSSHKcCEWdaZqeo1ZoLe68qYR
N9W70DVOsxB8rK1v0S+y34sexQL2xFJynlXEv99fT39C+uguKxkusSkKR69o
pJ72ZyF3w+VtmsRZ0tzJ/IEsxA0wmp2JTbzCE91vsJBl9+hcJXGZbHTU/jtk
v/d1ZU3+UPANTPbrekTysb4R7fKXwtLLnFoW2Sy8khnfdJs4wfYC/0AOC0Y5
jw1ziPO1lVOpAhaaZn+YDhMP8DXXLKhg4blglunJaQouHDvDgypZpD9kRF4i
nptIPMZTQ+pnUnz6NrHgR9uBlQ0kn+ipylpi7ftsXBtbSb1SHUs3zlD4eMu6
KbudBY0Zl/K9xJZ+jXFbP7LwVcbKzJjY2zJuo2o3qf9SHvcg4lxZRe0jP0g+
V3Zs+EK8qvj0zYvT5HzOLmGvfxRSs2qP//1H6uNzVeMWsWLCJlEfNlK3NytE
kok1vX7nBC8i1t9ZU018Vf1W811eCsuDukQXzZL3dcdkvBg/ha+ipVkCxDHS
J8+kCxCj7KsEcc6SDeNPyRww/6BusZe49325QBXp81//HilxJ3aslOw+KE3s
t6ElkHgm70b6Gxlyn4dtHkQSr4w5rtRO5oCYn+6px8QapqwTgztJnrxTVzuJ
2w4bil1QIX2V0/h4H7EFSgZ/qpK+xhnAYBF7rr/uMU3mhvljJx2OOQrZgyJ3
l+mQ8zk05mSIg+8FmvfoUojwqHy/ldhSnyn1VI+sv87BQJVYuKws9/AJst9d
lLsu8ZST5CURE1JXNx6RE8StUmG7maZkfQeW+2niG7dO1oWdIddbx5s6Elvv
rw41JXMjwil34BLxvj+yenK2ZD96MvLexH/O/P385gKp72j3eCixrVL8T24P
CnuU/wWnEe9nsBV/ukI8kLfqEbFoku3VR97kuTQSt88h/rBkF6dWAIkn+s36
BXFe+YPGNUFk/9YR/OXEN105I4fI3GgyKgiuIj7Q/UE45BbJ57JI52tisUha
r1EkOZ9RW/iOeOZgRqbMHRIv/qFFC3FB7sWtrxLIeTdGN3USR1h1/44lc2b5
hTKdLuJzQgde2iSR3xui934hXh8goMGZQfIJV3/SRzy76+rSjqz5/QVJ/iDu
ZH5vyXhMXFtwcWh+/RTtuEtPSV8sXpDMmF//RP6pg89IfLHHmUzi8zxrJVYV
kN8XDN6giDUq/Qf7i+bv/4T2T+I5WX3XwDJy/JXN+QniT19e7DpG5orvDo13
k8RF0eKzklUk3uEh/t/EkZoh1RM15H6JheyeInaYHQ2uqSfP3zlrzT/EWvlG
utFkrvgm0NX+EkvZ0ldYviX51HSsmSZmE5Hp3EbmSsTTkZ55dzXfus/RSo43
7rk5Q/z8+u+zre2kPrRVG/8RR+8+vTGVzJWklpzceTuN1rFcyBwxX6wnPUus
nU7+xvTMP4+00HlLm8R48JO5YJ5a+nXeC3hnab3fSbzzvDJzxD3VVgvzSJ/3
jfY5M+8S97cNfqTPO83p3553jPyOW3oj8+9fc+G8nXsTDcVJ3z4au6953jqx
C4V+kr5t/ovqm7eMzvkv9Amyr5n1Y/NeyN6WFvGb5P9b6u+8vxbutjcnfcy8
X3123mX2qZsVSR9Y7vZqbt6xov9Nzn9zsc1/RvE/eY27+w==
        "]]},
      Annotation[#, "Charting`Private`Tag$34984#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV13c4Vm0YAPC3EIokysoeRfJJRZFz27uQEUKEqIgoZJNRRlH2yFYIZWe+
towkoihk70N2xPe8/nmv33Wv5zkObty37K9Z7ScQCEP7CATSp5rVdDdxRg97
PNzVTfVp6BK5PKvDMMt5mFy4qnmgVU/6XHJsYhGLAlCeCPlypiFKevwEn6+L
wFX4+YD3cEBApbR6Z39hEosuaG36vkqo+CbNF8qeucdpCKGHLB6c852V3lGz
iDEXMAXrP88+Zj3alp717200jzYHPs2co113qbHrlhvVL1ksQaJ+g5km5xjW
KM9a1pB4G1rDD/g91+fGRHml369y3oGJowqBtDZCWOJ+s2z+9HvATus5S6V9
DqMa9UvTF7gPgvObuQ/1pbCKka+dDboOYKNN48P3RQ5z0LJUM45+AB/MrmQL
qapiAsS15tV+R1jOVfSkydLCfv0XJB/G8hDybwnwX32mh0UmMxP5bzwCsafh
wpx2NzA1upzLNYnOUO04+IT5kjlG8Jb6qD/kAk+aRfAXJlZY6WLHBZzzMWxU
c+pfFL+L2ZqaFgaZu0F6I8sH5T57jOczLsKV7g6u3ORyK6ecsO/Svrnl4x5g
xdbrwjTsjD3PO3pKW8ALyNITf0cxu2OK7BkZM9bekMWu3DI34o15NccfqdP1
gWAJzoUDaX6YodfY1bA1HxhUvDd87k0Adl5cOMww2hdiepfb7A48w+gWH7bz
S/jBsp9Mg1lzKDabWU39p98P5rv2fd1yDseaTA6o1Lg+gcRQmjne+pdYyjHN
wGAWf4iKMgk2VonC3DtjGvUr/KHLyjzuPm0sph8wsp/3RgAcmyIsyR5LwM5K
C8ri2wFgZWokMWjxGqNZe+BdmRgImszyk3m7KdjUu4rqIOkgmKsp6iaspGH1
lmQ7OkNBEKfSGMlAn4m59ka6znM+A1eJCr2HPdmYTuiv0nLiM3B/6nXfwuMd
JqIgsOZvHgyCJlkuugYFGPXO/XPa+0Pgyl0R71/nP2DjRWUP2NNDQG/7u2To
j0Ks9h7h/Yx8KFSfYGH0SijG4nlVF0vGQ2F4tS5yn0cppv1q4O5Vgecw/0l5
j+V1BSaszpvN2vIc1oS2xO6PVmFUZLZTk9YvAKO4/+qrWi128+Puh1rdcBjr
1XrYplSPaRzj7ebPDIeDynnHH5Y0YJIPlJdC1sKBSlmNme1SE3ZMMFzEIDoC
yNlnBd39WrH9AcVXaiYjQExBxemTahu2NPLdlk/iJShQPA8CwQ6sPZY7d6n/
JTyKMWjcZPmCla8qtumfegXlpm+s74t2Y1lad2eqXF8BM+9bpTe6XzFfqqKT
z1gi4bzxt2be1l5MSDniaaFDJDiN0BoqXejDvgbYzwy2RMLb/4ivKor7MT4y
4VwR5yjQu2FVujY/gHXIHqQx6IyCN8p/fi9l/cQe+Uzb+vJFQ5LhrkTWoyGs
+V+GSO/XaPDX+FM3LPgbs7/85MU/wRjYYBq2PS82ijG7my8J+MbAp/9cg08r
jWF3NtkLH/8XC2S3I+ivvZzAaFaiL3CGxoFxzl2R5cZZrOTso2iVsTioNfab
rz83j5k66Gw8kIyHtYaE8ZX3C1jBAt3Hxul4UBd5nPHn3hJmILzIsggJEO2w
GSoqu4wR7nW4McUkQEDwxiNDjj/Ytemnl+8qJoKH9Q2+M8sr2LaAddKrxETg
fd0YcWlqFcuwUtytWkkE/3Dnq6sTa9ja6D4iXVoSOG4YmknvbmCxv9zkS3Zf
w+/Yx84lyTuY7AnDjCG9ZJA60OLfOvIPmzWSoKDKS4YNtmNpJ4X3MI75xxZ5
Z1JgScN4UWuZAPZ3xPkJP1PANDr8ofwsGTQ+zfwWSZkK4R4lw9ul5MD8ljFQ
8FwqZKLXqvwZBRAn/0xeC06F1GWp/wpkKeGoZcHbzItpcNarzqtt9yDcfsJh
KGmZBhQDr32/7h6CyrQw6q4XaVC0ynCnjYIWLH/fu7s5mQavo51oyQXpoMT0
lLB6VDq8SLf6TBinh4NeMT+Hielw1qSV5ZHvUTBNOhD2cD4doldlpYZ4GODA
z/GFJPkM4Ityutv1gBEMDFMLlpYzQIxw6tC6LBPgg7oH01gz4VDdAX26VSYI
NKWy0pHPhMEn3Fdoc5ihyMKetTQyEyY+hsMiNyscvi8d4C6RBWlMvNqf5Ngh
c2lpWNgsCwbqMl+FHuOAy04ZkkNPswBAwSZjngPuuh5akhnIgh+eOaEUulzQ
5PfD6IDnGwC3x2MZQjxgTBFWUpb5BvqKmHh5s3jgT5DMkTuf30CsNv8kBR8v
cIW9aWrnfAtr50wrj5/kA4+YR6IR9W8hPtN0UkJdAMTe0R84QZUDwYHvOASO
noZPIk1mnaI5oMf/Usq97DSYfXCt9DLMgcu+QcSCm8IQVjrs8DsnBxxr/H70
lZ+BaWLeYNaVXNBOvYR7KYuCt7y5uIFzLmDkJleYskTheDNjBHVyLmzleyfA
gbMg3+6uZLuUC0JFFve12s/C62+qH86+egdmQ3Fhkzbn4ILBv0Njle/g3AeW
pQe956Bj4P3tyPF3MGS3aZ8vex62hplObFzIA85Xwenq3BdAd3YisOp7HlxR
pUgLWxOHQ3u+xsocBVDkGhqzvCYJsXeumworFYDDN5qJn+5SwNcrbEZ/vwCo
HvWU5ZBdBiy732KwugByj8gm7DJLw8fs6JIykfewHjBUu2MEsKAzX6X++T0w
HnwbTMYlB+ep+6Wx0fcQI1/y9KCTHLjV1NWIrr+HDfWiNr4WOaAUjCEe4/gA
S9vNbQmO8sC9K9s4bPcBGHZo+770KYDe25h2J9pCCA8zZlHoU4ZEEz+N29yF
sEp3Iz1QSgVGj9p1GlwohKcqk417qSpg7ynXJW1SCGtnpztfO6rCs2sLXynz
CuH9ephYF486VO/IDSRoFMFDmq3GdeJVIC88c+O5WRFs1leQFUlqgpo180+f
h0VAdSDkeluJJvR3L/yySiyChcPX66gNtGA5K/b3f/NFYPTE0eutkTbway9O
N4QUQ+cehbCcnw6weitLWqcWw2S9wYe8LzpwJC8l5GBZMeRpTsRtc+rCXyod
Ee3RYrgatJehUKcLX4hlTkMXS2BHmle89LA+uIn67m5OlIB+b26hXZ8B2JsO
aCZul4Bt1mPf0nOGYBmKftjpS0HIzOrC3whD0JyekA+8XAo8cWrertpGwJei
9ozhVSmcjv/B7PHzBnymY2QUkSmDhVjNzh3em9AgbWfVrVcGwhfzv+ZH3ITy
e82lD++VQagap6kkwQzSW1wNK6PLgO4Cn2Kqgxm4ev96rbJQBlpjEfzUBubA
g2cJWsSXA8HU8u0fWQtw+XwJYlc/QvKkXBExyBoOi5RMfKKqAB06R0anDmvI
CBMN3T5RAff7PrcV0dtAt8bJH6aKFaCeUPdtNMkGTrczOvFHV4CnrkAtdfUd
GG7BswolKkEuZWyKlskWlOsyD3e6VYFmgaGwYrIDDHFxl+w+r4Jk87ZUgXYH
eOiTeEM0vQrEBB+3Gm44QCq8evuqvQoyZzTdS7UewHa1j5zRiWrQeCJWdI3S
EQoqbjhPVVfDtBz7FTN/J2Aqph/at68WCPSz3RxEZzAO3dYdP14LjFVhQk7b
zpBmOdHeLFwLDn6WQ+ckXED42MePIQa1gFUHke0UuICcs1nUsfe1YBHsvlqY
5QriidezIv8jwts5ux7mbDcwN80yeTtEBI+7lyfekXuDvxpbXNwMESqlZf4Z
XUV7lnh4b/AqEY7MPyj1i/WG+cNu6nYH62CH1dKAi8kHnGuvXBITr4Mh9l7O
ugIfCOVaQ0erg6NBQdmV875QOirf0XW5HjybK50JMf7Qp+K7HKZcD1W23zPI
G/xhPb/muMa1enhzx7VAFfcHCfdL5q3W9dDBrcIWoxIA5Qz/rRNf1kP/R7kI
hd0A+KjAylU4XQ+/nz+eZnAOgqqsJafIyAY4/yep/EtsMPykEYm7ltwAlxxN
hzU6g2HH8V7NkZwG8Gik/UyH9iRpmKQKq20AG4obVXdtQ6CmfzApYLYB/pwr
nX6sEAq1VC0tzjKN8De+MYN//3Oov5vEZjjfCJc9tlZdBsKhaObePdP1RrC6
pTYmuREOGTaSlRaEJtDxPHSEkzECAm73G91nbAIBMxpb9asRoHKLPv7J5SZQ
9g/gEG+MgC7DAOb80CbQ9ZLtu1X6En6q2B0jO9MMyjcnTrwqjoTOFikrKolm
KJKkK03+Fgk1SgdLaGWbQbqRoqxrPRKSFd7oMus1g8Nh8XPxl6LglszvV2c8
m2F3PGdygBgF0xJ6Rw06Ub8I71yWvmhYE5Cmy7NrAZNVMsVdtjjARuVagl1b
YFK/82KTQhwEJql42zxpgbfuiv+V28XBcUZdnDeuBS5XqTvxEONAfN+9rvjG
FlifG/A8aB0ProOxL56ytQJ/kl3ypeoE2HmxSmf5qRWUqGeF4kJew/6t3CNs
/G3QY3JES8goDdg65VbgvzbonjmtGueYBudTf3yzvNQG9DwuFuwhaWClSpmQ
f6UNPF/7HbOqSoPWuFv8cs5tYBStz7vCif6uS7JI3mlpg9dKVg50c+lwwiPQ
ouxOO2QOfP3qFJEJ4ntmpTr5HVC6TnlNhCsbNK4Q/RTLO+BL6ki5p3Q2WCRw
akrUd8BU5PX2UaNsCJcYmmLt64BAdhWKxahsmLG/wTL6rwPMDMfUqGlzIHFE
z8PhSidcsLVc09/LgX31anJh851QbpIrbrv6Djr8z39uFuqCO3MSojnh74Ez
fG4re/EL6LIH3k8pLoG5jeGhb6Jf4cX1GKFshUrImK1sO/y8B/YGM/4p0tfB
YfY3+Ph4LzzLP+7sMtAIoXdKbqfw9cG9D2NLdtWtsC6TO27j3Q+a0h+2c7Q7
4aFYY/Hxhu+wb3CR5tvKFxjObwzp5h4A4dy//nLRPbB9tzdB0G0Qjgd+X7x4
pQ9Oy1Lu3q78CUROqx/T899BOY3b+gPTEOgf4o5L6h8EF/abPL+Nh8HhDOGD
VsIQCM/rHeq/MgJV9i9yxXNGgIFuiarx7wj4G8hle/OMAnltQgFv4m9ofnLt
mbvHGNw7X/mDWn0UCAMfu5hmxyFX9VZKzfooZFzp6FyXn4S1OdYjk9FjINor
lb3sMgUlOspkkQrjUGznxshSNA3eKgHJxZPjMJLTFK3RNAPcv9S+pwdMgI/R
Jb7I6lmQlPCPZBGbRP8/VN1zLZwDY46urX09k8A8mMy56TUPa21how6+U+BQ
xjW+LLsAseSmD6/xTcPIIXuJhaEF2LVgutAtMA2EQVYe/t8LYNnwZU1TcBq0
uuOSb4wtgKifvMsVERS/3qzTOLUArXun3FQuTsP7nolM/6UF2Pi74o1pTINP
BiVb3b5F0F9+FiL0cBpkzkbkCfEuAsNQSdr+xmkIN1L612G+CM9pPD3LmlGc
QaO8x2IRDkopGNh+mgaHxum+71aLsD/2K23f52k4UnNdZujOIvzRxl2zf6Dz
ast8/vZgEb40ndLUwqeBOF8s6Oq7CKF5CdtJrDMgusobG5q8CBSevrqXHsyA
WXzuxKH+RShent+qdZqBI4+8vr78vgiWtw2SlZxnwKH+hz3zwCI0av43q+M+
A1xSTdWcvxbBn+eX9/0AlP+76QPH2CKQt17MTY+bAZ9qc/2hRXQ+hqV9h+tR
fwvvAGsKHAqDbryJbJwBLbpJ7aYDONzaadZga5kBmWN3f3JT4VA/kRRzqgPl
x0Wd6T+Ig1+5+hn5vhkYSeToFDuCwz7TNwaus6h/h6J1PisOhGzTgtGjs6BF
2a1RIYJD83z//eRjsxD+oCDvoCgOoaLaIsbMs8ClKZNleBYHpnL5vG/syMN/
zVbO4SDSciq39dQs+Ki5HD5+CQfjiT9Z+dgsjEye+s4sj8NH7qDXbndngaD8
opBZHwcvK4KphN0sEMumVKSv46CQ/Zh91X4WZLr7QswMcPgiapto9wj15xJj
TTfCYRq04818UP0+clvmmzgcN2WLVopGcdckr0ZrHBzjC8KO1qN5FE9UTrri
ULYTH1TfiOInxS9yPMZhxzTQ17EFxa+5rDO44RDEa/LoaweK91r93nbHIfHd
QZOX/eg8DLr+1d44NNVYCR9dQPnlT+OpgnBgHmNrp2eeA64eha36SBxMFCmb
6ljnwOdPwfGoKBzS3vypecA+ByOe2iy3o3EQtv1U2M0zB0Q/rm7yWBxk15zj
I87MgRm7EeeFBBzuUn69Qy8/B4Ry1wHzVByqTz+lor+P+tW8+rv0DgfxXqbO
lw6oPnjJNCoPh/cebyIYnVB/5oHfF/PRvM5mVmbXOZCh+aToWYDDU3uKM5x+
6HxC+jHbH3C4VuSnfSYaxRPezX0uxWFK0jNetQZZp6e4txYHszGam+1E1N/q
KYcpEYeBkETeKw3oPKerKyaRO35WvtNqRflE4bC1OvS+ef2tuf4Vxb8O5FI3
4uBR7zJmNTkHKW3epjStONCrOQr7HZ4HGVulwz5dOKTU0R2SpJ+HFCF7n7/I
opfyZpYZ5oHrEiXLwy84XD01nWXOMg+E9XaiZTcOwQdMuWX55sFnMX7f5R4c
yBtUjxMkUf0AF6GhD4dXklOrZZeRr72TEu3HgafQv8ce5oEY9SknEVkmtTZ8
WAH1XyM76fQdB0/vC4dqNVG+xZP84wM4rEtxE7ysUPwqe+HFXzgEFNUMXbBB
84qfP4tDZjxtXL1wdx5G0mtSt5DPsca4mTiQnBlTNoSDwybN2mV3ZKOU90Ij
OMwUb85sh6N+gxWai6M4/Dzzpedx1TyYBYuRL0/hkDxH70lWi+ZvFyWJT6Of
z2wdgbA6VM9h/sYdeYav3zWlGdUHT9GSz6DzsQ2xt3xB99kAycOz6HkenLdm
nEBWf59BNY9Db8sZ+tdTqN4vPFwROTbAvuLkLHp+OeIbvsgc+1ZopHDUb85F
YgtZeHPrg/kWmj8lHf17AQelScqdfNoFMHNZuhmP40CdoZp58cgCjACdchdy
h3nI1fqjCyDzyLGIbAkHnV+HU78xLQAXUyrHPWSz3mNKO9wL6H3u0Tq/jIN7
PW+4qvgCEMpyS97/Qe/na+AbN10AHz+effprOKy4rVCam6N4wb3DHsji19/M
/bJYgBTs0cdU5Eo6uqJ+G9Sv6uTcHHKzz5BsuyOaR3jZ6b6Ow+Atz5uFgeh8
s+RHgzfQ/eCs/H/PUPzCgmwOshnbhMC7ENQ/ZI25DXmyR2MxMxydX7q0hmoT
hyWFE55x8Sguz7Lli3zgZGW8Tz7ySlK25RYOqmT2Xv/eo+fxyzTcGzl0mOeW
WxHykvnJeGT62GDBh+Uov9nO5jPyCWqjcut61L9ZSencXxzE5ja/Xe1D9+W6
ubCI/Kjl3cf278g/6NkotnEoTzdLUhlE9yv8vY8NWdq41VJuBNUPkP9TRFbp
jFm5MIsc5F4ei2xSIE7Pvovq5wWrzu7gUGq0efgLYRF8wj/KKCIfPlBB84Rs
EYitf9wNkInG0lQzVCguTsPihcxzUGGvmAHFc28TmpHdSij+WR9Hpviq0Y/c
Y9byl5VlEQjqInrTyP5laus+HKjeTieR+h96fpbaCxqCiyCDWR9XRcaOMMzt
nUb1pQ91DZBjKnunC0VQ/fdYHWtklaMG48znUTw4L8YfOafWdHAcQ/2sMlSq
kO+z2n7y0EX5fHXfuXbR97fpTMt/11H8NKWTMDLnA7xx1BDVh8p9l0D+0uJI
VLmJ8vfvUFxFFnv0uIzxLso/Rb3nghzMJVXSYovipWH7/JDH2ncK3eyRXat6
QpAjeXzyRx6i/K7bM6+RN7oCM995o7jAwkw9spa7SvpNP2Tl5sftyG8FDqYe
DUAu6v3Vg2zkGZboGozuz9bGN45cJRT5SiEK9WPyrN6/h4NPQKrvzxzkOyMv
LyLTulCqmechn1SQwZDjbeyOThYgl658lkcuUr+UjhcjUw9HXEWepO9u3F+L
5jlafLyF7EgmERZUh+LpWR7WyHuriXo0jWg+jSufLTLzd5vJY59Q3P8G7yNk
9dcEKsEe9LxM2WcCkL+/uP0l7xtyzefBZ8iWvh2xYmjPIMYKlYYhe1nGCl5G
ewXhjCVvFPJ7IVF1zSnUb0NjNg1Z+kQ0Q+8Myn/eyJeF3Ea7M2gwj/L5B1Wz
kceWWmxvLZPuq6NXgHy87ObzR9vofJFX3SuQ09826f/9h/JHUhirkUXjT3N6
E9DvYT2ThFpkVc+NgqdoTyG+s3NsRO67b+JKi/YS4nXbhmbkW2YNMi/RXuJT
JUT2CdlD/kV3Ah1y7XmtTmTqC2txXEeR3/GbdiFHC9y4lcmI+i9yGXcjF1Cf
XMlnQbZ8LPgNebSrhrGeF/W3vnn0J7J9Hd8vJQFUz6GX/Qt5pzA4s/0U6Tyt
YsPIx6L1xb+dQXvPAz2OUeS0oKpdQ7TnyEzt9x1DFnnM0zIkhuoL9PvHkVWM
F69PSyCn0ZtNIfde0eWyk0T1/JSvppHNoWJ6+TKK59RWzCC78QQ+3pZFcbHn
M3PIedPsCYc10Px/FB048tOkALOhq2ie3F7TEun7d22BP18b5a/EFi8jn6iq
en8F7UUyQocerCBvOvA5s6M9SObuC1hF7uEPlVowRvNCDpGvIQe/uNEcegv1
t7jgsI58W6EhxNgKedufeQNZbktIW9gG1YseKSd569bfwXY7VG9HN7RJug/T
rdQEB5Svwma1RXpfOj7dvueEzmP9cpxkG/G45YNojyJSjHf+RVaYI5QNoL2J
yK5xcRuZM8XGI8cL9UuRTCT5r+4XWTdfVM+6skVyH/VFSjV/lN9cpr2DXFiT
3MGC9iqfiE/pJD93onw58wzlM9gskaz4q+/Esxcof1XO7R8y10ts1OAlOv/g
RhnJO0pZb06hvYvoK7RM8vdtWrvNGFTfwSCwi1z8/pFYazzqLzenT3K41a+N
mCQUPzL1hOR7rIrV1ikoviuVR7JS1zs/iXTUz429h2Qef0YVyiw0L6R6jeTd
ix60/W9RvE/j2B7yj4Wxr1m5qF/837MkF6epxzqjvUwmf1Wd5PDrRSZKaA+T
8bO2INmWho33eDGax+rlSrJKnd/0RCnpPLdCSOZzns0r+Yjyn0slkrwndM0p
oArN0zqbS/LA8MeLemhvI6bblJNcGsm9y1eP+t2kaCT5peqzhlW0l/lMC34m
+f7u0tPGFtRfdKOPZLUig6uRbch5oUMk89sQGSw70TwTqgmSCeynfpxDe5lP
S+AsyT+7X7wmQ3uYzwoPTnJ54IZFzzc0/976H5IjpW4KpqM9S0aKZZ1kh6Xm
RcdBFJ9P3SRZPVOkWA7tTcTAzL8k76fbxUbH0Jx/d/6RXOHa+ckX7T0Ey6Vd
kk9p2A4TV1H+xuIeyTGch9ZIn1wE0tcS/A+/mTrh
        "]]},
      Annotation[#, "Charting`Private`Tag$35028#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999999999989}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.788988380716776*^9, {3.7889884149070177`*^9, 3.7889884683886147`*^9}, 
   3.788997169629784*^9, 3.788997229867985*^9, 3.78901135027065*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"5f3a28ca-a108-42ce-8c4c-d525b3823a04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rwd", " ", "func", " ", "for", " ", "sleeping"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dur", "[", 
      RowBox[{
      "x_", ",", " ", "durMin_", ",", " ", "durMax_", ",", " ", "rwd_"}], 
      "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rwd", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "5"}], "/", 
                RowBox[{"(", 
                 RowBox[{"durMax", "-", "durMin"}], ")"}]}], "*", 
               RowBox[{"(", 
                RowBox[{"x", "-", "durMin"}], ")"}]}], "]"}]}], ")"}]}], ",", 
          RowBox[{"durMin", "\[LessEqual]", "x", "\[LessEqual]", "durMax"}]}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"x", "<", "durMin"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"x", ">", "durMax"}]}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bed", "[", 
      RowBox[{"x_", ",", "bedMin_", ",", "bedMax_", ",", "rwd_"}], "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rwd", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "x"}], "+", "bedMin"}], "]"}]}], ",", 
          RowBox[{"bedMin", "\[LessEqual]", "x", "\[LessEqual]", "24"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rwd", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "x"}], "-", "24", "+", "bedMin"}], "]"}]}], ",", 
          RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "bedMax"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"bedMax", "\[LessEqual]", "x", "\[LessEqual]", "bedMin"}]}],
          "}"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sleep", "[", 
      RowBox[{"durx_", ",", "bedx_"}], "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"dur", "[", 
        RowBox[{"durx", ",", "durMin", ",", "durMax", ",", "rwd"}], "]"}], 
       "*", 
       RowBox[{"bed", "[", 
        RowBox[{"bedx", ",", "bedMin", ",", "bedMax", ",", " ", "rwd"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"durMin", "=", "5"}], ";", 
    RowBox[{"durMax", "=", "12"}], ";", 
    RowBox[{"bedMin", "=", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"bedMax", "=", "4"}], ";", 
    RowBox[{"rwd", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bedPlot", "[", 
      RowBox[{
      "x_", ",", " ", "bedMin_", ",", " ", "bedMax_", ",", " ", "rwd_"}], 
      "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rwd", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "x"}], "+", "bedMin"}], "]"}]}], ",", 
          RowBox[{"bedMin", "\[LessEqual]", "x", "\[LessEqual]", "bedMax"}]}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"x", "\[LessEqual]", "bedMin"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"x", "\[GreaterEqual]", "bedMax"}]}], "}"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sleepPlot", "[", 
      RowBox[{"durx_", ",", "bedx_"}], "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"dur", "[", 
        RowBox[{"durx", ",", "durMin", ",", "durMax", ",", "rwd"}], "]"}], 
       "*", 
       RowBox[{"bedPlot", "[", 
        RowBox[{"bedx", ",", "bedMin", ",", "bedMax", ",", " ", "rwd"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"sleepPlot", "[", 
      RowBox[{"durx", ",", "bedx"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"durx", ",", "durMin", ",", " ", "durMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"bedx", ",", "bedMin", ",", " ", "bedMax"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Duration/hours\>\"", ",", " ", "\"\<Bedtime\>\"", ",", 
        "\"\<Reward Value\>\""}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<3D Function of bedtime and sleeping duration\>\""}], ",", " ", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", " ", "13", ",", " ", "Thick"}], "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"#", "&"}], ",", "8", ",", "5"}], "]"}], ",", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"#", "+", "24"}], ",", "24"}], "]"}], "]"}], "<>", 
              "\"\<:00\>\""}]}], "}"}], "&"}], ",", "7", ",", 
          RowBox[{"-", "2"}]}], "]"}], ",", "Automatic"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.7825040367577915`*^9, 3.7825068031416655`*^9, {3.7825332346378818`*^9, 
   3.7825332616356144`*^9}, 3.7825333147708926`*^9, {3.782533444684845*^9, 
   3.782533455725814*^9}, {3.7825335021523576`*^9, 3.78253365049975*^9}, {
   3.7825341257817197`*^9, 3.7825341391786976`*^9}, {3.7825341822216454`*^9, 
   3.7825342910948377`*^9}, {3.7825354144242673`*^9, 
   3.7825356003633766`*^9}, {3.7825356523062506`*^9, 
   3.7825360974151287`*^9}, {3.7825362339384127`*^9, 3.7825362696441126`*^9}, 
   3.782539204483328*^9, {3.7889888809073257`*^9, 3.788988890746349*^9}, {
   3.788988925215794*^9, 3.7889889256965866`*^9}, {3.788988997642686*^9, 
   3.788988998595284*^9}, 3.7890531756550083`*^9, {3.7890533414761868`*^9, 
   3.7890533651142344`*^9}, {3.7890534160081043`*^9, 3.789053547667302*^9}, {
   3.789053641428465*^9, 3.7890536430234995`*^9}, {3.7890538238158407`*^9, 
   3.7890538244152265`*^9}, {3.789056218197142*^9, 3.789056251825117*^9}, {
   3.7890573732169905`*^9, 3.789057700612743*^9}, {3.789057739550843*^9, 
   3.789057765257044*^9}, {3.789064336540536*^9, 3.7890643370251217`*^9}, {
   3.7890643695524545`*^9, 3.7890643897814026`*^9}, {3.789064580153101*^9, 
   3.7890645811961374`*^9}, {3.789064611208727*^9, 3.7890646120021935`*^9}, {
   3.7890646663664227`*^9, 3.7890646669668274`*^9}, {3.789064806449944*^9, 
   3.7890648065868864`*^9}, {3.7897629295091777`*^9, 3.7897629429316854`*^9}},
 CellLabel->
  "In[715]:=",ExpressionUUID->"0e6414d3-b0d2-45d9-8c74-3fa72f8edbf4"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXc8Vu8b+B97y6xIkWhIg0qpdI6GyCgqadEQEmmoaBkNVCoroiXSlCZa
HimaduZjb9l7e36f3+dzX9f5vfxe388/39fr/bq/x3Xez32uc+7r3Odq6h4X
i328LBZLXZDF4vvnf/Xb/KeyWHL0q1/dV7hcLrvgM6196KQDJZueosRijUe+
btWkw5+aBOjaJ30TWKyJyGtTP52cFCxOJ/hqyrJYisg1Xs1suLZYivaz2y3J
Yikh361nuc7vkDS9ffUNERZrCnInrR06UpQMPSHg/4angjxgQouf8U8ZmvXv
f1ORt3jK/dgxS5ZuPBg+wuUy/Mhh/Zm/HWXpnNKFQ1yuKvLbWYveyITJ0h9M
Mvu53GnIZa3s3L0TZOnoD/t7uVw15DeV7ofvTZel/TX4u7lcdeSflIqWRpfI
0sdv3ungcqcjjwrcpGdUL0vbCOu2cbkzkD+fuMM9sVWWBs9hz33rAtQG2Cua
OR3Jn/eiZ+Cqna7fN7/kQc/AU34Y5vZICaFn4ALFt/fcnCOKnoEHRt2YnTVd
HD0Dfyf+fJ22qwR6Bl5fr8LftUkSPQN3Lw2W2t8qiZ6BH0x1eydiNQ49A3d0
zQ5TjhyHnoEP/2WFleWOQ8/AE3T6Vef3jUPPwJeveHqtXkgKPQN/8kSo76yU
FHoGHuZ0UMFjvBR6PhugRKsZdbJnHeCptK+xQc/ANwjdqt9/bZgCz8Bfn/oQ
zL3Ni56BL9UYzBlUEUDPwHe+NFjKThREz8Df/bC6mZsqhJ6Bj2QLnFt6Shg9
Aw+3KRgc3yeMnoGX2MkNbjERQc94/PNq4pt9RNAz8GTPP+vXvRBBz8C5dwrr
fv0WQc/ApxVYzHhaIYKegWs17fH2axVBz8ArD8zS0u0XQc8/GnYtcObUsauP
rJeJ+rQVPQNff2oTn6ZEH3oGbmu/5OFhiVEKPAM/7ugrFCfBg56BewwVf/lt
yYuegXdN+3R9cB4fegZ+yerdctsUPvQM/EralTc7pvOjZ+CXnbaKax7gR8/A
xZbz2n4P50fPwPv+Viwr+MCPnoE7uYVSRTn86Bm4UpXXyuoqfvQM/Mno/Sy5
Vn70DHybF69OXQ8/etbcKZ0+zSiHfV9dqfdW2ib0DFwjQvBPe3gnegZ+x+JG
yzn9fvQM3MPzfL2ezxAFnoH3vjiy9lz4CAWegVvWuOtOGBilwDNwcdFYN5da
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
+zz99qk09GmnYrCYEy9J3zzjuT/m3U/0eYPsTx4vsE+3qDYdfabecvN25kjQ
6t/SvUwXZaHP7mLpR/HOEnTY0vpFwVQ2+lRReJrO5YrT96r6bwaqMvU3iHO6
ZfuKvF+Z6BPiTLwckmHhkYU+Ic47bonS3tLZ6BPiZK/0e9N3Oxt9Qpzvl8y/
2aWegz4hTr30N4vcn+SgH2dSD/ntdYHPukQE60Ww30Zt+KDPntliWPf4Reoq
t5J544uyxXFdIEzqPG36fXdT7Zj9OStJnWc4SK8p9oIUHn8jqSfo/rrr7VjO
j8d/SeoPmzdmb/i1UgjH65L18vDCC0pfC1k4fi5ZX+t6Ze1aksaL42myHmw3
rhjO1hrC332IrB/vN/dMsjEbRQ/aZF02InpzNW9XD46n0/5bH32qvWrXdKwf
x5uS5/k+t20vFiQw6/Ft5Lk02CZqc1UYsw9hLXm+ihBYmpUlx6yPdpPnhGy3
jdpKkcxz/ilyv2PbyQafkGGeV9eRvP1Jd0lOwBrmuQv2/UpSc5TkQ5nnB1ty
HTm/C11+8S5TJ4T5qZQ6915p5he8vtQI10jaq8g7nanT8pN5O6XGp+KiWRZy
qEN2+89T2J7AHB/mT+Ka2yWSp5l1N3zHcWi//0HKnvm9gM/ZsJfntYMwjod9
wtlSZ42k3o7geQE/3b38qctrPhwP+4Sjc9JD5w724Xjgjz1jVhqnczFO2Cfs
xqexY/m2LhwPfGdyyeOhJwM4HvYJf73j8tJUrw3HA39BiT24mtCN42Gf8E+t
cJGvOo3IYT+wY6xy8OetNchh3+/SUH/+aqcK5LC/90jbrrOx54qRwz5ex+My
11zt8pDDft0rYmt1UtZkI4d9ucZ21VdSKn8x+ZPk59qSI2Z8XmnIz5G665f3
j2cuU+RFz/tJXVE3USb405IRHH+X1MdMDxS+yA/pY+r5pM7zZzhMmxLpQq69
9r96hdw3w9MB71uRd9n8t+5OrL9JU+kNyOeQ9aOF3V65UH7GmxZZB13O3pqn
PpPxZkye5y/a0WcT5BhvC8hzqfnB+YG14ow3Nnm+yl2aetB9JAt5H6lzfomb
4Ll7FVP3iCX5ytzBIyHgPbPftZTU8R58qbCPpZl1/XSSr+ze2B6i0vuRXyR1
KsWd6em75jPr1k6Sr2otepeG8jPzyoTUYfJvlz1VUmTWZcOknnNT7HS3+sx2
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
O4qQ434t0udnbL1ubJ8T8HyN9M/5P7OYS5s=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
jeoVm3N/x8LcNUBdIxuoeo72qf5WtWQ/ZSdl+89Kuqo4YVjm9VKsPSTpleL9
oWlvSq/PT9d/J/uQOXY6MF0vfdK6aV2VN+pbtX6l9DcHZ7bR+o6RaS30jvoe
1QBlL/XM+km/RqVv1FoMS3MuPdE7KBaqlZ6jOame3lN2e1Bwjv8b1wxULgz+
NfczWyfdm5riGcU1evc26f0Hp3f9quA8SN+tOOigNFeyX/o7p6e/pXnQPK7L
/e19kz7rGf3Tc2akfa486NpkH5UfaX76Jd0+h/fcFf5L7jrDrox7R9clZBe2
pvcfkOZKOlIn6W3bou2H/EzPou2GfJHqnqrpKf5fEBy7Kn+5Nzh2Vby9KDhe
VU7xcHDsp7zjxuCYJCgeD46diorfg+OlDHxpcHz7N+82PTje2wmeERxL/Cd9
DI5PlPvMBJ8EVlJ+YXC96C+umQRuBN4OviI4lvgH/Hhw3KLc51H5uYJzpYeC
423lPncEx0jKd8YE153+5N67wB0Lzjv+CY4PlTsrNpWfUg3iEqgZuGXuGF3f
Ug7Z5OC4ZQfypcExlfK42cFxl/K+ucFxu/KROcHxvHKWu4NjeOUs9wTH/Mp3
VCNWDKUc7fbgWF253qzgeCwHjwuurbXg704JjqP+BT8bHMspP/2A9b1TawF/
XzGH1kLxYHA9tD78M8b36x3gq6F7NT/wD6G7tKbwb6HHwPvAN0OP6xvhHYJr
l0fAn2d8pWwU42fBk2XPwWvkVzS38OegKbIf0nXwYukSfD20SPoGX1d0Pa1K
0TX5PXn2B9F1DNkt2SvF1YqNlNP9EJynqI7xNXhmwXnlj8Fx+/9qGsFxvmoa
zwfnDsrBtwfXWlVX2RicI6g28nRw/Ky8/vfg+Fx1m1+D43zVXj4JjvOVt34M
nlhw7v9bcAyvms9y8MiCc/wvgmvdymG3gu8uuG4zN8VVqjlcHlzzb5X0XPp/
InhicB/hBHDP4HpgHfBFmetau2vfBNdgGyQ7dii4oXxocN31KPCYzDGFaoO9
gmt9dXP3glR/q5e7Xqka3eHgYu46tuoAqm9qXZTL9wuuAx+pNcldD1dNoEru
+vkJ4Krgt/X+ilVz171bgXsE1zAPy23HZG9ry9fk7h+dEl273o/f/ov2V3WT
Xxudvmtb7tqPYh/FqisYH5453zyv6JhWsa16D8oF5Nd3z90jUI2iS3C9VHW2
rsG1VtXfDsjd/zqZa/bP3SM4SfYncw2zpDgqd2/rVOTdgmuwquMNCa6ZHw2u
nrt31pprsty9A9VP/uOahwqua+mBqjmofnJVcE/nJGRXB/d6TgaPDK5zNgVP
BZ+u+cndS6rIeDn8FsW1yE9Ldkx273TwzcF9pTa55002sxn4guD6ahPwxcG1
3Oa56wI1Cq7zjwqutR4nPw8+HHwseGbmevIeyMYG166Pl48NrsEeA17GnF8B
/j5zPi87X4HfrwvueZ3KNXvnzoOaR/cnFBMeD94nd6+khfZ97l5PM3CZ3L0S
1Y52y93fUV1u39w9l5bRtRjlGqpZV8zdw1L+WBb8XMG1u5nJzreWngTX4RuD
K+TuT6nWuiM4r1cdtXzu3pPqb+Vy95tU1xoa3ONopO+Iru/IJi8M7hu2zZ2P
qN5xtGxjdE1Bfuq56DqC/NeL0Tm27PYL0bm9/MiSaLt8GfihaBt6KXh2dJ9j
KPi26LrAYPDiaNs9QfY/Oj+Xn70j5c/naT6iawHyua9E14/kWx+P7htNRv5E
dK9oinxxdP9DMcZj0Xb/CulytL2+XLYh2o5P1FpF1yDkx5dF5/by149G+49J
4Feja1uKB5ZG5/zyv3dG68354Fuj+1KDwPdH91TGgOdE5/8XgB+I7gNdCJ4b
3csZCb43uk8zCnxfdF9ndO4cVvWgjsgWB/d82+Wucyn+/hj+YHSfaSz49uge
0hDwwuRHLwHPj+5LXQyeFd3X6Qe+JboXMhB8d7SfGw6+KbqH11/7MbpfO0D7
NNpHDgPPi+5jXQReFO13x8vHRfvUEeAF0f57HPjG6D50X+2D6HqK7OFT0b00
xa5XRteBO8tuRNeWu4KnRNeQO4Gviq4zny2bE13H7gK+MLovJVvUJ7pvJDs/
OrrvIh80JrofI990TXQ9vBu4b3QvSj5oOvj+ontM10b31HuCx0b3BWXHLoru
J8nWjYvul2tvXhzd/5atmBRdx24PviK6jt0BPCO6N98DPC26rn4OeHJ0Pbyj
bFp0j78XuF90X01+8Fxw+6L7Yr2i+zryd4Oje1GyY+dF9ztlewdF98ZkK4ZE
97FkD4dG9xRlS2dGny3oDX46usepnOK16Bqu4uEbovu4fWQzo/umsrHDo3uu
sqUjo3taijMviO4XKsY7J7pfJb/ZM7rHJn89ILovKL/TPbrvpdhA9Q3VUv5X
j4nuY8nXD4zuKcp2jYju18r+D4vu0cpHjIruwykO6R/da1QscUlM5w9y1xxU
42sffZagYebe0GvBvVet9UeZz05UQvZYioW0Lu8H9161x98Ojgm1j1YF1/e0
R1YGx5PaOxsy9yv3QvYOdHXBe+2R4DMY0ocVwTGn9sWS4DMe0plXg2un0pMP
gnu4spkfBvd8tcc/Cu7byq4+E9yr1b54Lvh8hfbOC8G9Tun5U8HnQLS/lgX3
6LV3XgJfXLAePhHcr9de+zY4rpa9ej24Ty2dfCO4timdUWwgPyVbui043pY9
/zM43pb9ly9TTCVbrb7zvvz2O7yk7yzYPus8h2ox6sHprIbqSuq7xdxnAGSH
/+K+Jwr2L28F+2vp5M7g8wOy7ToPpFrokYqVcp83kF/4JThulz1cnuLec3Of
LVENRrmo9taWFJeqfnUUvFzJfbavC+7Bqi+3KcVU6nmrltUg+NyDYvJ9wJuD
cwfZxu+C8xTZZ/UkFPPvrdgk2famwfVVnaPQvFQJrluofqu6U0h5is6W6L69
Sz6jkqU8SLlw/czvqnhS71K95DMtepd9Sq79qh6j2FRnlVTLUA9U9dgmmqeS
e+SVkt+X/due9P8W+cOC8xn12lVrPSb4vIVqvMcGnxnS2aHGwWds1EtSnKf+
jnLNiiX3QRRP7VnyOSH1nBoF93rUC6gVXMs6MXPPVzWuE8Cf5q7d6e8cxL2r
g89RyOeuCT5HIX/0WfBZC/kv5TXKpxQ/fBWcS8q3bgjODeVbfw7O3eSbvtf8
FuwflYspx5HvXht8lkO+bH1wHip/vTXFw/J36zRHBfv3m2Wn0zyontko8/yq
Vtk4rbXifPXnGgafH6uXuResGnKDNCeq5R6nmknuM0bKvyojr5lsl+5VL099
ikOC67TNUjwwPqZzV9pDJdcNFT/sjD4Pp7j0suh1PUv7Oro/pxpIseRzbIpj
5wfbQF2Tl3weTnlQqeRzbMqPdin5DJlyjVjyOTnlUPulsxd6/4NLroPL3u5e
8rkl5SC76qBCcM7SLfoMhPKpPUreAzpfF0o+q6c4OSv5bJxi72olz7Xq9hOj
e9aKiyZEn1FTHqGDEDpXp/j88ugeseLb/UuuI0ivdiv5zJlytzIln0VT7nNp
9Pk29Vivjz4zJ1vxf1GB2SU=
           "]], Polygon3DBox[CompressedData["
1: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
hT0J7E34P2w69XI=
           "]], Polygon3DBox[CompressedData["
1:eJwt13fcjXUbAPBnnCNRsiIrRLwhpR2Kt0KJMoqS9cpoI1tkPA9SMlMopVJo
akiR0RTayU6aZGRL8dL3+tznj+u5f9f3d933cz73+a1TuUvPVvflZGVlfS3S
4lR/JoOvs7Oyusufzc3KOp7KyhrCFrEb2SO5SfFwtpS1lk5gJ9QNZYtZCzaO
5arLYx+wNmwyS7F89iFry6awwmwi+5J1Zc+wNBvLVrAObBp7VywUpfU9o2+M
61/+bzft59Vdoq6v/kXiPXGG/ln6HnJ9W/6WOF17Jhvl+or8ZVFMezob4dpS
NGQNxHme94DrC6KU5zd2bSRaqXnJdZ4oqj3NvcNd35S/IUpqP8XyXf/x+e7X
nu/+azxvhP4jrDubzS5l/djfLL6MV1hDNpRViGeyvWxsvBc1c/kccZq+J/QN
c60o3tP+S91EdWv1n8neZYfZBPY9q8w+YCfYdLaFVWLL2XE2Lb5z/6Mce579
xKqJL9h8ta+LEvqe1JfnWj7eg/Z2NcPdu0L/a+JVUVzfDH0jXY+6v4/2G+oa
qRup/zDryp5jF7M+bA+7ivVhFcVn8pPdP559Lu+ibqa6Auxh9hnryKazQmwC
+4Ldzp5mp7BJ7CvWjc1i6zyzhWttkc3nyG9QV1ZeTmxVV5ltEDX0l3F/S75e
/o7rghgL6p/mo11PEo9or1Tbyb0z9Bdk49gq1pk9yZaKJaKsvuf0Pez6vWdW
UbNQXK1vjfy7eAfa1cR+906Vt1Z7g7x5bvId7XQtwqZ4zjfu7cGeYwfVdmRP
ZSdjd5z8mOjL3ozxy/LUHWKd2Ex2PntU/j5fLMp47rP6xrr+n/fTfktdE3X5
8c74CLaM3cQmsv+yY6yuWM/KuO+AaCufqq4666HuUnV7WW2xOtYbNdeLR+VL
MmtJfL+XqdvHzovvnRVRcy3Ljf/FfmSV2OVsv/z8+N7ZaWy/aCN/LMYu6+6e
Zuwx9jFrx2azm1LJHF2fTtaFWB9ap5KxvS6dzOOYz7ex2ayE9j3u/dD1braQ
bcuM+5hbl7jnT1YrxgIrHOMslawNa9LJOhPrTctUstZ8n07mScyXVqlkrqxN
J3Ms5tqNqWR+f5dO1plYb75kRz27Zrwj8ZX8Yv271dWM+aCvEHtcXKn9ks93
mron5BNTyZiIsXEqmyTvIl5x32bWV98qfo3nnWBXiE2svJpGsTnouzJqNSuw
/4mXo8a9fdhK/VfFmGH1xAZWVs3kVDLGYqwVUTNFXl/dITUX5iR7T3FWjx2U
XxDzlRVjN6eStXpDOpl3Mf8u1N7JzhGfqiuo5iK2S14j9gt2MruA/S6vKpbH
x2d12QF5ndhrWNH4fkQD7Zd9vqKeP11+u3hVzQ+sn77V8d2zRWwHy2Pr2XD2
EysmXmUn2DC2VV401nJ2nM1lc7RPYaVj34i1PuacfJfnjdK3kVdhV7OKsSfy
+fJ7xWK2U56vboO+leyPmAPadcQqeVVxjboCscfqa+PaU2MJ2+3e0WwT6xxr
h/ZJsU6J67yTfupWqvtb3RR923h/tor9wx5j29kAtpodZVPZH2xfjHM2nlVi
Y+UDxefsGHuc7VA3iH3DsmN9YntiL2ZrtP9iZWJ981keiDVQniue1rePz04l
617sUaViP46xLFqqKRR7kr4urnvZdbEXqyvN2rERbFu891jH4ugibypGy99R
dz17XN1Itp2dId5mBeRvZeZMhxiXMSdjT818lmXsctaCNWdT5ZdkzgkL5A+K
jfH5xAvqj+hrrDY7zhYxttiZavLEnvjOxfuZNXGIWC8vGOcadtg9vdhS+Z+e
P4ZtZvezj9gB9ij7iQ2NvYudHOeLeLe5ydkpzlAPxVjVbupz9FH3sfyge8fr
+5n3Zh+y/Wwc28r6sk/Yocw54heW4/6RMa/YzWwSu5odZ/XFRlYu9nfxmnyL
uv7sc3XXsmHs9cx5KM6OTeJ9sddiH2TjY61hd7BprCYbyK5gPdgTrAYbwGqy
ZmwUO4V1jDHNRrEFrGnsoSyfHWbVxEespLxxjFX5XHX14/2oa8QGsDmsHhsT
6xrrxWaxi9jw2IdYT/YMu5ANY+fGWSL2zuxkjsVca8DuZNNZLTaItUslZ4At
3tky+fJYd1l/9qK6uupGs4bsLjaDncsGs/bshdg/2L3sI3Y+a8UGspLsdlaL
NWdjYr1nnWLPYO3ZOHYmuzf2ZHZbnEdYBXYPu4jdwvJZWXYnu5jdykazcuyu
2PNYO/YQK8/uZnVjb2CTWFXWm9WPNZVNyezJcdarF/sPm8zOZvezy1lnNpFV
Yb1YjTgjsDxWOOZi7AGxN7AHM/M89vg6rDUbzE5nXdk5MdfZCFaItWf/ibME
G8oKZtaIC9hNbEisL6wbq86asAfYSexWNph9y3LETLY3xj3rLX82c46N8321
GFtsECvAbmE9Yj1hv7Ah7Bt2F3uH/c6GsTVxrzHxNSsi5rHd7E51C+S/qXuQ
fce6s/lsKxvIvoy1nc2L/ZL1zkrO43ewt9mvbCj7lp3lf3zKUpk1Nub02ewr
+akxH9gudh77RV5ZLGGxsTSM83ysfWIdOoNdwY7E+peTrOexrncTr8t/9H8H
sC9iTqv7m10a45eVUlOH/SavIpaxnDgvsF/lZ4mlLDv26PgtJb9MrGWlWQfx
YuT+x33s49hD1a1g6Zib7FfWSd1c+Xp1vdinMTbUrWUlYy1iB2KssXXy08V8
dpC1SSVn/Y3p5Ldn/AZtop0T8zPmsLqKMV9SyW/NzenkHB3n6VtTyVn6h3Ry
9o/fAGfHeYoNyE5+c7dlVTU+i7071hj2W4zT+H0gLxHrItvP2qaS372b0snv
2/idW117DSuek5xBYr+szX6WV8rsKXEuqcW2yMuLd9nRWDvZD/JyYiH7J9Yw
9qO8gniPHWMd4/wS37fP3JN9kpucu+L8tSP2THkz9/0LnXUOTQ==
           "]], Polygon3DBox[{{1102, 662, 786, 1355, 935, 936}}]},
         Annotation[#, "Charting`Private`Tag$68143#1"]& ]],
       Lighting->"Neutral"]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ksvXGEcwOEXNagWiy5dUnt2Vcq47DSI0IggItS1ibEShkgjIohNV3wB
7OxYI+26TVp3xiVpS3wCS8+Jxf88v3dy3vOenMzbgYn2RFoI4ZsZElE3uvxl
R0YIBfxo3a9LdJNO6HJ9+SKEFuu4TulW3ayvdJvu0df6k96y50v0TH2gk7pT
/9LLukun9Lr+b09PtEff6V69q+91n/6ht3VMj5g/1p9ZZN6lh3BoXcEjvucx
K3nCKp7yA89YzXPW8IJxXrKWKdbxivW8ZgNvWOhds503am6tB1lsSr3Xb+s3
/M4Yd/jo/k0+cC36dlziT05zn3tmTG+wm2ts4jJrOMMyjrOYS559z2Hn5nOA
r8yqybNe4evovuh3LjKXC3zJeebwK7M5xyzOMsYkMzlFR4VJOjpkuvyjTxGK
dE7a83/nCSpFQt4=
       "],
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{853, 1233, 1234, 1209, 1224, 1263, 1567, 1199, 1157, 1364, 
       1059, 1200, 1158, 1365, 1060, 854, 1366, 1061, 855, 1367, 1062, 856, 
       1368, 1063, 857, 1369, 1064, 858, 1264, 1461, 859, 1370, 1065, 860, 
       1371, 1066, 861, 1372, 1067, 862, 1373, 1068, 863, 1374, 1069, 864, 
       1353, 1375, 1070, 1159},
       VertexColors->None], 
      Line3DBox[{865, 1242, 1160, 1210, 1225, 1226, 1568, 1201, 1161, 1265, 
       1549, 1202, 1162, 1376, 1071, 866, 1377, 1072, 867, 1378, 1073, 868, 
       1379, 1074, 869, 1380, 1075, 870, 1266, 1462, 871, 1267, 1463, 872, 
       1381, 1076, 873, 1382, 1077, 874, 1383, 1078, 875, 1384, 1079, 876, 
       1385, 1080, 877},
       VertexColors->None], 
      Line3DBox[{878, 1243, 1163, 1211, 1227, 1550, 1359, 1203, 1164, 1268, 
       1551, 1204, 1165, 1269, 1552, 879, 1386, 1081, 880, 1387, 1082, 881, 
       1388, 1083, 882, 1389, 1084, 883, 1270, 1464, 884, 1271, 1465, 885, 
       1272, 1466, 886, 1390, 1085, 887, 1391, 1086, 888, 1392, 1087, 889, 
       1393, 1088, 890},
       VertexColors->None], 
      Line3DBox[{904, 1094, 1399, 903, 1093, 1398, 902, 1092, 1397, 901, 1471,
        1277, 900, 1470, 1276, 899, 1469, 1275, 898, 1468, 1274, 897, 1091, 
       1396, 896, 1090, 1395, 895, 1089, 1394, 894, 1467, 1273, 893, 1553, 
       1171, 1170, 892, 1560, 1169, 1168, 891, 1361, 1571, 1167, 1212, 1166, 
       1257, 1244},
       VertexColors->None], 
      Line3DBox[{918, 1098, 1403, 917, 1097, 1402, 916, 1478, 1284, 915, 1477,
        1283, 914, 1476, 1282, 913, 1475, 1281, 912, 1474, 1280, 911, 1096, 
       1401, 910, 1095, 1400, 909, 1473, 1279, 908, 1472, 1278, 907, 1554, 
       1177, 1176, 906, 1562, 1175, 1174, 905, 1561, 1235, 1173, 1213, 1172, 
       1258, 1245},
       VertexColors->None], 
      Line3DBox[{932, 1100, 1405, 931, 1489, 1294, 930, 1488, 1293, 929, 1487,
        1292, 928, 1486, 1291, 927, 1485, 1290, 926, 1484, 1289, 925, 1099, 
       1404, 924, 1483, 1288, 923, 1482, 1287, 922, 1481, 1286, 921, 1480, 
       1285, 920, 1354, 1479, 1178, 919, 1563, 1236, 1237, 1214, 1260, 1259, 
       1246},
       VertexColors->None], 
      Line3DBox[{934, 1248, 1249, 1216, 1228, 1566, 1101, 1205, 1180, 1406, 
       1102, 936, 1407, 1103, 938, 1408, 1104, 940, 1409, 1105, 942, 1410, 
       1106, 944, 1411, 1107, 946, 1412, 1108, 948, 1413, 1109, 950, 1414, 
       1110, 952, 1415, 1111, 954, 1416, 1112, 956, 1417, 1113, 958, 1418, 
       1114, 960},
       VertexColors->None], 
      Line3DBox[{959, 1502, 1306, 957, 1501, 1305, 955, 1500, 1304, 953, 1499,
        1303, 951, 1498, 1302, 949, 1497, 1301, 947, 1496, 1300, 945, 1495, 
       1299, 943, 1494, 1298, 941, 1493, 1297, 939, 1492, 1296, 937, 1491, 
       1295, 935, 1355, 1490, 1179, 933, 1362, 1572, 1238, 1215, 1262, 1261, 
       1247},
       VertexColors->None], 
      Line3DBox[{961, 1250, 1251, 1217, 1229, 1307, 1569, 1206, 1181, 1419, 
       1115, 962, 1420, 1116, 963, 1421, 1117, 964, 1422, 1118, 965, 1423, 
       1119, 966, 1424, 1120, 967, 1308, 1503, 968, 1425, 1121, 969, 1426, 
       1122, 970, 1427, 1123, 971, 1428, 1124, 972, 1429, 1125, 973, 1430, 
       1126, 974},
       VertexColors->None], 
      Line3DBox[{975, 1252, 1182, 1218, 1230, 1231, 1570, 1207, 1183, 1309, 
       1555, 976, 1431, 1127, 977, 1432, 1128, 978, 1433, 1129, 979, 1434, 
       1130, 980, 1435, 1131, 981, 1310, 1504, 982, 1311, 1505, 983, 1436, 
       1132, 984, 1437, 1133, 985, 1438, 1134, 986, 1439, 1135, 987, 1440, 
       1136, 988},
       VertexColors->None], 
      Line3DBox[{989, 1253, 1184, 1219, 1232, 1556, 1360, 1208, 1185, 1312, 
       1557, 990, 1313, 1506, 991, 1441, 1137, 992, 1442, 1138, 993, 1443, 
       1139, 994, 1444, 1140, 995, 1314, 1507, 996, 1315, 1508, 997, 1316, 
       1509, 998, 1445, 1141, 999, 1446, 1142, 1000, 1447, 1143, 1001, 1448, 
       1144, 1002},
       VertexColors->None], 
      Line3DBox[{1016, 1150, 1454, 1015, 1149, 1453, 1014, 1148, 1452, 1013, 
       1515, 1322, 1012, 1514, 1321, 1011, 1513, 1320, 1010, 1512, 1319, 1009,
        1147, 1451, 1008, 1146, 1450, 1007, 1145, 1449, 1006, 1511, 1318, 
       1005, 1510, 1317, 1004, 1558, 1189, 1188, 1003, 1363, 1573, 1187, 1220,
        1186, 1254},
       VertexColors->None], 
      Line3DBox[{1030, 1154, 1458, 1029, 1153, 1457, 1028, 1523, 1330, 1027, 
       1522, 1329, 1026, 1521, 1328, 1025, 1520, 1327, 1024, 1519, 1326, 1023,
        1152, 1456, 1022, 1151, 1455, 1021, 1518, 1325, 1020, 1517, 1324, 
       1019, 1516, 1323, 1018, 1559, 1193, 1192, 1017, 1564, 1239, 1191, 1221,
        1190, 1255},
       VertexColors->None], 
      Line3DBox[{1044, 1156, 1460, 1043, 1534, 1340, 1042, 1533, 1339, 1041, 
       1532, 1338, 1040, 1531, 1337, 1039, 1530, 1336, 1038, 1529, 1335, 1037,
        1155, 1459, 1036, 1528, 1334, 1035, 1527, 1333, 1034, 1526, 1332, 
       1033, 1525, 1331, 1032, 1356, 1524, 1195, 1031, 1565, 1240, 1241, 1222,
        1194, 1256},
       VertexColors->None], 
      Line3DBox[{1058, 1198, 1548, 1358, 1057, 1547, 1352, 1056, 1546, 1351, 
       1055, 1545, 1350, 1054, 1544, 1349, 1053, 1543, 1348, 1052, 1542, 1347,
        1051, 1541, 1346, 1050, 1540, 1345, 1049, 1539, 1344, 1048, 1538, 
       1343, 1047, 1537, 1342, 1046, 1536, 1341, 1045, 1357, 1535, 1223, 1196,
        1197},
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{373, 774, 580, 1365, 374, 778, 593, 1376, 399, 780, 1552, 
       607, 413, 782, 1553, 621, 427, 784, 1554, 635, 441, 1480, 649, 455, 
       1491, 663, 1407, 469, 677, 1420, 483, 691, 1431, 497, 1506, 705, 511, 
       1510, 719, 525, 1516, 733, 539, 1525, 747, 553, 1537, 761, 567},
       VertexColors->None], 
      Line3DBox[{375, 581, 1366, 376, 594, 1377, 400, 608, 1386, 414, 1467, 
       622, 428, 1472, 636, 442, 1481, 650, 456, 1492, 664, 1408, 470, 678, 
       1421, 484, 692, 1432, 498, 706, 1441, 512, 1511, 720, 526, 1517, 734, 
       540, 1526, 748, 554, 1538, 762, 568},
       VertexColors->None], 
      Line3DBox[{377, 582, 1367, 378, 595, 1378, 401, 609, 1387, 415, 623, 
       1394, 429, 1473, 637, 443, 1482, 651, 457, 1493, 665, 1409, 471, 679, 
       1422, 485, 693, 1433, 499, 707, 1442, 513, 721, 1449, 527, 1518, 735, 
       541, 1527, 749, 555, 1539, 763, 569},
       VertexColors->None], 
      Line3DBox[{379, 583, 1368, 380, 596, 1379, 402, 610, 1388, 416, 624, 
       1395, 430, 638, 1400, 444, 1483, 652, 458, 1494, 666, 1410, 472, 680, 
       1423, 486, 694, 1434, 500, 708, 1443, 514, 722, 1450, 528, 736, 1455, 
       542, 1528, 750, 556, 1540, 764, 570},
       VertexColors->None], 
      Line3DBox[{381, 584, 1369, 382, 597, 1380, 403, 611, 1389, 417, 625, 
       1396, 431, 639, 1401, 445, 653, 1404, 459, 1495, 667, 1411, 473, 681, 
       1424, 487, 695, 1435, 501, 709, 1444, 515, 723, 1451, 529, 737, 1456, 
       543, 751, 1459, 557, 1541, 765, 571},
       VertexColors->None], 
      Line3DBox[{8, 858, 23, 870, 38, 883, 53, 897, 68, 911, 83, 925, 98, 945,
        946, 113, 967, 128, 981, 143, 995, 158, 1009, 173, 1023, 188, 1037, 
       203, 1051, 218},
       VertexColors->None], 
      Line3DBox[{383, 1461, 585, 384, 1462, 598, 404, 1464, 612, 418, 1468, 
       626, 432, 1474, 640, 446, 1484, 654, 460, 1496, 668, 1412, 474, 1503, 
       682, 488, 1504, 696, 502, 1507, 710, 516, 1512, 724, 530, 1519, 738, 
       544, 1529, 752, 558, 1542, 766, 572},
       VertexColors->None], 
      Line3DBox[{385, 586, 1370, 386, 1463, 599, 405, 1465, 613, 419, 1469, 
       627, 433, 1475, 641, 447, 1485, 655, 461, 1497, 669, 1413, 475, 683, 
       1425, 489, 1505, 697, 503, 1508, 711, 517, 1513, 725, 531, 1520, 739, 
       545, 1530, 753, 559, 1543, 767, 573},
       VertexColors->None], 
      Line3DBox[{387, 587, 1371, 388, 600, 1381, 406, 1466, 614, 420, 1470, 
       628, 434, 1476, 642, 448, 1486, 656, 462, 1498, 670, 1414, 476, 684, 
       1426, 490, 698, 1436, 504, 1509, 712, 518, 1514, 726, 532, 1521, 740, 
       546, 1531, 754, 560, 1544, 768, 574},
       VertexColors->None], 
      Line3DBox[{389, 588, 1372, 390, 601, 1382, 407, 615, 1390, 421, 1471, 
       629, 435, 1477, 643, 449, 1487, 657, 463, 1499, 671, 1415, 477, 685, 
       1427, 491, 699, 1437, 505, 713, 1445, 519, 1515, 727, 533, 1522, 741, 
       547, 1532, 755, 561, 1545, 769, 575},
       VertexColors->None], 
      Line3DBox[{391, 589, 1373, 392, 602, 1383, 408, 616, 1391, 422, 630, 
       1397, 436, 1478, 644, 450, 1488, 658, 464, 1500, 672, 1416, 478, 686, 
       1428, 492, 700, 1438, 506, 714, 1446, 520, 728, 1452, 534, 1523, 742, 
       548, 1533, 756, 562, 1546, 770, 576},
       VertexColors->None], 
      Line3DBox[{393, 590, 1374, 394, 603, 1384, 409, 617, 1392, 423, 631, 
       1398, 437, 645, 1402, 451, 1489, 659, 465, 1501, 673, 1417, 479, 687, 
       1429, 493, 701, 1439, 507, 715, 1447, 521, 729, 1453, 535, 743, 1457, 
       549, 1534, 757, 563, 1547, 771, 577},
       VertexColors->None], 
      Line3DBox[{395, 775, 776, 1375, 396, 604, 1385, 410, 618, 1393, 424, 
       632, 1399, 438, 646, 1403, 452, 660, 1405, 466, 1502, 674, 1418, 480, 
       688, 1430, 494, 702, 1440, 508, 716, 1448, 522, 730, 1454, 536, 744, 
       1458, 550, 758, 1460, 564, 1548, 794, 795, 796},
       VertexColors->None], Line3DBox[CompressedData["
1:eJwV0LsvQwEYhvGPhkVisjSotu63upa6U/drKatIrBIGk7/AZDQZTUaT0WQ0
GU1Gk9Ek9TvDk/d73yc5J+fkzq+ql3URcYZifcQv0qmIWkNEr/sbI3oV7Y0R
RzJt+0TBfYg2e0U22d4x6x5Gt/1A7uPPS165GXeLfUjuYRc/3DOXt5f0Qexg
G1/cI5fjpvUBbGETH1zGfs9P6f3YwDq67G/8LVfU+7CGVvuqfOFuuEl3D8rJ
d3Er8om74CaS56DTviyX8MCdcuPuZnteLmIBd1yFy9rH9CzmMYdrrsx1cKN6
Bic4Tv4r/gFXTSH/
       "],
       VertexColors->None], 
      Line3DBox[{566, 760, 1536, 552, 746, 792, 1524, 538, 732, 1559, 791, 
       524, 718, 1558, 790, 510, 704, 1557, 789, 496, 690, 1555, 788, 482, 
       1419, 676, 787, 468, 1406, 662, 786, 1490, 454, 648, 785, 1479, 440, 
       634, 807, 1562, 783, 426, 620, 805, 1560, 781, 412, 606, 1551, 803, 
       779, 398, 592, 1549, 801, 777, 372, 1364, 579, 799, 772, 773},
       VertexColors->None]}, {}, {}}},
   VertexColors->CompressedData["
1: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
6fUXFfbiN1PN/dcVLiI4Lk1HzQkeSAx+da+UAY/d/g9nHedh6XC1rtrLXjSs
CPVY2MnEpKLxdmYRD2ni0nvyRLogLeFHXrGDjY8Zhj9+feZhk5t7kAiHjubf
NZuc3TmIGYkvZhKc3mtdrzk3lYahh8ofO9S5yJ3vsfxtLQ+HL2/uaSR48p96
QBxrgote7zqFHS95WPTl+4lCEhX4u6NExIqHfddsnZclE3nrkTYr8wkVi3Ba
7IgXD3zfIwrq93i412B9jB9ARXqFrZMvwZ2Vkw9WfY0i1r2iyOV7qHics9b9
MPH/0mbWz35c48F1x5piD1Dxrj/SMDufB2vOB+lHoTzc6Fpx/JMlFTeYbRUz
JUT8xS/vvIN5aHJb3rXZiAr+GD/sWA8F5RVusTKPGVD10G5bKy3AWS8Ze98J
OrbHlck8WcdGb8Rz0yNpHPhIaW0pu9iNyUnd4zcaCL/SkfndrIuJC/zh5GCF
PtTNMmLK3+HiwuFLYP5ggPbS6VQiMd/FJvZIl3O42O20SN7w8iCy1ZsvJcQN
YktMRAzDkAeFR8vuy1T0436TkkX8Vgayr0TP/rWDh8euDm9mbvTBb1vGqW+/
GNBe128o5s9D82Zu3wKHXmxc/d7+vuUQ3n4zcu+7RNxboSXqPbMHEtejGH9c
hxBYaFD47AoR39T3RTalB3svZmwSnBvCRV8pyYFwHuETCswyT/Xg37T0Ot1b
Q7i5NLZ1KoKHt1NZNQUbe1A/yXJOfzyEWM22aPubPBicaTz4YhERf6XS8XfG
EGijoZU84l30v517yVbvwQJqz/HAHWRE1XQmvifm29Krhjc0Cb9NSTK5/jmC
iqjkocz6U0MY3zBW8DqcD7lral3+MTT8ezefXHiAhX+/rJSj6Vz8xxctLTHo
gJi4Ttgsoi/nZ/S/zL7EQZZfxdK4dZ0gyfv+OSHPgdhV9rev19l4YeF04tjq
LsxSLQyv9OCgPOfN8JsGFmy07D9vIvxWwD0biyVPOFhyvUZDw5GF1QeMknMq
utH4L5NUMciBzfrZYg1pTKwufD/oNdMN0f1//UYmOZjh4rmnPxPNK0sMbCx6
wL/neTZIgguHksS3bc5MqNgGKz506cGBLZLtnDlcrFT+tu7dMiZSGx9dqD/Z
A1sLp4T1Glzc/1cUFDePifU5C/VXhPQgoPjiP289Lg6mWH6OVWLiYygn+i3B
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
Izh1TFx3Sy5y7irA9eV0M/19XKwm82uzyfzaZzK/ppeeKQpvJnSqvKMtcotg
bmt699YLLrZ8ftzh68JE162iwJsDRUgzzloV8Y6LDZ4uIwLC/760V/J7JVOM
5BvXTzIKuZha63h4804mCsNcZV0WFEMlf4nWrXIu9hS8SHq+jQmzukfuvSuL
sSz5g0dMNRf7yZxaCZlTyyVzalUea1OzbrZga3f5rH2KFJw/tF+tz4To95Gv
tAJ+sWD7+9iPtUcpaMwPS5z3iY2NclMYExVYqP6qYDQxkYIK4aEhWVsOEgzF
Hhmfb8KF4CUzhoooePFmef76OA6WfdPztZjVBLkom5QMFgUPXSeVphRxEE7m
zuaSubNtZO6s17a1qSelEfO3BaUe+khBtnr5XtYwB53rc5f5hTfCPWzsu/VX
wrd+H/LY9psD7Ulc4buTjTjSoElVGqPg4BlflYdTuJhzs8w+wa0R40/3vvP4
TcFj+ZEeJVkuynnVySp7G1GyxMs6Z0IBlpYuVbmrwCV09LXyyp2NOKdaUWQz
qQDc/ARlynTu/82FpZC5sLNkLuz/5Kq0/spVrbwfVGe1lQo6PrKNNzcjXKzx
7mKVfjwn800cMt+0h8w3nSXzTcfJfNMbMt8kR+abXpH5Jksy3/R3bkWRzK18
IXMiv8icyHkyJzKJfB54Efk88B3yeeC/cxNRZG5Chnx+I+Ovv6sinfllRagX
Gy5jKqLShD5J/PkkYuQ7C1b7Ny7puMKHgl/jux7i38Dh0KDP2xnwXSu21ZAv
hNli39nOhE9XbHM1cdxHwzfe25+KJgOI2fKucG0+F2uNxYK16xsgbjGbe31k
AE/Wqk2ozeGg1fCa6en79fjpmKJrsH0QOjGHVTW62NDuz5HyZtahQGPv17ym
QZRQO1LD/ftQ+m5kgXZcLeGPzx35xhrEhPa5f5YROthbs8j42O5a7Di3waur
eRCsO19SvhDXzTjA87m5Ri22Fr/0vNIyCNo0laDM7F4otG6cN3ViLVRvBfZN
ItZd/ZlxryCmFwlqSmK2/Jp/7of4vLmtlXp9KNux8AHtAdE3eRtqp6m1IuBi
Se+ygxw02Vryswi9N+F9Wvm3qiYYeDx34E7kQW/111UjZXzE7NIuimIQffOW
Z//O6f/xtF2itj0h+qxxjov8WwYW7d7Q+pvKx4C+wZd7fnzMqlWt0FRk4MhA
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
+TmvoOfnAAB4tzPz
    "],
   VertexNormals->CompressedData["
1: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
XlsqiMrX7jIsv4WEPyeoRa3R4ol6q2dKw4OvWi3M0XTGZuez69B05qu3dXjK
6AIbH7MS3Job0ddTd6546VZCnsb9Onw0FSymHWvbRMvRV/6nnGc2voBF1dzV
1SoqfCZ9O3stKQcdUvKpXPiMwKzu1er+aip0VLRJVVcmo7WJZG4WlkZIW88f
VCqnwrCmranWq3folwfdJZWRRsjaOhjkXkQFzqI/VMOFMLTjGrnFodcEK1EZ
wh/yqMBx0002lt8fuQua5V6obILrk1Ez+TlUGBMbFVIydUeltm5Wvd+agL1J
8HZwFhVI6rfV7mjYI3bmOx/ZBZqhUa4V/c2gQrKsJb2inQU6998DPMf1Zii9
RB+NTafCm/N52wdqniCDoOJD37WaIfVB7M3jNDysULPDukYH6Wk4/fJ5TFsH
tFzfpVEhfI1rg11BC8lwXuPKtmwGM+UnghdoeME434cY/puowK9Xq9auGTok
HnOQU6kgt8vjZC9N5z/1c863aTpnlnxP+BToCdXtZ7HOfbVIPvwGT6xmKVCa
cY08NVRw1TmsHUBXjM7ZHhg1Tf8EHBoqaHCACgJZcy4n+TOQTU/EyPmSGhDh
mpDC0/A1xu43LHNx6HBwUrxM0hf4aGv+srWXCjE6YcyRKREoVTa09gmmFgLe
O2GTuqjg/fdS0PC7V0jOmFXN8EsdaPEwTrJ1UCFb715s1ZY3cg7ScvuuWQ+p
kXK3hdqoYN91TBZv7ISkujOB91M9+C3PBNS0UOGn0wfb8znWqHj+tt/nP/Xw
yj3mxKdmWp4PRZ7rTXqKFBnGHGvFEbxioXPebqKCUlxh0/GaRyiyLbJlRBOB
78HDde40/NGf/24KMN9Hb9cYyt6bI2jnPR/OT8Mzsj4+urCljoLHrI6IuSII
CDSqnm2kQucvtp72MAWUnWcn0OCPgLOXR7KEhn+yYHLWyyAjiWdNTr5XByCw
4AT/75lBuHokfiPUahm1ax/VtVZYBleZjwv5DDPQ9pVx4t+cnjow/PPfXPPh
UFSNk9pV6PYtYfjWv4xkWE9osGQvg/dRVm6r7Ekg1s4v/JSeREl5OTUcDngQ
lgdKitcsVHysDn5f4oRS1j79TqT5JIXpeSdf/inwfhTBTOS3R+VYiVjXy2RI
3/gtOXp0Cqh0WOsdZjLy7CbJHu3uh3CKt4tG8SgIN/COOTosoex0thwNjSWY
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

    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"Duration/hours\"", TraditionalForm], 
    FormBox["\"Bedtime\"", TraditionalForm], 
    FormBox["\"Reward Value\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  AxesStyle->Directive[
    GrayLevel[0], 12],
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{832.7016350940224, 288.5714285714286},
  LabelStyle->Directive[
    GrayLevel[0], 13, 
    Thickness[Large]],
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"3D Function of bedtime and sleeping duration\"", TraditionalForm],
  PlotRange->{{5, 12}, {-2, 4}, {0., 4.983125587698096}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}}, {{-2, 
      FormBox["\"22:00\"", TraditionalForm]}, {-1, 
      FormBox["\"23:00\"", TraditionalForm]}, {0, 
      FormBox["\"0:00\"", TraditionalForm]}, {1, 
      FormBox["\"1:00\"", TraditionalForm]}, {2, 
      FormBox["\"2:00\"", TraditionalForm]}, {3, 
      FormBox["\"3:00\"", TraditionalForm]}, {4, 
      FormBox["\"4:00\"", TraditionalForm]}}, Automatic},
  ViewPoint->{-2.258063897965471, -2.4274602405408188`, 0.6771884621716644},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7890531785925465`*^9, 3.789053551926382*^9, 3.789053646884821*^9, {
   3.7890538004068666`*^9, 3.789053828966264*^9}, {3.789056248428932*^9, 
   3.7890562527414117`*^9}, 3.7890569673890715`*^9, 3.7890573764215307`*^9, {
   3.7890574308732853`*^9, 3.7890574600111074`*^9}, 3.7890575130335197`*^9, 
   3.789057547281342*^9, 3.789057638237221*^9, {3.789057687281029*^9, 
   3.7890577012730136`*^9}, {3.789057748551606*^9, 3.789057768568387*^9}, 
   3.7890642477822104`*^9, 3.789064338992052*^9, 3.7890643795543003`*^9, 
   3.789064612796455*^9, 3.789064668001003*^9, 3.789064807385581*^9, 
   3.7897629836162477`*^9},
 CellLabel->
  "Out[721]=",ExpressionUUID->"1edbfaec-e02e-44b1-ba99-60e7167c5244"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sleepPlot", "[", 
     RowBox[{"12", ",", "#"}], "]"}], "&"}], ",", "8", ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7890584304387283`*^9, 3.7890584565052633`*^9}},
 CellLabel->
  "In[779]:=",ExpressionUUID->"c0e2ad8e-5dad-4594-bafd-b5294b12690a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.990746778497976`", ",", "3.0270409360210775`", ",", 
   "1.8359931359020116`", ",", "1.1135861279465138`", ",", 
   "0.675424128830236`", ",", "0.40966544244523373`", ",", 
   "0.24847465106777547`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.789058457393609*^9},
 CellLabel->
  "Out[779]=",ExpressionUUID->"f9469198-6ab6-435f-be68-61d2be33c4a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"funcs", " ", "for", " ", "bedtime", " ", "and", " ", "duration"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sleepPlot", "[", 
         RowBox[{"durx", ",", 
          RowBox[{"-", "2"}]}], "]"}], ",", 
        RowBox[{"sleepPlot", "[", 
         RowBox[{"durx", ",", 
          RowBox[{"-", "1"}]}], "]"}], ",", 
        RowBox[{"sleepPlot", "[", 
         RowBox[{"durx", ",", "0"}], "]"}], ",", 
        RowBox[{"sleepPlot", "[", 
         RowBox[{"durx", ",", "1"}], "]"}], ",", 
        RowBox[{"sleepPlot", "[", 
         RowBox[{"durx", ",", "2"}], "]"}], ",", 
        RowBox[{"sleepPlot", "[", 
         RowBox[{"durx", ",", "3"}], "]"}], ",", 
        RowBox[{"sleepPlot", "[", 
         RowBox[{"durx", ",", "4"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"durx", ",", "5", ",", "12"}], "}"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"5", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "12.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "5.25"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Function of Rewards to bedtime and sleeping duration\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", " ", "13", ",", " ", "Thick"}], "]"}]}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "12"}], "]"}], ",", 
           RowBox[{"Arrowheads", "[", "0.015", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "12"}], "]"}], ",", 
           RowBox[{"Arrowheads", "[", "0.015", "]"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Duration / hours\>\"", ",", "\"\<Reward Value\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", " ", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Bedtime\>\"", ",", "13"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12.2", ",", "5.2"}], "}"}]}], "]"}], "]"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<22:00\>\"", ",", "12"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12.2", ",", "4.99"}], "}"}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<23:00\>\"", ",", "12"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12.2", ",", "3.03"}], "}"}]}], "]"}], "]"}], ",", "  ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<0:00\>\"", ",", "12"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12.2", ",", "1.83"}], "}"}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<1:00\>\"", ",", "12"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12.2", ",", "1.11"}], "}"}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<2:00\>\"", ",", "12"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12.2", ",", "0.68"}], "}"}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3:00\>\"", ",", "12"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12.2", ",", "0.41"}], "}"}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4:00\>\"", ",", "12"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12.2", ",", "0.24"}], "}"}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7890536713453393`*^9, 3.7890537869778357`*^9}, {
  3.7890538440547094`*^9, 3.7890539674862056`*^9}, {3.7890540088842316`*^9, 
  3.789054158975657*^9}, {3.789054314572347*^9, 3.789054610253566*^9}, {
  3.789054671838557*^9, 3.7890550227840214`*^9}, {3.789056910356636*^9, 
  3.7890570075658674`*^9}, {3.789057078526945*^9, 3.789057116826215*^9}, {
  3.7890572079452915`*^9, 3.7890572783433943`*^9}, {3.7890579022618017`*^9, 
  3.789057947525141*^9}, {3.789058006625754*^9, 3.789058174124811*^9}, {
  3.789058206313958*^9, 3.7890583106784077`*^9}, {3.789058345475707*^9, 
  3.7890584189475946`*^9}, {3.789058467254774*^9, 3.789058757925313*^9}, {
  3.7890647838692727`*^9, 3.789064853116478*^9}, {3.789067613352719*^9, 
  3.789067628036149*^9}, {3.7890676830430145`*^9, 3.7890677620769176`*^9}},
 CellLabel->
  "In[976]:=",ExpressionUUID->"2dd57153-6651-428e-aa5d-e5d2acb7e175"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxF2Hc41f//P3DJOEmEg8jMLCNJWXm/nlRSCQ3RQkhGOysrUYqWyEiKJEoi
ZO+V7dibrBPZxwo5/F6/6/q+Hp+/XOd63Z/X83F/HI7bdcQtb566wsjAwNC9
kYHh//+8eCh0EwMDGZn3Kw4npFzADlB5i1KfkVFUrJfcW8oyNtwUsVNTihc1
izxbchBgRPPbOUfi03hRhIlu4193ZjS41e36UYwPXS5cnVDkIqGwU2NxRW18
yP7S4bhfp9lQ+vRRFSFrfnRXNX4XHzc7etuZ5HiCzo9Cdu59pvt5CzK7yeaV
FrwNGUozp3guc6AAC+NuuqgAYnqo87x941bk+f7TuHCWADp0Nlrius9W1KlK
NdyhK4ju1DNG0Ua3Im7P7Z4XGgXRYzVLjEWbC/Fwmlyyt92OnDo/iWW85kIe
qw9eXVrYjs7IBg2qdHKhb/tTXaVfCCHhvg/FdwS5UZ5Qp6ykpDBSoAaciDzF
jfaaTcuzfBdGngWlHn3e3OjOBNtw/hERJJckmKL6jRsJtPFOn2sVQcfr/g41
NHKjJ+zS32puiCJL58jP1HluZO/CJ5jNKIbmH6cF6PLwoEOhrx6v6Ykh3+y9
ltfkeZDPhZf1iiFiyDVmlTHqEA9yrH+InewRQwWOz+8mmPIg47AFMscOcXTP
eS55rz0PimD5U5p+XRxduvgGE3PnQcESLZGGP8TRWviuS3L+PGjmt7ZhC8MO
VN7V7ZYWyoMOMMjZzB3fgc4fNcx1jcFfV2yOZwragVpF9U+iRB4UrXKzmKFv
B5pSHpNNTedBWYbVzNOSEqgoraU9IJ8HFRZFJ7nYS6DOx/Hp18p40M6OZaXx
dAlE3/s9lreGB+m9O9ZrtCqBxA5vR1ENPKiGJGL1QU8SsXOIYEutPIhxxx/u
4ZeSaPJlrZJ9Fw+SfbVbprhVEj3ewOxn1MeDUuKWyP7iUmjpioIB3yAPmrbL
lj9oK4UazCdC1Kk8KLB5VXj0hxSKUhpn0B7lQWLBuXdlGKTRlMSvjOExHmTN
cGfOVFcaMTC/YeWf5EHs5K/6TkHSSIdpJX3/NA+ya+2m+HZKI2dmnfmVGR70
Y+JxpryoDOJcvbvxySwPskrIcC2yl0E3dJd9SPM86Cdvr5Vuigz67nPWQ2+B
BzX1qvxbX5dBOgMFp/wWeVAtuc36nC4Zeau5KZC8Z7GtFzvmFzvIiKfw8MHK
0HXs2t8zT25f40UeDwJeK/zZiBxCDyW4LvOiKply7ukOFpS3R5mN+SkfMrr1
rfiF9iYkLR5x/YYwP1pjvZr648BmVLv8ZPfHDhnkrfhDfwK//7X8/kx5CTLq
mpEUjjIZw+LEXLpaUsmo50PWsu7QKiZL/WvapseLJqhPqWxsG5FS5xe9wDZe
xGdwLc5nNwsyFG/TlLnCh0bb7xg5fiOhPnWdAP4VPlQ+XHJ7sJoNVbGmVc2X
yaAdbS/i3+L3MdGduP3syOhcNLKQe7CIuYWpcwqsk5Hvnp9J9Qwb0PdNqZns
gbxo8Q+fj3I2E6KMm4WcnJBBddIO9zXw/biq2ViEcpHR65jSq03fBzGaj25d
aRQZJbNe3HTr6j+M5eLRYpIqL7qRfFGV/zUjCnLr4Rcq50U7Lny3525nRtsE
Pp9RO8WH8ozXf1pakJCGbui2a6N8yNNntI09kA1VclSGCufKIJLzgtUdfN5R
UlzutAkZnQ6WSOV+N4+VL5MYSRNkdOZqSryAPQN64b1RDPPiRaTV+otzp5hQ
/exdS7dB/LzGzjQefN7vYiwcpSpkVNLtdt2PZwYTox22E3InIzsRV98i9SWs
YfhopeyiDGIPa0uzwPP2/62p1JDI6BLL0Vs2bl0Yn0qSrmYoGVl4i4sYR61g
Tvx3FsQVedFIv3KhmQkjOljjtH45jxeNpfWV9HxhRnQy10CRHh/qT9yTwaFO
Qrb6Reahv/hQsv1VmvgdNnQk6BR9T4YMSjhCeXgJ79fF8V+gpCEZhU+9eV0Z
OoeNJdxyvz9IRp20BKb67QyIril/xtSJF9GmOTkfiTChE85rlS96ZZAmusDD
gM8bI/1+8K8cGR1WHVHMtpnEuP/2ap28Q0Yn7zyLPWz5FzOybVHUosmgQm3n
xBN43k+5/ullQTI6YZHyULrrN1YgeEP9hRYZvXXo+pNmTMNOXi68TP4ng+4e
aQu5i+ettI9FXWEiI5bN7Ysq+U3YF3bLjS6vyEgmgs3cRW0Fk3fye5m0kxdN
Zde4PldjRJF3deaYsnjR+NqTBwzBzGgm6LAM8yE+9MIgzENJioS8DY195br5
0AdXycbNVmyIpSVMKS9NBtFOlzCfxvfRzBWwUnCMjJSPPX/yccsc5ukrqZbb
S0Zhez805o+sYz/eoKnhW7yIe+nHwuJGJsSedXB1Wze+z/gRlUX8/NudY/pB
MmR01DlT7/XYOLZ5Zefn8etkVEG6wrQ2u4htTRCwrJiSQRU/EgQP4f3u7xNc
/MdLRg/2s+syDgxjmcI5H2XVyehDvsS5icwZbOtHppD3SzLo+YjnTns8f1sz
tVppCxmJDSysG+/tx57v9hGvEME/H1jDHN2+jGJBom6KAXQZtDw0uuSB5/t1
brUoM5LRl8fvB/V9q7HZpdwB8ksycmeoDD/GtIKRYgN7HGV4UbWjeDfLTkZU
WSF7vS2dFxlt1C5+8JgZ/Wk0PxavzYemHkhKq2wnIfZGUd7FDj50107K2/UC
G/rtqHHsQaoM4hg3LTmB9zfi+b77mR4ZLf7OG7GvmMV+3vTiO9dNRoWHSr1s
CtexwMpjml9v8CJej2MFbxY3ognT37x9nTLI5AGLDg0/v01uq4+5FBmJBM3/
3SM5jj35Z9ib5YDvs+W+s23OIjZzLM/92aQMurJRwwDD+63uR3JVPGRkr609
O9wwhKmI9ncs7Ccjt9esLm9sZrCZg/FJVn9l0IvvLTev4PmpAx3rdDYyWqqy
Pa0W1oux7fl89rUQGf28veZx7ecIdqdISM9wFX8/cx/rueL535ikfTgLGSV1
G6nUzbRhqV7t5PI1GfRueCXuAf6c8ExBRlSVQK0ReKZSXuD2DcNp8Mz2QuPJ
qPkFjPAMh8hNu1rOFYzwTCjfyU/De+gY4Zm6ro9HBqbXMcIzz/3s5l6zbADP
yGzyTZhd3QCe+aBXkO1WxQiesbfGtl28vhE8E3hfgXOMhQk88zQvXl3Xlwk8
wxjhxS86xQSeeSRpHfTxNDN4JlWgxSAnjhk8k2WQkda3wAyeOZMn/2xdnQU8
c/jUZLvQHRbwjG8P08poPAt4prAhysqghQU8gziDInvWWMAzfDLRdzIkWMEz
pOEmmqoOK3jGJeSxbZA5K3imrKhadsiFFTwTSM3sl33OCp7pNDsc8P0DK3im
BeXGZKeygmdiH4s0SZSygmd4vzqTHRpZwTMPH+nx6vWygmeMtBe480dZwTMr
PEM52rOs4Bm7j9f+RaywgmfeinTKJTOSwDOd2bUNNptI4JnHHBOeQ5wk8Izl
8pGhI7wk8IzS2KFJRkESeEaqKN8tVIQEnvk9cHHUegcJPHNb55E/lzQJPCMe
dED18E4SeMbtZtbZaTkSeKaVzb3bR5EEnjnpWOkYr0QCzzgbbhX2VyaBZ2Qz
nzy5oEICz2jkuiT92kcCzzR0jh64rEoCzyxpXfm17fZv8Ix/UGbMgOwceKbT
Y/ShkswSRnhGpU/0hXDmP4zwzJ20dAWRj2sY4RlNqdxJ2UcM4Jmsvs4rcftJ
4Bn9vZjc9flf4Jl/LznMnR/RwDOjF/z2+m77ixGeedF9Qyr8zwpGeOaV/psY
p2k6Rnjmi6J1sihiAM/cmmQOOoTfR3jmvaFRT5z+OHgmk1VjWC16HiM885m8
NfSxxDJGeKYtsEKbGd8P4ZmJtkE9vcQ28Iz+FY1lnqgZ8Mz0Hl36df9FjPDM
ZY94GSOvFYzwjGkidn/pFR0jPDNMk754S4gBPGNQk+PLjc9LeOZ2XXa53YY/
4Bm3j5r5V//MYYRn9iY+e3w/fgkjPPM11GRPG36e8Mzc51hLS+8h8IzN3Z0M
260mwTN2OqwRe/F+hGfEjE9lG3A2gGce9jTppkvNgGe0Dx4OL8cWMcIzP+73
vnE9soIRnql6MGZ00JKOEZ5xrBLfcJyNATyj6b1TeRn//SM8s/Ku1F6rdAQ8
s+GlxOvrAXMY4ZldQjl3qVeXMMIzhbmyVgV4P8IzCYdZtZVaB8Az8vSjHJmX
JsAzCexFD4XwfoRnhqm2F8KyusEzQ195YlRYqeAZZpG/D47hecIz3oV/Lxnk
/gTPMAfHCcbUT4NnsKIYByvBRYzwjAVp2DFfbgUjPDPDUWO38xgdIzzTLZD8
QHIDA3gm5FeE8wS+D8IzwWbO9F9CI+CZX9vET62emwPPKDn9mUk6soQRnskW
c7BPxfdBeEa/cFfQ+6l+8Ez5l5TG7LZx8MyBd+ujW/F+hGfob8Obmk53gmds
I0lKlCPD4JlU31geDM8Tnklc/7JpOa4ZPNP2c340ZqwXPCOzl41qjOcJzwQX
z3z9QS4Cz4x7P3po8nIaPDMon/33OesiRniGrMObVSO8ghGe4WA64MD+Hx0j
PBN3fdB72/I6RnimL1aI/BvfH+GZJ7m/DqRU/AbPeJA83B9qz4FnZsZTa1xV
lzDCM9HJ7+wS8f0RnlFI2yp83LkfPDMWLTjPGzQOnlnFmvk24/0Iz/Q4OVzM
3dQBnrljxP5WljoEnnEZw0zV8TzhmRPx8g4Rs43gmZLH8s9U2nvAMy9HRlSM
8DzhGZFQykOulhrwjL6VedAF/DnhmdbWJMWjFofAM6+fj3dF0AfBMy5x+0J2
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
1VvJKZq6QeAZ81fjDHT8+f8DCZPg7w==
     "], {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 120, 100, 140, 83, 137, 117, 69, 134, 114, 97, 138, 118, 
         58, 131, 111, 94, 80, 135, 115, 98, 51, 127, 107, 90, 76, 65, 132, 
         112, 95, 81, 2, 121, 101, 84, 70, 59, 52, 128, 108, 91, 77, 66, 3, 
         122, 102, 85, 71, 60, 53, 129, 109, 92, 78, 67, 4, 123, 103, 86, 72, 
         61, 54, 5, 124, 104, 87, 73, 62, 55, 6, 125, 105, 88, 74, 63, 56, 7, 
         8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
          26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
         43, 44, 45, 46, 47, 48, 49, 126, 106, 89, 75, 64, 57, 130, 110, 93, 
         79, 68, 133, 113, 96, 82, 136, 116, 99, 139, 119, 141, 50},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$109597#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwVz+k21WEYxuFNopKZom+dkkPoAHQkpmQqJZI5ikKGUCnKGDIrszLPknD5
cK3f897/tfZa++69+8kpQYFAIJU0rnrsaJL+0lsazHd3nJ7rJrfdV/jijtZT
XWOG+MsfZEs6uOk+1hUm6CfG9l/XmSWdUNuuzjFMN51E2P/qKpMMkEGYfU/n
GaGHD0TaT/Q3UwySyTX7vi4wylc+8oDrvh3oIj/4xieyuOHboS4xRi9dPCSb
HHLJI59HPKaAJzylkGcUUcxzSnhBKWWUU0ElVVTzkhpqecVr6qjnDW9poJEm
3tFMC6208Z5w/+FIlxmnj89E2f/pH6YZItZ2phv8JME7iG13ooZwh3bvCz3v
XCA=
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$109597#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwVzlc7FQAAgOHjd6BCSWQkFdk7GeVQdlaZcWwysle2SrKa8jd7XbzP811+
UR2h4GBYIBDYIVwc8pF/DPCHPVr5yTYz/GWfWs7ZZIo+frHDLJV8Z5Uxumji
gk98oJ8IPjPP9VAbr6jihDXG6aaZSL6wQIh2XvOCU9aZoIcWbvCVRYbooI6X
3OSIJYbppJ5qbvGNZUZ4SwNBoogmhtvcIZa7xHGPeBK4TyJJJJPCA1J5SBqP
eMwT0sngKZlkkU0OueSRTwGFFFFMCaU8o4znlHPMCqO8o5Eazthgkl7e8IMt
pnnPb3aZ45IDrqjgP5wsODs=
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$109597#3"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwNzuc+0GEYBuA/lUohI0Vkj4gGR+IQHABH4jyQvSkrQlFGwygjZWWUPQpd
H67ffd/P++VNKy0vKQsJgqCCSiUlNAhuUcSZ/VQmsaUXyARu8IxkvrvnyXiu
cWwXykRuMmdnyxhC2LfXydfvEcaJXUWqfpu/+jbLfCXHLZZQDuwNqkmzI/in
7/CDb+S6xXGFQ/sXL0i3IznXf/OTeWrIcI/iQv/DCgvUkul+h0t9l1UWqaOe
BhppopkWWmmjnQ466eIlr+imh1766Oc1AwzyhiGGGeEt7xhljPd8YJwJJpni
I5/4zBemmSHL/6MJ2LPXWOKRfZerHNmbPNbvc51T+4l8QDjPeUgxs97+A1kx
URk=
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$109597#4"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwNw4c6lQEAANBfb+IhVCQzsukKDatbRjaJolDRwKWkIhRSyEp2mW/mnO87
0eHmUFNUEAQRYy4EwaoTnvrGI5d96j9/+cljf9vknj8cs9//LvrZGrf87oh9
PnbfBT864EXXnPStXTZb67azjvrCDi+57lff2W2LD91xzve+tNPLbjjloM9s
tc5Y/zjtkM9ts944N51x2B4f2eAV471qgokmmWyKqV4zzXSvm2GmWWabY655
5lvgDUMWetMiiy3xlre9411LLbPcCiu9Z9j7PrDKv34zYq/tNrrrvB985RMP
/Om4rz10yS+euOKZ1Z4DHAJHGg==
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$109597#5"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwNzmc70FEYB+A/IoREURmFrAYiySgaZL/wEXwAPokvZWQkK6NQIjMjWxS5
X9zX7zy/c57rOhntnW0dIUEQdNEdGgTlYUGQTQs3aeQ5EbynhEyaKOOvnXey
iHvcoJ5nZHHovkY+JoVYQqnlKfdJoMe7CpnDLa7yT3fEa+cnpBJHGL36SplL
EpGc645541xAGte5Qp++SuaRTBQXuhM+8NKcz22i+a/7Qz+vzA+5wzUCTvUD
DDLER4b5xAijjDHOBJ+ZZIppZvjCV2aZY55vfGeBHyyyxE+WWWGVNdbZ4Beb
bLHNDr/ZZY99qv35EXeJIYQz/VtZSDrxhFNHMRkk0kApD2jmBa0c2L8EG9pG
Eg==
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$109597#6"]& ], 
      TagBox[
       {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwNw4c2lgEAANDP8SQ9kRGRUP6slNUQMotk/CKrKJWtZI+mspOMsnkZ955z
L4XyY/MigiAIGxUZBOtOe+Z7j12xzQN/OeGJqz7znz8cs9dDl5y02m2/OGK3
z/3vop98a7Qbzthnu/U+dsevjtpjizH+dtZ+O2zwibt+84OvbTXWTeccsNNG
a7zsH+cdtMsma41zywWHfGnYp8Z7xQQTvWqS10w2xVSve8M0Q9403QwzzTLb
W+Z42zvmmme+BRZ613ve94FFPrTYEkt9ZJnlVljpXz877CubrXPP7370jS/c
96fjvvPIZac8dc1zq7wAm8lV+Q==
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$109597#7"]& ]},
     VertexColors->CompressedData["
1:eJwUWHc41X8YVUqDCpWWpkoqq6ESHSoyf6GIkpWEBkUqK6lkFCopSahkJEmJ
rGyy7nVd1153X6Rlpvh9PE9/nef7nN57zud93/Naa+dicnq6kJBQm7CQEPkn
xDsSPLF4VSd6EnatEW/LxfHpUpPSrG6cH0wvCZWnQ2nhGbm01SxkOn3Q0pTl
oeL9pMlQeztKNFsKP7/jonfc37vWqxtX675fvnCQiU/z69Ud4njIP3a//ohQ
C2Kmffmwxp2DjAapnZHlPLyzsO8Pu07HdLNNi4/K8PE5+h/ltR0Pi2/svlVe
XQ+f4yExMWMCqPyqvP4rlYsZyedsLvxHRd3fedJNNn3oNuT1eb3mwEXqpILO
yzp0rVooSF/Tjy9tRTpRhmzIemhI/NhdC7e4kVUvXvTDX8anq0uaBduPvdNd
ZWqwize44WlzP848zPn98H0Pzh/q+ir3rwobO6Smu3b0w6HsJr/QqhubDUfm
KY9/harh1ruPe/rRG18Tq3ulEydu3rl0d+VXPGHt8yir78fV0y3Fb1e148lw
hO0alUpsuJrhZvC6H1dSRXXaBS3YK5a2KMS8Auz1Nxawvfsh9fhjZyelCTPq
tyh63y5Hd25T9z6LfngfeydVKMTAcqnMgBpKGS7tr25m7u3Hk+smWw1u0vHS
e3r9RtUyPP/yQi5/dT8euFi5PlncgOWM8JG0lFJ4vVzqBNF+yPKv7Rzi1OOa
8gnqhFoptnJDLSNG+6BhFFuqUUzF+fKO/N+MEqQlX/7txO9DbF5nrGEIBfPn
/3cj0rcEgYzfy2a39SH5e7u1lKAWf02D97nuLMEaeam3snV9MOc/bnpjVgP6
bG3Xed+LkR1cNsOnpA+lZjw3kznVmKF9T+XLx2IstxUs35TTh493Fq14z/kK
1/cHZuTfKEbKaGz4xvd9SDPs/E+9phILYjzv+RsVo8b1ktvb5D7s2bLU/T2z
AnmeubLJssWQzF4n5vmiDwPcWXJJ0yrw+MHFOgOhYszeZHtf5Vkfcuqnd/PV
y8EekOhf0FkE5s2XhtMfk3riX3trRZch56x0SExREaZXx6aM3+9D3rXwuTsm
SnFy3vcH618XoWXv5+K6e+R3zb84O8urFAdkx4qMw4ogXmewbUNwH97luyfv
n1OK+rl+3QZeRdg+v+BbVEAfnLtjlt14SnQJ7or6dqYIxir7wxJv9iHDpqnD
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
FXIxOivk/BfCk9Hxbu0Uz/ibOX5uhEcvkbJp7cwmuN3p6r3rnA+Hrtn6bd+m
+nddbC35vlnt5chUDtEW+ylvR77fpPCauVi2E6mFAw8Xk7vp6+yGe5pd3YjN
C3B1P0fFCNX+o5dfNTh+Py9u1OVj1jTZ6UcCKJisHFycu5eOpj3UQ/kxAjjJ
utRmfKKgwL1A8dflZiR1W5rUze3FKolZRzvsqThSmnv8/K02PE7hl98mc+zF
gGrArg5yV4q7PYZyJ9SGy3bfIn26I/X3EmW7emhrnHmeOJ3Mk0dbb247I8CK
VdwZWX/qkfbFqES5sBtr6hR35g3wkTY8L93sGg1Pqv0C7p7sQeiSeLecYD5m
TsYmV3fSsHHB+X9xbT3gi/iviFLlY4ti7Zp29QaY71tRXmLMREqbm9at7zzI
ZLTGtQQ34LNqUqLreybW/WNWZWaQu6ogfnQhswHeDePG60j+GFLamavpyMOT
2Qfm7dtNxyql1873NrJwqDwgfd4qsjdXMXpKfEnOUXdYJjjCwiqdDXNNerh4
oZO35UcRHXEqUWorr5O9z25gXU3k4qu34tGScfKOMuQV/3vFgi67OTn1Mhee
j09I2m9pRERqr9KPYhaKfh73SjLg4lndHMt5FuRdKgvb/9fNwvi78Q7TDVyY
bBjh5/o2IrJatyR4lIV+q33nmDO4EJszL7D1RSM6yuIFZQvY0M+aOFXB4aBt
o0b82uJGrF8Wy2DJsLHbw4vaVMVBYu4hMZH2RqT+rpwTsoONv/U5gSEfOagR
9Zj3Y7ARccy/8vcPsqHmzuBJxXLQWmZy+uEcBtbX3DrYZMxGoqLUuNE9creM
qQfEr2BARWfeYveTbGz78NCr1IcDHZUlx+bLMxCYo7Qh2ZGNhSeCeMUXOBgU
Nu65uZeB6CenO4bI3WZZ+mT7YXKfGDX2BV/SZWDlAXpjnycbLvYrEw+bcXAj
NmAi3JQBbspu9Sx/NsKpzK4ufQ5WJ+i/f2HNwL4RRRnlIHLn8dWn7TjAQXEK
f4WlEwPywk6al8LYuLDrihxdlYOFR1dqul5kQPFHxrlXEWxkWh+W7iJ3l5FZ
lXbAVQa2e+/euD2K9OH2Dl6pPAdF7D1pttcZkHonv/VZDBtHxYIUOmRJv9+O
0Vh8mwFvCUG/djwb0TNV9gyu40BkrUp5ZDADl/wY3vWvyH15Q9RKZRW5f675
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
m2sGJIi/lFOK248THitpjdm2hOeDYI6Xf0obZiW154mezsMK5xr9JT968FBx
d/jlk1ScaGH0SX6qhvfKs+xNZnwkWVg1nbxFQaRYUG/uYTr+BGp9VY4XQPG+
pPf1XOL7wmVdUTebUZxsf06C6HlvS3bDLwdyt7atnaMb3oYX3u55PcTfnYsC
hWo6qSg7tmSNumonXLertc4iOfl+mFNBC/E3vOer433ir3yWMfM88bfCfWik
8RzZj4LZXicsStHo6qUXf5eLhou759XUUmDmfM3GxbYeDjZLx5+sFiDwwzwx
Dz0KBr5fjnOIZSA17KK8PZkDQa9WL/Ynepr1C6f9I/z7F7MF7USHdGN/F1N+
A+zf71HG8gJ0lwiV25N89Uy8oWGRYT1UI8352ScrkWTbu0A7gIeBka+uNMIz
Kbr0pDLRM+lDf+ZjwvOkkOo89feZFpNKS4pPPoaTPb0dFrKRLZS1ZPXyBuQc
+ha4cKAImgdXu+kPk7zqZvlhjPDIrTSJ0SM8p7aFcC8THstR5njaw2ZEbLwx
2SeZj8PLNEPmHGBBbFHh2BaFRmhWqMkso+XjYpeqZibJI3bqzOXziL+fDHSW
HiM8pRuilE4TnqplOzkJjS2Q7LT8s7YmDwzdNi3Rz0ycdTEtlCLf/5seZnCS
fP9e7XePJfkewvPdN8h1Yqu/5aP45lwcenjH1bqzG9I5lZluRg1I7nrsK9hS
BK71qb5NFRwErwmVt7ldj7mvr+8OjqiAa1WFrYspD62ydisUj1MR459oWVFU
jV39qoZCFnzYHdKZ+DpMwR1fr3tbfSjQKHU7rNHEx+iWww+Kqij4MW9l/g2/
esSojQqGSZ+u96n8UJtEQc3ZDdHn22g4pqmwmmUjgNLd/CucIMIT6mq0dwkd
V/U6Trg8FuCP2pVKNVcKdrXEMB1XNuLfhj022aUC/AuZePn2BAVi2dGpnt8b
UXj6scY0gQBi4Z6rnMkcCPm7SMToIwOOIaGtQqK9oO+X0NY8TOZDrO65V4eb
4LLjVnTm8l5EhSTGZnhRYCdqWrK4rgk+v1wvdS/sxcE9Q5f7Eyg4fMnLZ7d2
M95GGwbZzevFvIQlI16VFIj4SOJuUjNcv7YYSc7uxUl5791nBBQUT4Sc3CHS
gg1ldh+nC/ciWzKxuXM6FXrjlY0NZi3wPNB6OnFCgHXNg5eC51MhZbTv496o
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
B7mojRc=
      "]], {}, {}}, InsetBox[
    StyleBox["\<\"Bedtime\"\>",
     StripOnInput->False,
     FontSize->13], {12.2, 5.2}], InsetBox[
    StyleBox["\<\"22:00\"\>",
     StripOnInput->False,
     FontSize->12], {12.2, 4.99}], InsetBox[
    StyleBox["\<\"23:00\"\>",
     StripOnInput->False,
     FontSize->12], {12.2, 3.03}], InsetBox[
    StyleBox["\<\"0:00\"\>",
     StripOnInput->False,
     FontSize->12], {12.2, 1.83}], InsetBox[
    StyleBox["\<\"1:00\"\>",
     StripOnInput->False,
     FontSize->12], {12.2, 1.11}], InsetBox[
    StyleBox["\<\"2:00\"\>",
     StripOnInput->False,
     FontSize->12], {12.2, 0.68}], InsetBox[
    StyleBox["\<\"3:00\"\>",
     StripOnInput->False,
     FontSize->12], {12.2, 0.41}], InsetBox[
    StyleBox["\<\"4:00\"\>",
     StripOnInput->False,
     FontSize->12], {12.2, 0.24}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Duration / hours\"", TraditionalForm], 
    FormBox["\"Reward Value\"", TraditionalForm]},
  AxesOrigin->{5., 0.},
  AxesStyle->{{
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.015]}, {
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.015]}},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{738.124999999993, Automatic},
  LabelStyle->Directive[
    GrayLevel[0], 13, 
    Thickness[Large]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Function of Rewards to bedtime and sleeping duration\"", 
    TraditionalForm],
  PlotRange->{{5, 12.5}, {0, 5.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.789058185082436*^9, {3.789058236250795*^9, 3.7890583119071226`*^9}, {
   3.7890583729161844`*^9, 3.789058402051011*^9}, {3.7890585175178165`*^9, 
   3.7890585675747423`*^9}, {3.7890586121044455`*^9, 3.789058675288463*^9}, {
   3.789058712240756*^9, 3.7890587586494646`*^9}, {3.7890647975060215`*^9, 
   3.7890648164759283`*^9}, 3.7890648540971394`*^9, 3.7890676287399397`*^9, {
   3.789067684577809*^9, 3.7890677158211856`*^9}, {3.789067749759631*^9, 
   3.7890677636285925`*^9}},
 CellLabel->
  "Out[976]=",ExpressionUUID->"a4b810dd-6a04-42d9-ba69-a4fae46ca2af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"plot", " ", "rwd", " ", "func", " ", "for", " ", "sleeping"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"5", ",", "22"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "3"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"6", ",", "22"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "4"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"7", ",", "22"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "5"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"8", ",", "22"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "6"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"9", ",", "22"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "7"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"10", ",", "22"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "8"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"11", ",", "22"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "9"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"12", ",", "22"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", 
             "10"}]}], "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"5", ",", "23"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "4"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"6", ",", "23"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "5"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"7", ",", "23"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "6"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"8", ",", "23"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "7"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"9", ",", "23"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "8"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"10", ",", "23"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "9"}]}],
            "}"}], "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"11", ",", "23"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", 
             "10"}]}], "}"}], "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sleep", "[", 
              RowBox[{"12", ",", "23"}], "]"}], ",", 
             RowBox[{
              RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", 
              "11"}]}], "}"}], "}"}], "]"}], 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sleep", "[", 
              RowBox[{"5", ",", "0"}], "]"}], ",", 
             RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "5"}]}], "}"}],
            "}"}], "]"}]}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"6", ",", "0"}], "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "6"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"7", ",", "0"}], "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "7"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"8", ",", "0"}], "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "8"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"9", ",", "0"}], "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "9"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"10", ",", "0"}], "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "10"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"11", ",", "0"}], "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "11"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"12", ",", "0"}], "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "12"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"5", ",", "1"}], "]"}], ",", 
            RowBox[{"1", "\[LessEqual]", "x", "\[LessEqual]", "6"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"6", ",", "1"}], "]"}], ",", 
            RowBox[{"1", "\[LessEqual]", "x", "\[LessEqual]", "7"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"7", ",", "1"}], "]"}], ",", 
            RowBox[{"1", "\[LessEqual]", "x", "\[LessEqual]", "8"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"8", ",", "1"}], "]"}], ",", 
            RowBox[{"1", "\[LessEqual]", "x", "\[LessEqual]", "9"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"9", ",", "1"}], "]"}], ",", 
            RowBox[{"1", "\[LessEqual]", "x", "\[LessEqual]", "10"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"10", ",", "1"}], "]"}], ",", 
            RowBox[{"1", "\[LessEqual]", "x", "\[LessEqual]", "11"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"11", ",", "1"}], "]"}], ",", 
            RowBox[{"1", "\[LessEqual]", "x", "\[LessEqual]", "12"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"12", ",", "1"}], "]"}], ",", 
            RowBox[{"1", "\[LessEqual]", "x", "\[LessEqual]", "13"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"5", ",", "2"}], "]"}], ",", 
            RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "7"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"6", ",", "2"}], "]"}], ",", 
            RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "8"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"7", ",", "2"}], "]"}], ",", 
            RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "9"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"8", ",", "2"}], "]"}], ",", 
            RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "10"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"9", ",", "2"}], "]"}], ",", 
            RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "11"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"10", ",", "2"}], "]"}], ",", 
            RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "12"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"11", ",", "2"}], "]"}], ",", 
            RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "13"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"12", ",", "2"}], "]"}], ",", 
            RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "14"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"5", ",", "3"}], "]"}], ",", 
            RowBox[{"3", "\[LessEqual]", "x", "\[LessEqual]", "8"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"6", ",", "3"}], "]"}], ",", 
            RowBox[{"3", "\[LessEqual]", "x", "\[LessEqual]", "9"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"7", ",", "3"}], "]"}], ",", 
            RowBox[{"3", "\[LessEqual]", "x", "\[LessEqual]", "10"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"8", ",", "3"}], "]"}], ",", 
            RowBox[{"3", "\[LessEqual]", "x", "\[LessEqual]", "11"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"9", ",", "3"}], "]"}], ",", 
            RowBox[{"3", "\[LessEqual]", "x", "\[LessEqual]", "12"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"10", ",", "3"}], "]"}], ",", 
            RowBox[{"3", "\[LessEqual]", "x", "\[LessEqual]", "13"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"11", ",", "3"}], "]"}], ",", 
            RowBox[{"3", "\[LessEqual]", "x", "\[LessEqual]", "14"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"12", ",", "3"}], "]"}], ",", 
            RowBox[{"3", "\[LessEqual]", "x", "\[LessEqual]", "15"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"5", ",", "4"}], "]"}], ",", 
            RowBox[{"4", "\[LessEqual]", "x", "\[LessEqual]", "9"}]}], "}"}], 
          "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"6", ",", "4"}], "]"}], ",", 
            RowBox[{"4", "\[LessEqual]", "x", "\[LessEqual]", "10"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"7", ",", "4"}], "]"}], ",", 
            RowBox[{"4", "\[LessEqual]", "x", "\[LessEqual]", "11"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"8", ",", "4"}], "]"}], ",", 
            RowBox[{"4", "\[LessEqual]", "x", "\[LessEqual]", "12"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"9", ",", "4"}], "]"}], ",", 
            RowBox[{"4", "\[LessEqual]", "x", "\[LessEqual]", "13"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"10", ",", "4"}], "]"}], ",", 
            RowBox[{"4", "\[LessEqual]", "x", "\[LessEqual]", "14"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"11", ",", "4"}], "]"}], ",", 
            RowBox[{"4", "\[LessEqual]", "x", "\[LessEqual]", "15"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"12", ",", "4"}], "]"}], ",", 
            RowBox[{"4", "\[LessEqual]", "x", "\[LessEqual]", "16"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"5", ",", "5"}], "]"}], ",", 
            RowBox[{"5", "\[LessEqual]", "x", "\[LessEqual]", "10"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"6", ",", "5"}], "]"}], ",", 
            RowBox[{"5", "\[LessEqual]", "x", "\[LessEqual]", "11"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"7", ",", "5"}], "]"}], ",", 
            RowBox[{"5", "\[LessEqual]", "x", "\[LessEqual]", "12"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"8", ",", "5"}], "]"}], ",", 
            RowBox[{"5", "\[LessEqual]", "x", "\[LessEqual]", "13"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"9", ",", "5"}], "]"}], ",", 
            RowBox[{"5", "\[LessEqual]", "x", "\[LessEqual]", "14"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"10", ",", "5"}], "]"}], ",", 
            RowBox[{"5", "\[LessEqual]", "x", "\[LessEqual]", "15"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"11", ",", "5"}], "]"}], ",", 
            RowBox[{"5", "\[LessEqual]", "x", "\[LessEqual]", "16"}]}], "}"}],
           "}"}], "]"}], ",", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sleep", "[", 
             RowBox[{"12", ",", "5"}], "]"}], ",", 
            RowBox[{"5", "\[LessEqual]", "x", "\[LessEqual]", "17"}]}], "}"}],
           "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "17"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Full", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "5.2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"#", ",", "24"}], "]"}], "]"}], "<>", 
               "\"\<:00\>\""}]}], "}"}], "&"}], ",", "20", ",", 
           RowBox[{"-", "2"}]}], "]"}], ",", "Automatic"}], "}"}]}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Sleeping Time\>\"", ",", "\"\<Reward Value\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Reward Function for Sleeping\>\""}], ",", 
      " ", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "13", ",", "Thick"}], "]"}], "}"}]}], ",", " ", 
      RowBox[{"TicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "Black", "]"}]}], ",", " ", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", " ", "12"}], "]"}], ",", 
           RowBox[{"Arrowheads", "[", "0.01", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", " ", "12"}], "]"}], ",", 
           RowBox[{"Arrowheads", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], "]"}],
    "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.782536360090044*^9, 3.7825364875740433`*^9}, {
   3.7825365496778383`*^9, 3.7825366094259195`*^9}, {3.78253663974576*^9, 
   3.782537502830853*^9}, {3.782537634685501*^9, 3.7825377418455334`*^9}, {
   3.7825390429901476`*^9, 3.782539045153113*^9}, {3.7825391718663225`*^9, 
   3.782539181109273*^9}, 3.782539502591223*^9, {3.7889889097595387`*^9, 
   3.7889889226823864`*^9}, {3.7889891784864416`*^9, 
   3.7889894920973773`*^9}, {3.788989898746092*^9, 3.7889899588618126`*^9}, {
   3.7889900313053246`*^9, 3.7889901025748854`*^9}, {3.7889901842410455`*^9, 
   3.7889902204394903`*^9}, {3.7889902606222315`*^9, 
   3.7889902655603313`*^9}, {3.7889903072878036`*^9, 
   3.7889905269469075`*^9}, {3.788990567828743*^9, 3.788990642664157*^9}, {
   3.788991001518791*^9, 3.7889910973251925`*^9}, {3.788991135216384*^9, 
   3.7889911672129617`*^9}, {3.7889911997740993`*^9, 3.788991216333152*^9}, {
   3.788991438554302*^9, 3.7889914584387627`*^9}, {3.788995361514231*^9, 
   3.788995369563878*^9}, {3.788995409930496*^9, 3.788995411052573*^9}, {
   3.7889969928779945`*^9, 3.78899700668635*^9}, {3.7890145194572496`*^9, 
   3.7890145224090376`*^9}, {3.7890151149138875`*^9, 
   3.7890151735381975`*^9}, {3.7890152541845093`*^9, 3.789015262378713*^9}, {
   3.7890153519848523`*^9, 3.789015355910861*^9}, {3.789015530733987*^9, 
   3.7890155723826323`*^9}, {3.789055043084276*^9, 3.7890550460876913`*^9}, {
   3.7890551929880514`*^9, 3.789055340994851*^9}, {3.7890564107690315`*^9, 
   3.789056509777939*^9}, {3.7890565424357147`*^9, 3.789056578105893*^9}, {
   3.7890566090014443`*^9, 3.789056609707632*^9}, 3.789056843339226*^9, {
   3.789064202174636*^9, 3.7890642276632795`*^9}, {3.7890646281506248`*^9, 
   3.789064629595884*^9}, {3.7890647049131913`*^9, 3.789064721230929*^9}},
 CellLabel->
  "In[883]:=",ExpressionUUID->"7029e3af-cf07-4ce7-8c1f-3f81ebc491ea"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJztnXmgTeX6+I8hjohDp5Ihx7nHSchQkqGcrYFkiIpSqFvKkMhw4yoqQ0TU
JTKWNJISlVRK5KokU4YSosgYxzzX7572+rzP2Y+zf89Z9uGLtn/u/fSu9a53
rb32+3zOu9bz7JL3dbz1gewxMTE5SsbEpP1v0clbXvzzzz9nxXj/evxY5aaH
Yg873nvFjIuaPb/H8T9eKXVd3nzbHA/7Y9jDxdusdXzFOx82fP+HaY4fvmjZ
2q9v+D4FXt31unN/Gv+b40Frhr9y29RdjvtdUynnY68dcNyq48g6CYX/cFyg
wrA2OQpkD8DTWqyNX5D9HMfbrr+/Z5t8sY6/3X7briNX5nVcq0Gvkvd3yu+4
V+cRqxctinN868MH/t2rXiHHCS0GPVd/0/mONx55a/+k1hc4fvW5Q8tLx17k
OGdKvrYFXynsuPm4txoMvKSI43dSu01KnFnU8b7di++sV7O443Vx2z9ZO+MS
x78UHDf/68sSHC/ePeDedluEazQcMq3oxyUdd/uoa8vs/RIdlz9Y4spK1//D
8X3vb/iyY8Ekx4Vqd+i5f4nwsN9+eH7akFKO/5Otxb297k52fO7e1+8cWuRS
xzH/jD1v+hbhTq9X2Fry7dKOPzhwdckv21zmuMvcZvFdq5Rx/G6bQMWH9ws/
0D8Q++i8so53vF+y+gdDyzne/dFXL1RvfLn0V6X/24tLlHfc8dm8295dJ3xt
6iN954yr4Pj6TQe2d76qouPkORdPLj1ceM7oXof+/FN4/nVxj1yV85i7n7uW
X3DrC/OlvfOBo32K9P7DtTc42PmJtVOkfUyrUsk3bxSe13jPeefVku9b9Rbz
hveZIO0Dvul+zc6Vwu/+uaTA67uFU3vtuPXp8bL/ewVSE1aMkfY/HpvwVa0l
wknTjow+sE24aoO3+t56SPjpC9rvu26x9Ldtc98Hnxgp7dWaXH3etu+E7x30
/Lrxm4W7JF87/8g+4WNdzk+ZeFR48bpJtUtulv4HNLklz7IR0r5idrb3Uhak
G/+Bu/rs+004bljuhxvtFR69bs36Y4fTjSd33bG3/yF8wcyxvV/ck9uxng90
e/CftDMfLhz+86Al754XYD6EmQ9h5kOY+RBmPoSZD2HmQ5j5EGY+hJkPYeZD
mPkQrvPoc1O/rxLrmPkQZj6Eo/NhdD7MzHzI/ZKreNtnpizN5+6f/a9MrVk5
l9w/m3fWLvvm4IKO9fxZcU/bOruvKeD2v3Lqjj6flpft9Xz69Mvj68a2k/71
/Fo1oesHZVbK/fzDf65778Y/ZXs93547vdSTSVdLu55/L513z6qPJ8j49Hxc
tnf7eQM3yf56Pq5fq82YacWlXc/Pk1dviFvRUfrX8/WEKateHbdc2vX8fXuP
pxq/85P0r+fvHU/nmXgoTtqt+XxD9eKzys6U4+n5/d6kkQMK7JR2Pd+33Z/3
xc+Xp7uear7//LJVFcadK+1+5/9s7aqNaPqLHF/Hg+D8Lu06Pni9Otb3q96f
7Wv1SONjKcSHvXMqXp5nbUEXH2DiA0x8gIkPMPEBJj7AxAeY+AATH2DiA0x8
gIkPMPEBJj7AxAeY+AATH2DiAxyND3/P+MDnX+2B2X0fuFjuh97linz52Jvx
bvu5Nzb+bcvVFzrW8WHJ3Fsva1VHtl+W0LPD/EVyP+n4UPmF9c2H5ZZ2HR8O
xnVsfudF0l/z/MOmfTJGttfx4e51x57rv1K21/FhUvcq+zt2k3YdH85t2XD2
t4fk/BPOeWnZtKfkeDpedMj17MSnZkl/Ol58/tLcAu3ukXYdLzZsXXddywrS
ruPFhTfP7X3LnnSfx5Ovbny3q4xHx4/uF982vdf70p+OH19PHVSs9W3SruPJ
jmNv3nL3P6Rdx5Pg/CvtOp5Urpm8o1wHGZ+OJ8cmTL+m5zuyv44n9WvsnPBA
g3TXU8WXLv3zrmhWXNqtvzd6jl76S9OC6c43w/gSH5b1+er7g+3fWpnG2QLE
mwv7/uOnawud7+INTLyBiTcw8QYm3sDEG5h4AxNvYOINTLyBiTcw8QYm3sDE
G5h4AxNvYOINTLyBiTcw8QaOxpuzM97w+RJP4Ns39S4xbpl8/hU73PXTd/dc
7PbX8ebxGp8fvq+DbD+66ZUTOsbI9jrelBtW54aV1eV+0vFm0fyX+32xWNp1
fAlcu7HSJ7mlXceXwlsmNt37sLTr+LI1Z9MDm2dIu44nNxf64K2yO+R8dDxJ
/Lz7dw/cLvvreFKlzYWf3lRS2nU8OVCyUsVjk6Vdx49Fjxdt1Wq9HF/HjzdL
rxvwUh3ZX8ePT5f2fPSpeGnX8SM4f0r/On70eu+l+rnfTHd9jfWnrWuG/Va9
lmyv48Uf/SstK55f2nW8iG0RU++5venuHxU/gvN/uvPNMH4UzjTr/vT1YPs3
+6VxDhdPRncdXfr5ERJPYOIJTDyBiScw8QQmnsDEE5h4AhNPYOIJTDyBiScw
8QQmnsDEE5h4AhNPYOIJTDyBiScw8QQmnsDEEzgaT86MeOI+3zpxjzf9XT7P
JZ1ey3Z1z2Ju+61Prc0z/Ih8njqepFTKv2JyMdn+kU/uqJQ6VrbX8eT+adUv
n71GttfxZH/c9V+03i7307Sm8f8d97D0p+NLkaEdL3r8HelPx5cBjX/ctqu+
tOv4svTJFlfduEyOt+y13UP2NpHj6XizP9vAZ5sNl/50vGk1e8+9iypLu/V8
YsO36/eUuFmOp+PLhmoX1bnpGelPx5dbDz1Z9PPS0q7jS+yPH57z74Nyfjq+
lGs75vkxcbK/ji/t72n2xlU3yPh0fFm1vMVrKX1kfx1vbhr+VfcPE9NdLxVv
/ux69L5Hdsv4dLwJzv+yv443wXgg++t48+df/4qeMOvj6+Ox/fP3pbHEn8Ml
YyttXCzxByb+wMQfmPgDE39g4g9M/IGJPzDxByb+wMQfmPgDE39g4g9M/IGJ
PzDxByb+wMQfmPgDE39g4g9M/IGJPzDxB47Gn9Mj/vB5EF/c/VLk/NJVny7h
uFn2YcNHPSOfj44/o4Y/0WlQCdn+knMLV5zaTLbX8Sfvy2+s3bBdttfxJ2bI
Xcdm1pL9dbx5d3XzPkM+lv11vPmg4sGxxeNkfx1vdi068uucq6Tder5d/ItS
uW7KIdvreFLvlflX7ikm7Tq+bH2k/sr/VpB26/n3hAL//tcnh+T8dDyJafvP
NgMulP50PGlzcMiSaXmkXceTB2fvbfRVOWm3/l5purLApFv2yHh0/Fi1YHL2
286X/nT8uK75qod65pJ2HT+OLL6zRJF01zfjv1cSsoyD8UPORx9ft7P/uH+k
scSXvkcKtP11q8QXmPgCE19g4gtMfIGJLzDxBSa+wMQXmPgCE19g4gtMfIGJ
LzDxBSa+wMQXmPgCE19g4gtMfIGJLzDxBSa+wMQXmPgCE19g4gscjS8nJ75w
fZ8ePyjP9Y3lev/Y+6nYAiUS3fZL75j/9cUbhHV8Gbi5f4sLtsv+r/V/+fwh
H8j2Or6ULv7Y+7G3SruOL/cVzTtg5FLpb0iJc6t9PVa21/EmptEfawZVlXYd
b6Z9mPPKoedIu443vR+aVW/j89Ku4037LSldvisr7Tr+XHJL7a+/Pyjj1fGn
drEvxzUqJPvr+PN4wSLL9wyUdh1/Eqevu7ZDKWnX8WhZ0U1Du+6W4+t4dHTz
/W125ZX9dTw6p8Kb6zYelf11POrR6quLj/SX/XU86lWs0qs1E6Xdep5/xy0f
fDc7VrbX8ejLzfvuy5FuPBnHI9k/43iUeNJYH19fP7YveyyNJR4Njlty69P7
JR7BxCOYeAQTj2DiEUw8golHMPEIJh7BxCOYeAQTj2DiEUw8golHMPEIJh7B
xCOYeAQTj2DiEUw8golHMPEIJh7BxCOYeAQTj2DiEUw8gqPx6MTiEdePeAN/
3aT3Y40myfX95PGJCe93kuup49GR5MYrv3hUts9fuE7n/9SS7XU8Gt73/RLr
1sj2Oh7N2HjBmCcvk/11/Cn/++gGhefK/jr+HC26YNebB6Rdx5/B9XtW6F5c
+rf+3rlp8azYuVulPx1vprT+YdWgnNKfjjcH/3zvUJeLpN3v+77B+U6Or+PJ
gMEtFx07V/rX8eSdH+ev7RQv7X7fB95SvsD2dYfl+Dp+jO1RdPnc3NJ/xvFD
2jOOH0mnjPV49PVl+6sKpbHEE7a38jVuT+18bsuFO0/bfA3iCWzla+j39aLv
J0fjSTRfI/Pz9+mWrxH8lzpLc+j7t6mzQt+PilPvS6XOCn3eHaeef6fOGuk9
j6A9lFNnha4nxan1pdRZoX4fp3w/ddaQkPlafHdF/3mHFxeW8+P9YljPz3r7
cO8n//+vn2x/ovl9D5aaOHprTHb39wdMvICJFzDxAiZewMQLmHgBEy9g4gVM
vICJFzDxAubvD5h4ARMv4Gi8+HvHi6ufPlDhvgX7HX/51APNKwyS71eVxd2O
5kvY6O5/3m+G/b7frOPRDxUumvlgu4OOm6/KX33uebsd+30fesTqla+2KL9P
fPDW7scqF9zhxm+9L63j38Scl2ZvW+2Q47ee/vWt/ItkfH7fr35w6qYt9xyT
8f0+qeRP3wzb6cZnvX8dV776t/+uv8vtr9/HnnloYYnxQ7a7/qz4XGhn+VJb
x8v5LVzdYN37FWR+5H1dN38Y73MvHLMz3/pWcj+NK3skaWAZuZ+s972r9H0t
e4l35Pz8vv89/o/67Z9YKp/31pWLhi3bJse3/KL2hmnTJy2T67E+d47Hc90r
14P3yd39b7xPnv0/XV56ZaRcj/eavvfF6rtkPNb75nWnNHup0xq5Hn7fPz+W
vV+FS4vJ/n7fR9d+tG5t1z8H7pDr027cmm8qdJfrY72/PnbQVZuemibXo/r2
gflzdZHrYb3fvvSGyttH75Pz8fu++9Mj7+nZqLLsr/0NP+Hz1X6i/S559vLO
718n7fp9ed1fuPfnQ/0tXvlavPKzeOVj8erv53TXL0O/Ov59fMbH/vdUTePd
3t+1qbPuLBXkE/Wrt1rfnW3E5HOcX8H4FYxfwfgVjF/B+BWMX8H4FYxfwfgV
jF/B+BWMX8H4FYxfwfgVjF/BUb+K+lWaX3E/4E8w7/PD1vv8fv2K9//p33r/
P5xfsb+VH+DXr6x8gnA+xXisfAPtU/gT+1v5CH59yspfsPyJ/AbGZ/mTle+A
L9Gfzn/Ian+y8icsXyK/gvFavuQ338LyJfINOH6kvmTla1i+ZPmR3/wOy4+0
T5D/4eYPw4/wIbbPbH5IqA8VVj5UWPlQYeVD4fNJrPHoz1ufP/11aZvWvs/5
0oTWQT5RXwrkKdHyX4m5nS/B+BKML8H4EowvwfgSjC/B+BKML8H4EowvwfgS
jC/B+BKML8H4EowvwfgSjC/B+BIc9aWz05fc/eDlq8B+81X8+pLf/JZwvsR4
rfwXv75Evoz7/hr5MuH8if2tfBrtTzq/Bp+iv0j9ifwc+rPycyyfsvJ3tE9Z
+Tz4FOPLan+y8oMsf7Lyh7Q/ZTafiPPN3HqT9GflG/n1KSs/yfIpK39J+1Vm
85m4Pn79ysp30n5FPhLHw2/gcPlQez2fgvEpeJDnU37zpazxZOxTqbNq/9V+
IIX+6h265C8+UZ/6Kf6WQwfniE/B+BSMT8H4FIxPwfgUjE/B+BSMT8H4FIxP
wfgUjE/B+BSMT8H4FIxPwfgUjE/B+BSMT8H4FBz1qTPTp/j88CV3f3n5V7CV
f+XXp8jXon8rXyucT7E/+VxwpD5l5X+F8yeOT34YnNn1J7a38sf8+pOVb2b5
kuVHVn4afuTuN+VHVv6aX1+y8t0sX7L8iPw4zkf7kfahSPPl/PqQlV8X6foS
+Xicv/Yf7TtWfp72AStfT/uPzp/DN9znEyafL3T9KEGtH0We38fxw+X30a7H
m7EfJQQWX5jWznuoqbO2xQf5RP2o50ND3/o0T6zzIxg/gvEjGD+C8SMYP4Lx
Ixg/gvEjGD+C8SMYP4LxIxg/gvEjGD+C8SMYP4LxIxg/gvEjGD+C8SMYP4Lx
IzjqR6eHH/F5kD8I+80f9OtH5BtyPCvfMJwfsb+Vj+jXj8hfpH8rfzGcL7G/
ld+ofUnnO+JP9BepL1n5kpYvWfmU2p/Ir2T84fyJdu1PVv6lX3+y8jUtf7Ly
ObVPkd/J+Vk+ldl8T/qL1Kes/FDLp6z8Ue1Xlk9Z+aXaH8g35Xpk9nkd22c2
H/XZEH9KPK79RNkaj/68M/anxECPh9PaDzp/Cm5/8IT9qW21hhOuv0z8Ccaf
YPwJxp9g/AnGn2D8CcafYPwJxp9g/AnGn2D8CcafYPwJxp9g/AnGn2D8Ccaf
YPwJxp9g/AnGn2D8CcafYPwJjvrTqfEnrjd+BJPvClv5rn79ifxY+rfyY8P5
E/uTPwtH6k9Wvm04X3L3s5ePC2d2fYntydeFI/UlK7830vUl8oEZbzg/ol37
kZUv7NePrPziSNeXLP8hf5bz9Zuf7Nd/rHzmSNeTLN8hH5rztXzHyo/OeP1I
tsc3ON6pzp/Wxw+XP017xr6TFGhbI61dfKd9tSCf7Pzqyn8NqHsKfLrlV/v9
/Sf9/vzZni8XvN+ivgNH86vPhPzq5L8N6/k+GA/k+2vlW+vvt95/9AWXl/rl
it01NC/h96g83u3lp8MXUA/e4+He+7vwEe99E9jVv/KY5y/hjk++Evyq935u
cKt4eR/Za0/x3jehnfdPaOd5C+0w7Y+zPum1u/UTr534SzvsxT93vcm3gnV8
1NuHy9cKuR1ihswIZf17LNoH5PM+Vb+HO/GSZbs3rtiXQvyHif8w8R8m/sPE
f5j4DxP/YeI/TPyHif8w8R8m/sOsd8DEf/hsi//R9Y7Q+J/6wfiEUs8tcVzr
zgYXVi3+mbs/6wZWzHy55DrH5HPB5HPBfvO55jQrUueVIyvleUHTCs/leeYF
dzzyuWArn+uahIZ7G984z/XX8+HWGy58dr7rz28+V5lyd9z1c6WfHDeZ8v3y
9e3HOLbyufL/96siC6cucNtb+VsbRuS79rMSU914l+9/a8zbU2e5/f3mb7Uc
vu/+Pxasdpx7VJm5296f6NjK3+r2Ys7y+TYvctuTr8X4tJ9936Dg+vMLfCnP
S4x8LR0frN+r0X538Ju5mwePXuN4+qH5FSdOm+LYys9q+uSSMcNnL5bP08vH
4vy0L8Z+NGXrFZPmuu2tfKzUn0od+m7tELe99Xs4zaoOvKP8h6+q+CrjIb7C
lp/WblXu7SbZJJ7lGj54T45mU+X5jZGv9WqRai1blJb5QfvthG29Os7p9l+5
n4z8rDcaXtk2qcNwWR8xfo/nvTarzhv8wRtue/KzOH+d36R9+oUiG0vctr63
8g/Z/uetxW8cGT/YXc9w+VqBEN+S90vhniE+Jc8HYHqyPk/9fQj+GzLjzb/a
N6bQX5eEIJ8q3+n+3MsPzrv5sPMdGN+B8R0Y34HxHRjfgfEdGN+B8R0Y34Hx
HRjfgfEdGN+B8R0Y34HxHTjqO2eH7/B54jvufvDyseBI87HC+Q79+83HCuc7
9Oc3H8vyHfKx3PfXyMfS/mPlX+E/9K/zr7QPReo/5F9xPCv/SvuQ399L0n5k
+VCk/mPlV2n/8ft7TNqHLP8hv4rrbfkP8ZHt/eZXWf5j5Vdp//H7e1Dajywf
Ir+K87V8SOdTWflV2ofIZ+J4+BAcLr8K/4F7eP4Dt/H8J7P5VBxPf97hfKjr
X+1bXT5Viz5BPlU+dHf77Jc2jDvqfAjGh2B8CMaHYHwIxodgfAjGh2B8CMaH
YHwIxodgfAjGh2B8CMaHYHwIxodgfAiO+tCZ4UN8XvgQjO+4+8vLp4L95lOF
8yH6I58KtvKpwvkQ+5NPBUfqQ1Y+lfYf8qc4fjj/oV37jt/8Kct/rPwp7TvW
eo+VL6Xnc7/5UZbvWPlR2nes9R3yofg8LL+x8qG03+j8KOIfx4vUb6x8Kb/r
O+RHMT7LZ6z8KO0zOj9K5xdZv2+m/QafcZ9fmHyp0PWbBLV+4z8/iuNp1p9v
OL8Jtm9Pof+pHYJ8qvwm6Zs75+f8XvwGxm9g/AbGb2D8BsZvYPwGxm9g/AbG
b2D8BsZvYPwGxm9g/AbGb2D8BsZvYPwGxm9g/AbGb+Co3/zf+A3XH7+ByYeC
I82HCuc39E8+FGzlQ4XzG/b3mw9l+Q35UPRv5UNp37Hyn/AdNz+o/KesXu+x
8p+072T29+MYv9/1Hb/5TZb/WPlN2n8y+/t0nJ/f9R4rn0n7EPkuHI94CUfq
Q1a+k/YhK7/J7/qOld+kfYj8Js5f5wdZ6zt6e3yI/sLlO7UJ8Z/E49ozy9bn
Gc5/gu34T2Kg27dBPlX+U69Grxw/lT7m/AfGf2D8B8Z/YPwHxn9g/AfGf2D8
B8Z/YPwHxn9g/AfGf2D8B8Z/YPwHxn9g/AfGf2D8B8Z/YPwHxn/gqP+cHP/h
+uI/MH4Dk88E+81nCuc/9Ec+E2zlM4XzH/YnnwmO1H+sfCbtO+QvcfxwvkO7
9hvyl2iP1Hes/CW/6zvkKzE+y2/85idZfmPlJ/ld37H8hXwUzjezz6vc5+8z
X8nyFytfye96juUr5CdxPpav6HweK18pY1+R7fEVjn+y85X0560/z3C+Emz/
PYX+pl4b5FP2PGrGS4uL3CK+ArvnUR6751Eeu+dRHrvnUR6751Eeu+dRHrvn
UR6751Eeu+dRHrvnUR6751Eeu+dRHrvnUR6751Eeu+dRHrvnUR6751Eeu+dR
HuMrML4C4yswvgLjKzC+AuMrML4CR30lk8+jvOvlnkdxP434R//bK8r1LLR3
dPfC+4QX9niqeeyncn1P+HkUx/v9474bZ0v/FWt2bHn9IOk/08+jvP2XHn6s
fb3Ssn+kvrKuxIM/39tF+rN8pXO3Qbun5pftwz6P8sarfeWKXu1/21BL9o/U
V2Y8v/7ljq2lP8tXdL6P5S+9r+l6WeGrZHvLXxI/7jOlV1HZPlJ/SapbIqbb
P6U/y1+2xl+0stcRud8sn5lU9OD8qeWlf8tvbh6Zu3HhC2R7y29GNy3wQr1Y
2d49z/DGF6nf3FWq5ns9Wqa7H631mZw/vlnvoFwfy3dq5v1kTK+y6e4Xw3/W
9v+m5MaCsr3lP+VrL2lV+BzZXt+f2n/IT2P8YZ9fee0nOz9Qj0d/vmGfV/3V
jv8kB77+JMinyn9SC73RtPq94j8w/gPjPzD+A+M/MP4D4z8w/gPjPzD+A+M/
MP4D4z8w/gPjPzD+A+M/MP4D4z8w/gPjPzD+A+M/MP4D4z8w/gPjPzD+A+M/
MP4D/139h/PHf9z9XGblFUm95fpUzTH2yEM3y/UZuvD9frvzyPU5Uf+h/2JX
3JqzYBHpP/snu64euEo4s/5Df7cv27h7Xg/ZP1L/+WRKXMEVc6Q/y3/mbQt0
G3WfbB/OfxjvpCIHnqh5hWyf1c+n6ixfNX/BPvk8R5QZf+zIdDme5UNPdOvw
ce+msr32ofvfSJpzabK0+31etfyzJ2ofPk/2j9iHxux6aPZOOd+cmzftyT9V
+rf8qPm1/e7q1ki2134UaF/j/mIJ0u53/WdanxGbduSW/S0/aldg7mU/HJHz
IX7CkfrRJ/Pydiz8brr71fCjm8fHvd2pgWyv/aj8onnvX1hc2v2uDwX9Rva3
/OjOzrf0WHpQro/e31ofCvqJ7I8fwRn7UekonyTWn4e+3/X88f2hB7e+fcvu
GsF2fLF04OYLgnyqfBHW9Xu8ehKOT/f6Pdbv3et8x2j+/tnli9H6PWdC/R6Z
T+CFXr0ZeK9XbwYO/f3s1JTQ34tMTQn9vcjUlNB6/6kpofX+jz9+6O9jp7rf
l4ZrheQ7p6aE5junpoS+L5uaEvq+7PHHm+TlN8NdvfyeIBcOhHJqSnPv/Vja
7w7hVPf+CO2hnJpS33teQ3u9EE516xmu/xBOTdnF359eu/t7JVh/yJ0f+dyw
jh96+3C/x6mvVyjL9v/X8dHVt2vXpEqRXlvdegrs4qPHLj567OKjxy4+euzi
o8cuPnrs4qPHLj567OKjxy4+euzio8euvo3HLj567OKjx9H4eGbFR9ZL4EMX
fZQ8O9vvjmMH/3rrpkl73f1Kvjccab53TP1AuZxzf3THazfv8cINl2xx7Dff
e+hdz95/7T9/Pd5XvfH6zfeeXmlgvwf7rnD9vTrunv/EV9ss85WX7+2+v0a+
d4cGlZ7vMHu92/+LwLJ3Do/a4djK/75i56iX+7fd5rbX+d+l6+ZeW2WjnK/l
I0OTKkx7ccMy118gz5LvDrTf5Jj8b/qz8r9Xz+uT3H+X3E/NJ9+4dc13cj9Z
+eAL78q7ut24rfL3hPH7m/rzTVp+X6eLHpR4YvlTzEtP3fRevJx//ll52m/J
Jedv5YcPzfFOp2HPyPmWua/XgEWt5XytfPGxcTf0aH61nG9mf3+T8909cEyB
PDFyvtrvhuzPV3/7lXJ/6fzwpiXKfF9qgexv+eD0VZOGzZws8W/fxck1fvle
4p+VL77jlVovjmoi16vQZ6Pv+LqyXC8rf7zPQ/fWbZJTrldmf4+T6/Xjxo/W
ZvtOrof21X81vqzoxhhp1/ni1/aoPeGSUXK9tN+Sr83x8lZ8IhB3pWyvfSdc
/ngzz+fgRM/f4Lqer8F3eX4G42M6nzxj35Lz0+Nn/833p/Eq53+x7YJ8uvhW
o0Wl56zcsNP5FoxvwfgWjG/B+BaMb8H4FoxvwfgWjG/B+BaMb8H4FoxvwfgW
jG/B+BYc9a0z07f4/PApd395+eSw33xyy7fIJ6d/K588nG+xP/nkcKS+ZeWT
W35FfjnjsfwKn2J7v/nlll9Z+eWWT1n+ZOWba1/ym29u+ZOVb275k+VL5J/z
+Whf0n5k5Z9rX9L551ntS1b+ueVLlh+Rj8710X6kfcjKR9d+pPPRLT/S+eh+
/Sj4L0GtZyWo9asEtV4l72vAuj/+H/noXK9wv99Ju57v9Pjpf9eStPafnT81
XRTk08Wfvq18bYsnz9nl/AnGn2D8CcafYPwJxp9g/AnGn2D8CcafYPwJxp9g
/AnGn2D8CcafYPwJxp9g/AnGn+CoP50e/sTnQb46HGm+uuVP5KtzPCtfPZw/
sb/ffHXLn8hXp38rX93yKSt/XfuUzl/HrxhPpD5l5a9bPmXls2u/Ir+d8Vt+
5Tef3fIrK5/d8isrv137FvnunK/lW1Z+u/Yt8qHpP6t9y8pvt3zLynfX/mX5
lpXvrn2LfHeuj+Vb2q90vnvmfCsxcHOIXyW69SZ4Z4hfJR63fzjW81243/ek
PWO/SgxUqZLWzjyVmrK4cpBPF7/6Z+1f1416TPwKxq9g/ArGr2D8CsavYPwK
xq9g/ArGr2D8CsavYPwKxq9g/ArGr2D8CsavYPwKxq9g/ArGr+CoX50av+J6
408w+fCw33x4y6/Ih6d/Kx8+nF+xP/nwcKR+ZeXDWz5Ffjzjyez6FNuTHw9H
6lNWfnyk61PkyzNey5/85stb/mTly0e6PmX5EfnUnL/lR9qH/ObPW35k5c9H
uh5l+RD59FwPy4e0/1j59Bn70HG/v2n4UJJaX0pS60snnl+v56dwv/9Je8Y+
lBT4oU5au/hQh9pBPl18qMDRS7dNnCI+BONDMD4E40MwPgTjQzA+BONDMD4E
40MwPgTjQzA+BONDMD4E40MwPgTjQzA+BONDMD4E40MwPgTjQzA+BEd96MR8
yN1PXr69u95evj3sN9/e8iHy7enfyrcP50Ps7zff3vIhK9/e8iEr/z6cD3E+
fvPvLR+y8u8tH7Ly8bUfWfn42o/85uNbfmTl41t+RH4+n4flS1Z+vvYnKz9f
+5POz8/q9SUrP99cX/Ly9blelk9Z+frar6x8fe1XOl/fWm8iP57xn9jzvWTl
U1n++7lufgj3e7i0Z+xXyYGex9Laxa8uPBrk08WvZj5fc/fqeeJXMH4F41cw
fgXjVzB+BeNXMH4F41cwfgXjVzB+BeNXMH4F41cwfgXjVzB+BeNXMH4F41cw
fgXjVzB+BeNXMH4F41cwfgVH/SroV+5+9vL54Ujz+S2/8pvPH86vGK/ffH7L
r3T/Vn6/5VtWvr/2LZ3vj38xnkh9i3x/+rPy/S3/svL/tX/pegDav3S+f1a/
f07+v5sPjfx/y8esegDax3R9AO1jOv/feh+d/H/Ox1rfitTHrHoAlo9Z9QG0
j+l6AdrHdD6/9T469QC4Xtb6l7XeRT66m48y5WMnLz9eH19fHz1e9i8/NI3F
vz57Psini39t2ZPvvZQl4l8w/gXjXzD+BeNfMP4F418w/gXjXzD+BeNfMP4F
418w/gXjXzD+BeNfMP4F418w/gXjXzD+BeNfMP4F418w/gXjXzD+BeNfMP4F
/138i/PFr+D4tV+PHrNI+PkLG0x4ZIScf6T+taFdTMsKY6X/3g/fdnfnB6X/
zPoX+wfnF9k/Uv86PHLF1V0aSn9+fWvyRZd/3HiLnF9m17fYfvXAffs+K5bu
/ovQt6aXL/xGl+ukP79+te7w4YmPrpbzsfwqrsOXv/1SQI5nrW91r3zP1+X2
S/+R+tULh6qu6XKNHD+rn/9NuqfMPf/KI/1b61mFkucFZu1MN7/4fB649rqD
t4w+KvtH6k857/nmYJdqMv6sfh7Y7YcWY2rmkv6t9Su/zwPf/rTss/cfkuth
+ZH2kaB/yP4Z+1GZKJ+lrOOFjifW/RL8r6kpv//FxIEygZb7gny6+Cps1XPa
dv39Pdvki3HX43Sr5+TqVXj/rHpOOv81Wq/i9PbVaD2nM6GeU8xxHFrPKSYQ
Ws8pJhBazykmEFrPKSYQWs8pJhBazykmEFrP6fjjh9ZzigmE1nOKCQRC6jnF
BFaH1HOKUb9/GqN+//T4400MqecUo+o3xQRC6zfFqHy2GJXPFqPeN4pRz8eO
Pz75+3ADLz+NfH6Ydt6vph2mnfeNaIdp53kZ7TDtrN/QHrqeExP4zYuXtG/y
uEz3audU2PSniz+uPoH3T8cjvX3Y+gb6enn/dL2EMy0+s560dOAvwwYXXOfW
k2DiM0x8honPMPEZJj7DxGeY+AwTn2HiM0x8honPMOtJMPEZjsbn0ys+712+
4fUGa908F3Pv+xXmPTM4xn1e986b8fmmATkcU9/A3V9efQPYb32Da/LkbdKq
1iH5e3TbkS2jRsl8QH0D+rfqG0ye8Pn+Ko+5eTmmaqd/vli7YTa3P/UNYMs3
1iW+NHln54OuvxqXzy+85gf5/lr1DRrNbNxwzuQjbnvqGXB87S9dl41oUfZy
uf5+6xdMm9L6zg/zyngbNaz0Xq/uMl6rfkFi3aKH+98o49V+pOdrq15Bcr77
n6pRTbbfev2v/7mrhZyf3/oFxR6tX77wDzKfrlq74bFbbpLzs+oXDCoQs3hr
QTk/7WsD7rrpkm++kfFSr8B9H5TPvTf2wgb58sj2Vr0C4h/96XoFlg82+rHm
qLqfy/mXePPz9VdXlPO36hN80Xl39WIH5fuuffK7xMS+U6fK+VCPgPFq39zf
KnXa3lQ5vlWPQOfn63oE2levG9phxrr1Mh69/4gZfZ4vUTLdfBWm/kCoHyUo
H0pQ/pOgfCfB+Q5Mz9QX4Pia9eetvz/ev0C/EWnti13/pZ4N8pnqM+XmxF5b
/c5fnc/A+AyMz8D4DIzPwPgMjM/A+AyMz8D4DIzPwPgMjM/A+AyMz8D4DIzP
wFGf+b/xGa4/PgNTbwCOtN6A5TPUG+B4Vr2BcD7D/n7rDVg+Q70B+rfqDWi/
seoL4DduflD1BSL1G6uegPYbq36Anq+pH8D4M+s7bO+3noDlO1Y9Ae07Vv0A
7T/UD3DfH8N/rPoBxEP6I18cjtR/rHoB2n+s+gDahyz/seoD6Hx56gNw/pb/
4Dtsr/sLVw8g1HcSA/lDfCdR+U6i8p3E4/rj/+nPT3++4Xyn3MK09u9d/998
GeQz1Xealvph9NbXNzjfgfEdGN+B8R0Y34HxHRjfgfEdGN+B8R0Y34HxHRjf
gfEdGN+B8R0Y34HxHRjfgaO+c3J8h+uL78D4DEz+P+w3/9/yHfL/6d/K/w/n
O+xP/j8cqe9Y+f/ab8j35/jh/IZ28vvhSP3Gyu/3u35DPj/jy6zPsL3f/H7L
Z6z8fr/rN5avkJ/N+YTzFfd5+8zft3zFyt/3u15j+Qn5+pxPxn6S+d+7z3h9
RrbHV9x8FCY/P3T9JUn5SJLykczn5+vPV3+e4fxkR4W09mXueNkvDfKZ6idf
XFl6+uVXbXR+AuMnMH4C4ycwfgLjJzB+AuMnMH4C4ycwfgLjJzB+AuMnMH4C
4ycwfgLjJzB+AuMnMH4C4ydw1E8y5ydcL/zE3U9ePr673l4+Puw3H9/yE/Lx
6d/Kxw/nJ+zvNx/f8hMrH1/7iZV/j58wXr/59pafWPn22k+s/Ho9P1v59dpX
dH49/sL5R+orVr699hXy6zm+5S9Wfr32GSu/XufTEw8ZT6Q+Y+XTH7f+4uXP
c3zLb6z8ee07Vv78if6+PeMNtz7j5rcw+fKhfpOs/Cby37vn+PrzDec7Ta5J
a1/ujv/YVUE+U32nYKucnZp0Fd+B8R0Y34HxHRjfgfEdGN+B8R0Y34HxHRjf
gfEdGN+B8R0Y34HxHRjfgfEdGN+B8R0Y34HxHRjfgfEdGN+B/66+w/njOzD5
8XCk+fGW7/jNjw/nO4zXb3685TtWPrz2HSv/Hd9hvDr/PVLfId+d/q18d+0/
Vn67nq+t/HbtPzrfHf9x91uk/uPlu7v5zch31z5k5bdrH7Ly27UPWb93T347
4ydewpH6kJXPrn3Iyl/XPmTlr2sfsn7fnvx1zt/6PXvtP+R/u++D50Nu/guT
rx7qP1n/e+7hPt9wPvSvdmnty914lj4Q5DPVhz49MuGHfz8vPgTjQzA+BOND
MD4E40MwPgTjQzA+BONDMD4E40MwPgTjQzA+BONDMD4E40MwPgTjQzA+BOND
MD4E40MwPgTjQzA+BJ+tPsT54UMwvgOTrw77zVe3fIh8dfq38tXD+RD7+81X
t3zIylfXPkR+OuMJ50O0+81Ht3zIykfX/kP+OeOx/MfKP9f+Q/45/eM/cKT+
Y+Wj+31eZeWfa78h/9zNF2GeX9FOvjkcqd9Y+eZ+n19Z+eXaZzJ+fiX7k0/O
+Wb2/Rq2Jz/YzVenOJ9cH19/nuH8Zfmfae34S5lA72NBPlP9pVqZ2Ljzx4m/
wPgLjL/A+AuMv8D4C4y/wPgLjL/A+AuMv8D4C4y/wPgLjL/A+AuMv8D4C4y/
wPgLjL/A+AuMv8D4C4y/wPgLjL/A+AuMv8D4C3ym+AvjxV/c9eoeGNuppZzP
pOKVSg4vJ+eT+mHX1gd2CUfqLwOWznih3yE53s7K3y5uMkf6z6y/sP+CNhPf
ee0e2T9Sf9k/+fGFx36W8XXo+ug5/SZJ/5bP1Lj+4U3Fasv24XyG/i8+uPeu
886X7SP1mfLxC14e+5L0Z/lM54q35GxWTba3fKbRxhXd6uaS7TP7/o2bL849
v+aSErJ/pD6Tf8P+9m+NlP4sn8l/6ReFDlwh21t+k/OveCb3g+U3vbL1rd/x
Yuk/nN+4+WfHA23fzifbR+o3f9R79rZ3h6e7/wy/aT7h4MXzKsj2lu9Uv+PJ
wdPTXQ/LdxY8PvO2mhdK/9p/Dv/lP9Kevd1Lj/TII2z5j94fH3Kfl/KfYP51
2ShH+aSwni/09z2c/2Yrl9a+PIX+lv2e+y8+U/0X1vV7gtfjzKnfg//Cun6P
zu+M1geI1u+J1u9JN54M1x9iVb2eWFWvJ1bV64lV9XpiVb2e2EC/kHo9sape
j8w3cGi9nlhVrydW1euJDfwUUq8nVtXriVX1eo4/3qSQej2xql5PrKrXE6vq
9cQG6ofU6/nf9iH1emJVvZ7jjx9arydW1eeJVfnmsSr/Kla97xyr3geKVc/D
jj8++eQw+VZBTlAcG7jNe9+Z9lCODXzqvR9Eeyj/b7y8z+G1h7I8P3L7h7Cs
z9AOXzBzbO8X97i6TS6fHtbxTW+v44XeP+PrJ9ufbT7AethvP0w8eKzn9249
DMYHYHwAxgdgfADGB2B8AMYHYHwAxgdgfADGB2DWw2B8AMYH4KgPnFwfYL0L
Prqlyq+LxuZy/MzUTktaf5jHfR7k18OR5tfPOPz6sH3fZnftK1899+h3i+T+
J7+e41n59XmGfrvlxxtzOk6seP/8JW1lfvGbX7/hhWK9Hn9Yxjf3ya6xDdrK
+MivZ3xWfn3lctctu3eTXO8C5323olEOGZ+Vb7913vidDavI56Pz7Svfduiz
WxdLf5Z/HV5/x56UmnJ+NTpOHJKvipyflX9/87971k2aIefz9JFsLeIWy/is
fPx7P1z+r/w5ZHvy8bmeb9cqf0OhcXI+2gdHXjKy0X+qSLvOxyfe0J/lj30H
7HvnlWS5Ho/+9mXj9sXkelj5+ctLFM359Hi5HrM7F0t4ZLqcn5WvP7ZcatUO
W+R45Osz/t9m3JS7cx85X+2zy4ZPO39XMWnX+fuHflp7ePcWadf+S/43x3tk
/vlPTZsu2/f+fWLXK4vL9bR8ef7dNwxaWiS7a49PbHzl2AJyflZ+f5E9bddP
f0GuZ8t3J2YbP1Gup5XvX71NzyIvrZbj9d27fPMrj8r5aF/vvCRlX0KctOv8
/xEXtV+duEbatd+T/8/1yZ/rlft+mSjba//P2H/keOHy/0N9L1H5XaLyucTA
JyH+lhioGuJvcjz9fdHj0feHHj/9PbEqrf1L54tdPD5b/axWvy/z3N1tpfMz
GD+D8TMYP4PxMxg/g/EzGD+D8TMYP4PxMxg/g/EzGD+D8TMYP4PxMzjqZ6fG
z7je+BdMPQDYbz0Ay8+oB0D/Vj0Ay8+oB0B/kfqZVQ/A8jHqAzAey8e0f1Ev
gP0j9TGrXoDlY5Z/ad+ingDjt/yL+MH2fusJWP5l1ROw/MvyLb9+pX2K/HTO
X/tVOJ9y95fPegSWX1n1CCy/ymqf0v5E/QLOX/uU9ierfkHGPiXbh6tXEOpP
ScqfktT6V5Ja/wpfr0B/H/R49P2SsU8lBa7on9b+lfMp+Gz1qVduezA2Kd+P
zqdgfArGp2B8CsanYHwKxqdgfArGp2B8CsanYHwKxqdgfArGp2B8CsanYHwK
xqdgfAqO+tSJ+ZS7n7z6Be56e/ULYL/1Cyyfon4B/Vv1Cyyf8lu/wPIpq36B
5VNWPQPLp/zWN7B8yqpvYPmUVe/A8iur/oH2K13/gPjC/RKpX1n1Dyy/oh4C
4/HrW1Z9BO1fuj6Ctb6l6yWE8zHGH6l/WfUTzPUtr54C4/HrY1Z9Be1nur6C
td6l6y1Y613UM+B8tO+Eq68Q6mPJyseSlY9lvr6C/v7o77M1Xvr7qEla+zfO
zz72+Gz1s1z/fb3C7x+Ln8H4GYyfwfgZjJ/B+BmMn8H4GYyfwfgZjJ/B+BmM
n8H4GYyfwfgZjJ/B+BmMn8H4GYyfwfgZjJ/BUT8L+hnXg3oLcKT1Fiw/81tv
wfIzv/UWLD+z6i1YfmbVX9B+pusvZPXzR+ox8Pla9RgsX7PqM2hf0/UZrOeR
uj5DuPUxd79G6mtevQY3Pxr1Gix/s+o3aH/T9Rus9TNdv8FaTwtX34HzDedv
tEfqb1a9B8vfrPoP2t90/QdrfU3Xc7DW28LVh+B6+X1eST0G9g9XDyLU10oH
qof42onXg9Dnr79f1niD/zU2kPxVGn/jxgOfrf72es2bJjyTa5XzNxh/g/E3
GH+D8TcYf4PxNxh/g/E3GH+D8TcYf4PxNxh/g/E3GH+D8TcYf4PxNxh/g/E3
GH+D8TcYf4PxN/jv4m+cL34GUx8C9lsfwvI36kPQv1UfwvI3v/UhLH+z6kNY
/ka9CM7P7/qa3/oRlr9Z9SMsX6OeBOfjd33Nqi+h/Yz6EhyPeAJH6mtWfYms
fn5p1Z/Q/kX9Cc7X8jHtX9SjcN8vz8fgSH3Mqk+R1c8zrfoVfn1L+xX1LLg+
mfMt2T5c/YrQ9bCsq1+h5zv9/bDGG/yvsYFvA2k8340PPlt9K1uxr3K+U1p8
C8a3YHwLxrdgfAvGt2B8C8a3YHwLxrdgfAvGt2B8C8a3YHwLxrdgfAvGt2B8
C8a3YHwLxrdgfAvGt2B8C8a3YHwLxrfgM9W33PXy6lnAkdazsHyLehYcz6pn
YfmW33oWlm9Rz4LxWfUsLP+y6lto/9L1LbJ6/cyqd2H5l1X/QvuXrn/h9/19
Xf+C+MLnE6l/WfUwLP+y6mNoHyPfnfH7fb9M18uwfEzXywi3PsZ4IvUxq56G
5WNWfQ3tZ9TXYPx+3z/T9TYsX9P1Nqz1MV1vw3q+ebLrLejvjx6fvj/1eOmv
x+Z5/2uf7/zt8ku++ovPVl+rOOHB1vuuFl+D8TUYX4PxNRhfg/E1GF+D8TUY
X4PxNRhfg/E1GF+D8TUYX4PxNRhfg/E1GF+D8TUYX4PxNRhfg/E1GF+D8TUY
X4PxNRhfg/E1199p6muMDx+Dr+h26fh+M2T8nf5Z99uUJ2W8kfra0Be7FVnX
V/rfXa9NjdhG0r/v98+arixVdrv0F6mvXTG7W5ftV8t4/PpZ9tZ/3nfnUhmP
3/WxCbWnbD52jhw/Uj9b+tgTz60tK/2d7Pf5P2l4ff/4Q3L+mX2fn+0H1ix6
86ZCMt5IfSyxWZ9xK0tJfyd7PWzerYNXvLxbzt/v+/0jrntgVOd8Ml5rPSy4
/iHHw7/gSP1rfp1+ScsSZTyn2/v9Y284t1bVPDI+az3sg/ov/dww3fXK3Pv9
0n/G62Hloxzls5L1/Ky/D3r+yfj9xfKBO15Laxe/v9vjs9XvYau+2v5Xptas
nCvO8elWXw2/h636ajqfO1pPJVpf7e9XXy1O1TeLU/XN4lR9szhV3yxO1TeL
U/XNZL6AJ4bUN4tT9c3iAneH1DeLU/XN4gL1Quqb/W/7kPpmcaq+2fHHD61v
Fqfqm8Wp+mZxqr5ZnKpvFqfqm8Wp+mbHHz+0vlmcqmcWp+pZxKl8zDj1/n+c
ep8sTj3vPP741KuAybcMcmIgEMKST0j7+BCOU++PJQbOCeE49bwzMfBaCMvz
PdpjQljWk2gPjd8F3PlRjwPW8UpvH66eh75eoSzb/919gPW+1V/Ue7HM61+5
9T4YH4DxARgfgPEBGB+A8QEYH4DxARgfgPEBGB+AWe+D8QE46gOR+UCu4m2f
mbI0n2vn+8n13byzdtk3Bxd0TP0OmPodsN/6HZv7tvysSQ45fsU9bevsvibd
fODV76B/q35H0oddmuSZcJ7jp18eXze2nZwP9Ttgy29WVW228q0x8n2rmtD1
gzIr5ftm1e+4oG2Hjs2ry3io18HxtS9dOu+eVR9PkPOnPgfbWz61dGjTVktb
y3hnVjm0tfZrMl6rPkf+Lx862i+XjFf72OTVG+JWdJTxUX+D8Wlf+yDPzp75
z5XtJ0xZ9eq45cJ+628sTFleZlMDOb8/ZtfItXygnJ9Vf+PcR7bOGb1d7jft
hztaX1quVVMZn/bF/S9UGjU2VY63oXrxWWVn6ngn1+O4/IDGE/bVeSZd/0kj
BxTYKey3vkb9EfFDdgXkeozPveb8Yr1kfFZ9jQHzLkt+/We5Htpnn3vn62pv
15Xxab99cdXSN379VY739JOfL+g8RbanfgbXQ/tw3hevz/Hc47J9tnbVRjT9
Rdiqp3H9vsembvha+4Nsr/0iXH2NUJ9KUv6UFHgjxI+SlB8lKR+S4+v5NFx9
Ddr1eOlv8Zy09o+cfxVfEuSo7wR95909rR++udsC5zswvgPjOzC+A+M7ML4D
4zswvgPjOzC+A+M7ML4D4zswvgPjOzC+A+M7cNR3Muc7XC98x91PXn0Nd729
+hqw3/oalu9QX4P+rfoa4XyH/f3W17B8x6qvoX3Hqqehfcdv/QzLd6z6Gdp3
rHoZ2n+s+hjaf3R9DO1DkfqPVR9D+w/1MLhfLB+y6l9oP9L1L7QvWfUvLF+K
1I+s+hfaj6h3wfWyfMmqb6H9Sde30D5l1bewfCpcvQvOR/tU5vwpWflSslpf
Sla+lKx8KXz9Cz0/h6t/QXvG/pQcyLM/rX2m86cKOdv8xVF/CvrTU+s6/Nb4
voXOn2D8CcafYPwJxp9g/AnGn2D8CcafYPwJxp9g/AnGn2D8CcafYPwJxp9g
/AnGn2D8Cf67+hPnjz/B1L+AI61/YfmT3/oX4fyJ8fqtf2H5k75eVj0M7VNW
/QvtU7r+RaQ+Rb0Lxm/Vu9B+ZdW30H6l61tYfqXrW2S5X3n1LNx8Z9Sz0L5l
1a/QvqXrV1i+petXWL5FvQrO52T7llWvQvuWVZ9C+5auT2H5lq7PYPkW9Si4
Xn59S/sV9R7oL3O+VVqtR5VWflVa+VXm61Vk/DxO2vV42T/7r2n8ufOr1TuC
HPWroF/dkXPcwZJXLXJ+BeNXMH4F41cwfgXjVzB+BeNXMH4F41cwfgXjVzB+
BeNXMH4F41cwfgXjVzB+BeNXMH4F41fw2epXnB9+BeNPMPUpYL/1KSy/oj4F
/Vv1KcL5Ffv7rU9h+ZVVn0L7FPUoGI/lU37rT1g+ZdWf0P5EvQnGa/mTVV9C
+xP1Jeg/q/3Jqi/h9/mcVT9C+xH1Izg/04+UD1E/gv2z2o+s+hF+n9dZ9SGs
53fW8zrqQ3A9Tsx/ZP/M+U8Z5TtllO+ceP0IPd/q+ckaL/39niutfZbzoS8K
BDnqQ0Ef6lN7cqGCQ8WHYHwIxodgfAjGh2B8CMaHYHwIxodgfAjGh2B8CMaH
YHwIxodgfAjGh2B8CMaHYHwIxodgfAjGh2B8CMaH4DPFhxgvPuSul1c/Ao60
foTlQ9SP4HhW/YhwPsT+futHmOtNXv0I+rfqR2g/supFaD/S9SIi9SOrPoT2
I6sehPYjXQ/C7/tLuh5EpH5k1X/QfmTVe9C+RD4994Pf95t0vQfLl3S9h6z2
Jau+g/Ylq56D9ifqOXC9/PqTrudg+ZSu52D5lK6X4Pf5HfUT8Kesru+g5+tw
9R1o1+Olv9sT09rFp15pGOSoTwV9qnTb/o/1+FR8CsanYHwKxqdgfArGp2B8
CsanYHwKxqdgfArGp2B8CsanYHwKxqdgfArGp2B8CsanYHwKxqdgfArGp2B8
CsanYHzK9Xea+BTjwadgfAmmvoO7Xj7rO1g+RX0Hd72M+g7hfIr9qe8AR+pT
Vn0H7U/Uc+D4lj/5rd9g+ZNVv8Hv+97UZ+B8/PqS3/oMli9Z9Rn8ridRf4Hz
8+tHVv0F7UfkP7vjZbEfWfUXTvb731Z9Be0/1FfgevhdT9L55ZlbTzp5+e96
fg2X/057xutJ5QPzH0prF//Z9HCQo/4T9J9rGxTrnHOh+A+M/8D4D4z/wPgP
jP/A+A+M/8D4D4z/wPgPjP/A+A+M/8D4D4z/wPgPjP/A+A+M/8D4D4z/wPgP
jP/A+A+M/8D4j+vP8x8Y/4HxH/hk+Q/94z9w05qff1Q1RY4/tcLIi8pkTxfv
lg1Y0OAB4Uj9Z/Gbi5vlXSLHO9rii+b3NpD+Mus/7N8j7029FxaV7SP1n1wL
EnY++JGMb3zi6tfa1pL+LB8aUTy1/tH86eKP4UOj+jw5d8pWOV6kPrQ759ab
OtSQ/S0fei35hiuGxUq75UcfDC/93Jo1Ml6/ftSr0w+Hnjog+0fqR0X2p45+
pKrsb/lRmbI7Xmt5jrRndX7csz3K/Vx4l5yf3/y4YLyU/SP1o3c77P1yV5V0
96PhRx0uv77l3BzSntW+5Dc/7kD78v2nH5brYfmR9ouebSYXGJxNts/Yj6Ic
5SifDNb+ob+Per7L+O+DioHPb05rl78PRjQMcvTvg+DfB7BVHyv4ecQ7Pt3q
Y/H3AazrY+n84mg9jGh9rLOvPla8qlcVr+pVxQeah9Srilf1quJVvap4Va8q
XtWrkvnAcUi9qnhVrype1auKV/Wq4lW9qnhVrype1as6/vih9ariVb2qeFWv
Kl7Vq4pX9ariVb2qeFWv6vjjh9arilf1quJVPYV4lR8Yr95fj1fvc8Wr97mO
Pz71EmDy/4KcpDheva+epDhe3jf22puGcLy8f+O1h3K8PE/y2kM5XtZbvHa3
HtOy4exvD0n8oR4ErOOR3j5cPQl9vUJZto/6wd/LD/zWy9L5tlE/iPrB6e8H
yWp+T1bze7Kav5PVfJ0cqBkyX6e7/zOcr+X7krn5+vj89dDx6/lato/O19H5
Oiv/ntP5fdH5Ojpfn/r5urSan0ur+bm0mp9LK58On8+a8Xwt93/m5uvj819D
j6fna9k+Ol9H5+tTuf6m85Wi83V0vs76+bpMoG/I/FxGzc9llD9nPv8u4/la
7u/MzdfH5+uFHk/P17J9dL6Ozten8/OSIyp/IjpfR+fr/998Tf4M8zOMP0ea
35PxfK3zf6z5ulzY/YP/ZH99/Oh8HZ2vT+f52vJr/T54dL7+e8/XwX/l1fpG
1uUjZDxfy/2Yufn6+PyF0ONpv5bto/N1dL4+k+drv36t3+eLztdn43x98jjj
+VruL2u+Dvc+aejx9Hwt20fn6+h8/Xear6N+fXbP13p+tObP4D9p/38Ig1Eo

    "], {{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 873, 4, 5, 6, 1876, 7, 8, 
         3003, 9, 10, 11, 4184, 12, 13, 78},
         VertexColors->Automatic], 
        LineBox[{14, 15, 16, 176, 17, 18, 19, 278, 20, 21, 378, 22, 23, 24, 
         481, 25, 26, 581, 27, 28, 29, 686, 30, 31, 786, 32, 33, 34, 1855, 35,
          36, 37, 2899, 38, 39, 4071, 40, 41, 42, 5212, 43, 44, 6441, 45, 46, 
         47, 7635, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68,
          63, 59, 75, 69, 64, 76, 70, 77, 50},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{82, 132, 83, 84, 874, 85, 86, 87, 1877, 88, 89, 3004, 90, 91,
          92, 4185, 93, 94, 5332, 95, 96, 133, 97, 142, 137, 153, 147, 162, 
         155, 172, 164, 174},
         VertexColors->Automatic], LineBox[CompressedData["
1:eJwVzrkuBGAUhuEPhUKhIBGFQusqVFqJaDVjX2bGvu8SxBJLbBFrxB5xM65A
5TI8Uzx5/9Oc87cWyl2lqiSdbPPGPZeccECBF24554g9duiljyZL+nWAJe9B
HWKYX/OIjtJRnYxpkRLf5rKO01CTTOgkU7TXJtM6wyzddcmczvNXnyzoYuUe
PY3Jsq7Q1pys6hrr/LQkG7rJK3dccMw+u7zzwBWnHPLBI9ec8ckTN3zxXPk/
W/wD5JIq2w==
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{180, 230, 181, 182, 875, 183, 184, 185, 1878, 186, 187, 3005,
          188, 189, 190, 4186, 191, 192, 5333, 193, 194, 195, 876, 196, 197, 
         231, 198, 256, 247},
         VertexColors->Automatic], LineBox[CompressedData["
1:eJwVzrkyg2EYhuE3CYIgEr9CoVA7CpXeDKXCAcgJOKichRAk9n1nhtjXQWxX
imvu5/2K5B+ZKU3MpiJiii4j4dEuaJZf+4a83c63/cYVve4MX/YL98yT85bi
w37ilmsqzHlf0EWqnLuXdJnxdMSK1qhTdq/qGkkmYl032GQsG7Gl2+wwmYvY
1b3Wf+Uj9vWAQ6aTiCM9ZnQo4kRPOWv91rBv0At6fEuaT/uZOxr0eWujab/y
QL+7gx/7naLdyZ89oN0Mcun+B+SlOIg=
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#3"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{283, 333, 284, 285, 877, 286, 287, 288, 1879, 289, 290, 3006,
          291, 292, 293, 4187, 294, 295, 5334, 296, 297, 298, 878, 299, 300, 
         301, 1034, 302, 334, 303, 338, 335, 359, 351, 374, 365},
         VertexColors->Automatic], LineBox[CompressedData["
1:eJwV0DdOg1EQhdGLKSgo3EBBQUFPgckZTA4uyDmaIJIwUcCy2AwroGIVnL84
+ubpFSNNV72x8diUpManYZ837rlgmxduOeeQHhpcccwum6xRoZdf+uhnqZQM
6CBDfHsP6wjtzcmojjHOTEsyoZNMsdOaTGuVv7J/nWWO07ZkXhfo7kgWi10s
89OZrOgqT1xzwh5brPPMDWccFLt45Y46R7zzwCUfFMf6osY/TkYdEg==
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#4"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{384, 434, 385, 386, 879, 387, 388, 389, 1880, 390, 391, 3007,
          392, 393, 394, 4188, 395, 396, 5335, 397, 398, 399, 880, 400, 401, 
         402, 1035, 403, 404, 1180, 405, 406, 435, 407, 451, 444, 475, 465, 
         479},
         VertexColors->Automatic], 
        LineBox[{477, 467, 439, 473, 463, 456, 449, 436, 471, 461, 454, 447, 
         442, 408, 469, 459, 452, 445, 440, 437, 409, 585, 410, 411, 412, 690,
          413, 414, 790, 415, 416, 417, 1859, 418, 419, 420, 2903, 421, 422, 
         4075, 423, 424, 425, 5216, 426, 427, 6445, 428, 429, 430, 7639, 431, 
         432, 470, 460, 453, 446, 441, 438, 472, 462, 455, 448, 443, 474, 464,
          457, 450, 476, 466, 458, 478, 468, 480, 433},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#5"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{488, 538, 489, 490, 881, 491, 492, 493, 1881, 494, 495, 3008,
          496, 497, 498, 4189, 499, 500, 5336, 501, 502, 503, 882, 504, 505, 
         506, 1036, 507, 508, 1181, 509, 510, 511, 1330, 512, 539, 513, 543, 
         540, 550, 546, 573, 564, 586},
         VertexColors->Automatic], 
        LineBox[{579, 557, 577, 568, 552, 575, 566, 559, 514, 570, 561, 554, 
         548, 544, 541, 515, 516, 691, 517, 518, 791, 519, 520, 521, 1860, 
         522, 523, 524, 2904, 525, 526, 4076, 527, 528, 529, 5217, 530, 531, 
         6446, 532, 533, 534, 7640, 535, 536, 571, 562, 555, 549, 545, 542, 
         572, 563, 556, 551, 547, 574, 565, 558, 553, 576, 567, 560, 578, 569,
          580, 537},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#6"]& ], 
      TagBox[
       {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{590, 640, 591, 592, 883, 593, 594, 595, 1882, 596, 597, 3009,
          598, 599, 600, 4190, 601, 602, 5337, 603, 604, 605, 884, 606, 607, 
         608, 1037, 609, 610, 1182, 611, 612, 613, 1331, 614, 615, 1474, 616, 
         617, 641, 618, 650, 645, 669, 661, 682, 673},
         VertexColors->Automatic], 
        LineBox[{684, 655, 680, 671, 663, 642, 677, 667, 659, 653, 648, 619, 
         675, 665, 657, 651, 646, 643, 620, 792, 621, 622, 623, 1861, 624, 
         625, 626, 2905, 627, 628, 4077, 629, 630, 631, 5218, 632, 633, 6447, 
         634, 635, 636, 7641, 637, 638, 676, 666, 658, 652, 647, 644, 678, 
         668, 660, 654, 649, 679, 670, 662, 656, 681, 672, 664, 683, 674, 685,
          639},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#7"]& ], 
      TagBox[
       {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{695, 745, 696, 697, 885, 698, 699, 700, 1883, 701, 702, 3010,
          703, 704, 705, 4191, 706, 707, 5338, 708, 709, 710, 886, 711, 712, 
         713, 1038, 714, 715, 1183, 716, 717, 718, 1332, 719, 720, 1475, 721, 
         722, 723, 1623, 724, 746, 725, 750, 747, 757, 753, 764, 759, 780, 
         772},
         VertexColors->Automatic], 
        LineBox[{784, 766, 782, 774, 726, 776, 768, 761, 755, 751, 748, 727, 
         728, 1862, 729, 730, 731, 2906, 732, 733, 4078, 734, 735, 736, 5219, 
         737, 738, 6448, 739, 740, 741, 7642, 742, 743, 777, 769, 762, 756, 
         752, 749, 778, 770, 763, 758, 754, 779, 771, 765, 760, 781, 773, 767,
          783, 775, 785, 744},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#8"]& ], 
      TagBox[
       {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{796, 866, 860, 855, 851, 848, 846, 797, 798, 887},
         VertexColors->Automatic], 
        LineBox[{799, 800, 801, 1884, 802, 803, 3011, 804, 805, 806, 4192, 
         807, 808, 5339, 809, 810, 811, 888},
         VertexColors->Automatic], 
        LineBox[{812, 813, 814, 1039, 815, 816, 1184, 817, 818, 819, 1333, 
         820, 821, 1476, 822, 823, 824, 1624, 825, 826, 1766, 827, 828, 829, 
         1863, 830, 831, 832, 2907, 833, 834, 4079, 835, 836, 837, 5220, 838, 
         839, 6449, 840, 841, 842, 7643, 843, 844, 867, 861, 856, 852, 849, 
         847, 868, 862, 857, 853, 850, 869, 863, 858, 854, 870, 864, 859, 871,
          865, 872, 845},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#9"]& ], 
      TagBox[
       {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.],
         LineBox[{895, 1012, 994, 977, 963, 953, 945, 896, 1013, 995, 978, 
         964, 954, 946, 1017, 1000, 983, 969, 959, 897, 1014, 996, 979, 965, 
         955, 1021, 1004, 987, 973, 1025, 1008, 992, 947, 1018, 1001, 1030, 
         984, 1028},
         VertexColors->Automatic], 
        LineBox[{1032, 970, 991, 960, 975, 898, 948, 899, 900, 1885, 901, 902,
          3012, 903, 904, 905, 4193, 906, 907, 5340, 908, 909, 910, 6570, 911,
          912, 949, 913, 997, 980},
         VertexColors->Automatic], LineBox[CompressedData["
1:eJwVz7suAwAUgOGDViMGi8Vg6CsYPIPZIJGYJFbexaWo+6XutwlDSUjQRNNY
SAgSCwlxH0g0+Dp8+c90Tk66u6+9tyoiOvioiUglIo419FVvyfPLM9eU2OaH
Ry455YB+vrjnnBP22GGAGXsHdYgMrcmIYR3hyDyqWcborI0Y1wkezJM6xTRt
Kbt0ljm66iPmNcdbQ8SCLrJET2PEsq7Q0hSxqmusV/5pjtjQTb4rd7igwD67
lHniiiKH/PHCDWdU++td70iaP7VOt/Qf+Uc+Ug==
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#10"]& ], 
      TagBox[
       {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{1045, 1159, 1142, 1126, 1113, 1103, 1095, 1046, 1160, 1143, 
         1127, 1114, 1104, 1096, 1164, 1147, 1131, 1118, 1109, 1047, 1161, 
         1144, 1128, 1115, 1105, 1167, 1151, 1135, 1122, 1171, 1155, 1140, 
         1097, 1165, 1148, 1176, 1132, 1173},
         VertexColors->Automatic], 
        LineBox[{1177, 1119, 1138, 1110, 1123, 1048, 1098, 1049, 1050, 1886, 
         1051, 1052, 3013, 1053, 1054, 1055, 4194, 1056, 1057, 5341, 1058, 
         1059, 1060, 6571, 1061, 1062, 1063, 1887, 1064, 1099, 1065, 1106, 
         1100, 1149, 1133, 1174, 1157},
         VertexColors->Automatic], LineBox[CompressedData["
1:eJwVzDsrBQAYxvFHcQwGi8VwBqv7neN+L4UBRaIQiuEgGRiEZKCETim+j29h
t/oGfmf49X+X92nZP10t1yRZ4rM22eWdey7Y4JVbzjiglSeuOGabNZZpo52h
uqRDO/l2d2k3PWwVkl7t49fdrwMMsljvV4cpsdOQjOgof43JmI4zwVFTMqlT
1a3mZFpnmOWnmMzpPM9cc1LdY50VXrihzB6bvHHHOYdUeOCSDx75YoF/7REg
Hw==
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#11"]& ], 
      TagBox[
       {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{1192, 1308, 1290, 1274, 1260, 1250, 1242, 1193, 1309, 1291, 
         1275, 1261, 1251, 1243, 1313, 1295, 1280, 1266, 1256, 1194, 1310, 
         1292, 1276, 1262, 1252, 1317, 1299, 1284, 1270, 1321, 1303, 1288, 
         1244, 1314, 1296, 1326, 1281, 1323},
         VertexColors->Automatic], 
        LineBox[{1328, 1267, 1287, 1257, 1272, 1195, 1245, 1196, 1197, 1888, 
         1198, 1199, 3014, 1200, 1201, 1202, 4195, 1203, 1204, 5342, 1205, 
         1206, 1207, 6572, 1208, 1209, 1210, 1889, 1211, 1212, 2039, 1213, 
         1214, 1246, 1215, 1277, 1263, 1320, 1302, 1327},
         VertexColors->Automatic], 
        LineBox[{1324, 1306, 1253, 1318, 1300, 1285, 1271, 1247, 1315, 1297, 
         1282, 1268, 1258, 1216, 1311, 1293, 1278, 1264, 1254, 1248, 1217, 
         1479, 1218, 1219, 1220, 1627, 1221, 1222, 1769, 1223, 1224, 1225, 
         1866, 1226, 1227, 1228, 2910, 1229, 1230, 4082, 1231, 1232, 1233, 
         5223, 1234, 1235, 6452, 1236, 1237, 1238, 7646, 1239, 1240, 1312, 
         1294, 1279, 1265, 1255, 1249, 1316, 1298, 1283, 1269, 1259, 1319, 
         1301, 1286, 1273, 1322, 1304, 1289, 1325, 1307, 1329, 1241},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#12"]& ], 
      TagBox[
       {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{1341, 1453, 1437, 1422, 1409, 1399, 1391, 1342, 1454, 1438, 
         1423, 1410, 1400, 1392, 1458, 1442, 1427, 1414, 1405, 1343, 1455, 
         1439, 1424, 1411, 1401, 1461, 1445, 1430, 1418, 1464, 1448, 1434, 
         1393, 1459, 1443, 1470, 1428, 1467},
         VertexColors->Automatic], 
        LineBox[{1472, 1415, 1433, 1406, 1419, 1344, 1394, 1345, 1346, 1890, 
         1347, 1348, 3015, 1349, 1350, 1351, 4196, 1352, 1353, 5343, 1354, 
         1355, 1356, 6573, 1357, 1358, 1359, 1891, 1360, 1361, 2040, 1362, 
         1363, 1364, 2184, 1365, 1395, 1366, 1402, 1396, 1416, 1407, 1462, 
         1446, 1480},
         VertexColors->Automatic], 
        LineBox[{1471, 1431, 1468, 1451, 1420, 1465, 1449, 1435, 1367, 1456, 
         1440, 1425, 1412, 1403, 1397, 1368, 1369, 1628, 1370, 1371, 1770, 
         1372, 1373, 1374, 1867, 1375, 1376, 1377, 2911, 1378, 1379, 4083, 
         1380, 1381, 1382, 5224, 1383, 1384, 6453, 1385, 1386, 1387, 7647, 
         1388, 1389, 1457, 1441, 1426, 1413, 1404, 1398, 1460, 1444, 1429, 
         1417, 1408, 1463, 1447, 1432, 1421, 1466, 1450, 1436, 1469, 1452, 
         1473, 1390},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#13"]& ], 
      TagBox[
       {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{1487, 1602, 1585, 1569, 1555, 1545, 1537, 1488, 1603, 1586, 
         1570, 1556, 1546, 1538, 1607, 1590, 1574, 1561, 1551, 1489, 1604, 
         1587, 1571, 1557, 1547, 1611, 1594, 1578, 1565, 1613, 1597, 1582, 
         1539, 1608, 1591, 1619, 1575, 1616},
         VertexColors->Automatic], 
        LineBox[{1620, 1562, 1581, 1552, 1567, 1490, 1540, 1491, 1492, 1892, 
         1493, 1494, 3016, 1495, 1496, 1497, 4197, 1498, 1499, 5344, 1500, 
         1501, 1502, 6574, 1503, 1504, 1505, 1893, 1506, 1507, 2041, 1508, 
         1509, 1510, 2185, 1511, 1512, 2325, 1513, 1514, 1541, 1515, 1558, 
         1548, 1595, 1579, 1617, 1600},
         VertexColors->Automatic], 
        LineBox[{1621, 1566, 1614, 1598, 1583, 1542, 1609, 1592, 1576, 1563, 
         1553, 1516, 1605, 1588, 1572, 1559, 1549, 1543, 1517, 1771, 1518, 
         1519, 1520, 1868, 1521, 1522, 1523, 2912, 1524, 1525, 4084, 1526, 
         1527, 1528, 5225, 1529, 1530, 6454, 1531, 1532, 1533, 7648, 1534, 
         1535, 1606, 1589, 1573, 1560, 1550, 1544, 1610, 1593, 1577, 1564, 
         1554, 1612, 1596, 1580, 1568, 1615, 1599, 1584, 1618, 1601, 1622, 
         1536},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#14"]& ], 
      TagBox[
       {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{1635, 1746, 1731, 1716, 1703, 1693, 1685, 1636, 1747, 1732, 
         1717, 1704, 1694, 1686, 1751, 1736, 1721, 1708, 1699, 1637, 1748, 
         1733, 1718, 1705, 1695, 1754, 1739, 1724, 1712, 1756, 1741, 1728, 
         1687, 1752, 1737, 1762, 1722, 1759},
         VertexColors->Automatic], 
        LineBox[{1764, 1709, 1727, 1700, 1713, 1638, 1688, 1639, 1640, 1894, 
         1641, 1642, 3017, 1643, 1644, 1645, 4198, 1646, 1647, 5345, 1648, 
         1649, 1650, 6575, 1651, 1652, 1653, 1895, 1654, 1655, 2042, 1656, 
         1657, 1658, 2186, 1659, 1660, 2326, 1661, 1662, 1663, 2470, 1664, 
         1689, 1665, 1696, 1690, 1710, 1701, 1725, 1714, 1757, 1742},
         VertexColors->Automatic], 
        LineBox[{1763, 1729, 1760, 1744, 1666, 1749, 1734, 1719, 1706, 1697, 
         1691, 1667, 1668, 1869, 1669, 1670, 1671, 2913, 1672, 1673, 4085, 
         1674, 1675, 1676, 5226, 1677, 1678, 6455, 1679, 1680, 1681, 7649, 
         1682, 1683, 1750, 1735, 1720, 1707, 1698, 1692, 1753, 1738, 1723, 
         1711, 1702, 1755, 1740, 1726, 1715, 1758, 1743, 1730, 1761, 1745, 
         1765, 1684},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#15"]& ], 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1778, 1848, 1842, 1837, 1833, 1830, 1828, 1779, 1780, 1870},
         VertexColors->Automatic], LineBox[{1781, 1782, 1783, 1896},
         VertexColors->Automatic], 
        LineBox[{1784, 1785, 3018, 1786, 1787, 1788, 4199, 1789, 1790, 5346, 
         1791, 1792, 1793, 6576, 1794, 1795, 1796, 1897},
         VertexColors->Automatic], 
        LineBox[{1797, 1798, 2043, 1799, 1800, 1801, 2187, 1802, 1803, 2327, 
         1804, 1805, 1806, 2471, 1807, 1808, 2609, 1809, 1810, 1811, 1871},
         VertexColors->Automatic], 
        LineBox[{1812, 1813, 1814, 2914, 1815, 1816, 4086, 1817, 1818, 1819, 
         5227, 1820, 1821, 6456, 1822, 1823, 1824, 7650, 1825, 1826, 1849, 
         1843, 1838, 1834, 1831, 1829, 1850, 1844, 1839, 1835, 1832, 1851, 
         1845, 1840, 1836, 1852, 1846, 1841, 1853, 1847, 1854, 1827},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#16"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1906, 2018, 2000, 1986, 1974, 1964, 1956, 1907, 1908, 1909, 
         1910, 2019, 2001, 1987, 1975, 1965, 1957, 2023, 2005, 1991, 1979, 
         1970, 2025, 2008, 1994, 1983, 1911, 2020, 2002, 1988, 2031, 2014, 
         1976, 2028, 2011, 2035, 1997},
         VertexColors->Automatic], 
        LineBox[{2016, 2037, 1966, 1982, 1958, 1971, 1912, 1959, 1913, 3019, 
         1914, 1915, 1916, 4200, 1917, 1918, 5347, 1919, 1920, 1921, 6577, 
         1922, 1923, 1924, 7772, 1925, 1960, 1926, 1967, 1961, 2006, 1992, 
         2032, 2015},
         VertexColors->Automatic], LineBox[CompressedData["
1:eJwVzrsqBQAAxvHP5DZYDAwGr2DzDiaPwCrnMdzv99txW8RCMThRDJSIgRIx
SCRyBonVz/Dr37d9zR2F9u6KJG18VyYHfPLAJbu8c8c5R/TwwjUn7LPNJr30
MViV9OsADdW2DjHMhj2io7TUJGM6zgTH9qROMU1nbTKjs/zWJXM6zwJd9cmi
LtHamBR1mRWem5JVXeOVG04pscMWb9xyxiF7fHDPxf8XyjxyxRdP/LDOH2DD
OIA=
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#17"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{2049, 2162, 2144, 2130, 2117, 2107, 2099, 2050, 2051, 2052, 
         2053, 2163, 2145, 2131, 2118, 2108, 2100, 2167, 2149, 2136, 2123, 
         2113, 2171, 2153, 2140, 2128, 2054, 2164, 2146, 2132, 2176, 2158, 
         2119, 2173, 2155, 2180, 2142},
         VertexColors->Automatic], 
        LineBox[{2159, 2182, 2109, 2126, 2101, 2114, 2055, 2102, 2056, 3020, 
         2057, 2058, 2059, 4201, 2060, 2061, 5348, 2062, 2063, 2064, 6578, 
         2065, 2066, 2067, 7773, 2068, 2069, 3021, 2070, 2071, 2103, 2072, 
         2133, 2120, 2174, 2156, 2181},
         VertexColors->Automatic], 
        LineBox[{2178, 2160, 2110, 2170, 2152, 2139, 2127, 2104, 2168, 2150, 
         2137, 2124, 2115, 2073, 2165, 2147, 2134, 2121, 2111, 2105, 2074, 
         2329, 2075, 2076, 2077, 2473, 2078, 2079, 2611, 2080, 2081, 2082, 
         2754, 2083, 2084, 2085, 2916, 2086, 2087, 4088, 2088, 2089, 2090, 
         5229, 2091, 2092, 6458, 2093, 2094, 2095, 7652, 2096, 2097, 2166, 
         2148, 2135, 2122, 2112, 2106, 2169, 2151, 2138, 2125, 2116, 2172, 
         2154, 2141, 2129, 2175, 2157, 2143, 2179, 2161, 2183, 2098},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#18"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{2194, 2304, 2287, 2274, 2262, 2252, 2244, 2195, 2196, 2197, 
         2198, 2305, 2288, 2275, 2263, 2253, 2245, 2309, 2292, 2279, 2267, 
         2258, 2311, 2294, 2281, 2271, 2199, 2306, 2289, 2276, 2317, 2300, 
         2264, 2314, 2297, 2322, 2284},
         VertexColors->Automatic], 
        LineBox[{2302, 2323, 2254, 2270, 2246, 2259, 2200, 2247, 2201, 3022, 
         2202, 2203, 2204, 4202, 2205, 2206, 5349, 2207, 2208, 2209, 6579, 
         2210, 2211, 2212, 7774, 2213, 2214, 3023, 2215, 2216, 2217, 3180, 
         2218, 2248, 2219, 2255, 2249, 2268, 2260, 2312, 2295, 2331},
         VertexColors->Automatic], 
        LineBox[{2321, 2282, 2318, 2301, 2272, 2315, 2298, 2285, 2220, 2307, 
         2290, 2277, 2265, 2256, 2250, 2221, 2222, 2474, 2223, 2224, 2612, 
         2225, 2226, 2227, 2755, 2228, 2229, 2230, 2917, 2231, 2232, 4089, 
         2233, 2234, 2235, 5230, 2236, 2237, 6459, 2238, 2239, 2240, 7653, 
         2241, 2242, 2308, 2291, 2278, 2266, 2257, 2251, 2310, 2293, 2280, 
         2269, 2261, 2313, 2296, 2283, 2273, 2316, 2299, 2286, 2320, 2303, 
         2324, 2243},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#19"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{2336, 2449, 2431, 2417, 2404, 2394, 2386, 2337, 2338, 2339, 
         2340, 2450, 2432, 2418, 2405, 2395, 2387, 2454, 2436, 2422, 2410, 
         2400, 2457, 2440, 2426, 2415, 2341, 2451, 2433, 2419, 2462, 2445, 
         2406, 2459, 2442, 2466, 2428},
         VertexColors->Automatic], 
        LineBox[{2447, 2468, 2396, 2413, 2388, 2401, 2342, 2389, 2343, 3024, 
         2344, 2345, 2346, 4203, 2347, 2348, 5350, 2349, 2350, 2351, 6580, 
         2352, 2353, 2354, 7775, 2355, 2356, 3025, 2357, 2358, 2359, 3181, 
         2360, 2361, 3326, 2362, 2363, 2390, 2364, 2407, 2397, 2439, 2425, 
         2463, 2446},
         VertexColors->Automatic], 
        LineBox[{2467, 2414, 2460, 2443, 2429, 2391, 2455, 2437, 2423, 2411, 
         2402, 2365, 2452, 2434, 2420, 2408, 2398, 2392, 2366, 2613, 2367, 
         2368, 2369, 2756, 2370, 2371, 2372, 2918, 2373, 2374, 4090, 2375, 
         2376, 2377, 5231, 2378, 2379, 6460, 2380, 2381, 2382, 7654, 2383, 
         2384, 2453, 2435, 2421, 2409, 2399, 2393, 2456, 2438, 2424, 2412, 
         2403, 2458, 2441, 2427, 2416, 2461, 2444, 2430, 2465, 2448, 2469, 
         2385},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#20"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{2480, 2589, 2573, 2560, 2548, 2538, 2530, 2481, 2482, 2483, 
         2484, 2590, 2574, 2561, 2549, 2539, 2531, 2594, 2578, 2565, 2553, 
         2544, 2596, 2580, 2567, 2557, 2485, 2591, 2575, 2562, 2601, 2585, 
         2550, 2598, 2582, 2605, 2570},
         VertexColors->Automatic], 
        LineBox[{2586, 2607, 2540, 2556, 2532, 2545, 2486, 2533, 2487, 3026, 
         2488, 2489, 2490, 4204, 2491, 2492, 5351, 2493, 2494, 2495, 6581, 
         2496, 2497, 2498, 7776, 2499, 2500, 3027, 2501, 2502, 2503, 3182, 
         2504, 2505, 3327, 2506, 2507, 2508, 3477, 2509, 2534, 2510, 2541, 
         2535, 2554, 2546, 2568, 2558, 2599, 2583},
         VertexColors->Automatic], 
        LineBox[{2606, 2571, 2603, 2587, 2511, 2592, 2576, 2563, 2551, 2542, 
         2536, 2512, 2513, 2757, 2514, 2515, 2516, 2919, 2517, 2518, 4091, 
         2519, 2520, 2521, 5232, 2522, 2523, 6461, 2524, 2525, 2526, 7655, 
         2527, 2528, 2593, 2577, 2564, 2552, 2543, 2537, 2595, 2579, 2566, 
         2555, 2547, 2597, 2581, 2569, 2559, 2600, 2584, 2572, 2604, 2588, 
         2608, 2529},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#21"]& ], 
      TagBox[
       {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{2619, 2731, 2713, 2699, 2687, 2677, 2669, 2620, 2621, 2622, 
         2623, 2732, 2714, 2700, 2688, 2678, 2670, 2736, 2718, 2704, 2692, 
         2683, 2739, 2721, 2707, 2696, 2624, 2733, 2715, 2701, 2745, 2727, 
         2689, 2742, 2724, 2750, 2710},
         VertexColors->Automatic], 
        LineBox[{2729, 2751, 2679, 2695, 2671, 2684, 2625, 2672, 2626, 3028, 
         2627, 2628, 2629, 4205, 2630, 2631, 5352, 2632, 2633, 2634, 6582, 
         2635, 2636, 2637, 7777, 2638, 2639, 3029, 2640, 2641, 2642, 3183, 
         2643, 2644, 3328, 2645, 2646, 2647, 3478, 2648, 2649, 3622, 2650, 
         2651, 2673, 2652, 2680, 2674, 2737, 2719, 2749},
         VertexColors->Automatic], 
        LineBox[{2705, 2746, 2728, 2693, 2743, 2725, 2711, 2685, 2740, 2722, 
         2708, 2697, 2653, 2734, 2716, 2702, 2690, 2681, 2675, 2654, 2655, 
         2920, 2656, 2657, 4092, 2658, 2659, 2660, 5233, 2661, 2662, 6462, 
         2663, 2664, 2665, 7656, 2666, 2667, 2735, 2717, 2703, 2691, 2682, 
         2676, 2738, 2720, 2706, 2694, 2686, 2741, 2723, 2709, 2698, 2744, 
         2726, 2712, 2748, 2730, 2752, 2668},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#22"]& ], 
      TagBox[
       {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{2763, 2877, 2858, 2843, 2831, 2821, 2813, 2764, 2765, 2766, 
         2767, 2878, 2859, 2844, 2832, 2822, 2814, 2882, 2864, 2849, 2836, 
         2827, 2886, 2868, 2853, 2841, 2768, 2879, 2860, 2845, 2891, 2873, 
         2833, 2888, 2870, 2895, 2855},
         VertexColors->Automatic], 
        LineBox[{2875, 2897, 2823, 2839, 2815, 2828, 2769, 2816, 2770, 3030, 
         2771, 2772, 2773, 4206, 2774, 2775, 5353, 2776, 2777, 2778, 6583, 
         2779, 2780, 2781, 7778, 2782, 2783, 3031, 2784, 2785, 2786, 3184, 
         2787, 2788, 3329, 2789, 2790, 2791, 3479, 2792, 2793, 3623, 2794, 
         2795, 2796, 3772, 2797, 2798, 2817, 2799, 2861, 2846, 2892, 2874, 
         2896},
         VertexColors->Automatic], 
        LineBox[{2889, 2871, 2856, 2824, 2885, 2867, 2852, 2840, 2818, 2883, 
         2865, 2850, 2837, 2829, 2800, 2880, 2862, 2847, 2834, 2825, 2819, 
         2801, 4093, 2802, 2803, 2804, 5234, 2805, 2806, 6463, 2807, 2808, 
         2809, 7657, 2810, 2811, 2881, 2863, 2848, 2835, 2826, 2820, 2884, 
         2866, 2851, 2838, 2830, 2887, 2869, 2854, 2842, 2890, 2872, 2857, 
         2894, 2876, 2898, 2812},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#23"]& ], 
      TagBox[
       {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{2926, 2996, 2990, 2985, 2981, 2978, 2976, 2927, 2928, 2929, 
         2930, 2931, 2932, 2933, 3032},
         VertexColors->Automatic], 
        LineBox[{2934, 2935, 2936, 4207, 2937, 2938, 5354, 2939, 2940, 2941, 
         6584, 2942, 2943, 2944, 7779, 2945, 2946, 3033},
         VertexColors->Automatic], 
        LineBox[{2947, 2948, 2949, 3185, 2950, 2951, 3330, 2952, 2953, 2954, 
         3480, 2955, 2956, 3624, 2957, 2958, 2959, 3773, 2960, 2961, 2962, 
         3925, 2963, 2964, 4094, 2965, 2966, 2967, 5235, 2968, 2969, 6464, 
         2970, 2971, 2972, 7658, 2973, 2974, 2997, 2991, 2986, 2982, 2979, 
         2977, 2998, 2992, 2987, 2983, 2980, 2999, 2993, 2988, 2984, 3000, 
         2994, 2989, 3001, 2995, 3002, 2975},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#24"]& ], 
      TagBox[
       {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.],
         LineBox[{3040, 3157, 3138, 3122, 3108, 3098, 3090, 3041, 3042, 3043, 
         3044, 3045, 3046, 3158, 3139, 3123, 3109, 3099, 3091, 3162, 3143, 
         3128, 3114, 3104, 3047, 3159, 3140, 3124, 3110, 3100, 3166, 3147, 
         3132, 3118, 3092, 3163, 3144, 3129, 3172, 3153, 3115, 3170, 3151, 
         3177, 3136, 3174, 3155, 3178},
         VertexColors->Automatic], 
        LineBox[{3105, 3120, 3048, 3093, 3049, 3050, 4208, 3051, 3052, 5355, 
         3053, 3054, 3055, 6585, 3056, 3057, 3058, 7780, 3059, 3060, 3061, 
         3062, 3094, 3063, 3125, 3111, 3169, 3150, 3176},
         VertexColors->Automatic], 
        LineBox[{3173, 3154, 3101, 3167, 3148, 3133, 3119, 3095, 3164, 3145, 
         3130, 3116, 3106, 3064, 3160, 3141, 3126, 3112, 3102, 3096, 3065, 
         3331, 3066, 3067, 3068, 3481, 3069, 3070, 3625, 3071, 3072, 3073, 
         3774, 3074, 3075, 3076, 3926, 3077, 3078, 4095, 3079, 3080, 3081, 
         5236, 3082, 3083, 6465, 3084, 3085, 3086, 7659, 3087, 3088, 3161, 
         3142, 3127, 3113, 3103, 3097, 3165, 3146, 3131, 3117, 3107, 3168, 
         3149, 3134, 3121, 3171, 3152, 3137, 3175, 3156, 3179, 3089},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#25"]& ], 
      TagBox[
       {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{3191, 3304, 3286, 3272, 3259, 3249, 3241, 3192, 3193, 3194, 
         3195, 3196, 3197, 3305, 3287, 3273, 3260, 3250, 3242, 3309, 3291, 
         3277, 3264, 3255, 3198, 3306, 3288, 3274, 3261, 3251, 3312, 3294, 
         3280, 3268, 3243, 3310, 3292, 3278, 3318, 3300, 3265, 3315, 3297, 
         3323, 3283, 3320, 3302, 3324},
         VertexColors->Automatic], 
        LineBox[{3256, 3269, 3199, 3244, 3200, 3201, 4209, 3202, 3203, 5356, 
         3204, 3205, 3206, 6586, 3207, 3208, 3209, 7781, 3210, 3211, 3212, 
         3213, 3214, 4210, 3215, 3245, 3216, 3252, 3246, 3266, 3257, 3313, 
         3295, 3332},
         VertexColors->Automatic], 
        LineBox[{3322, 3281, 3319, 3301, 3270, 3316, 3298, 3284, 3217, 3307, 
         3289, 3275, 3262, 3253, 3247, 3218, 3219, 3482, 3220, 3221, 3626, 
         3222, 3223, 3224, 3775, 3225, 3226, 3227, 3927, 3228, 3229, 4096, 
         3230, 3231, 3232, 5237, 3233, 3234, 6466, 3235, 3236, 3237, 7660, 
         3238, 3239, 3308, 3290, 3276, 3263, 3254, 3248, 3311, 3293, 3279, 
         3267, 3258, 3314, 3296, 3282, 3271, 3317, 3299, 3285, 3321, 3303, 
         3325, 3240},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#26"]& ], 
      TagBox[
       {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{3339, 3455, 3436, 3421, 3407, 3397, 3389, 3340, 3341, 3342, 
         3343, 3344, 3345, 3456, 3437, 3422, 3408, 3398, 3390, 3460, 3441, 
         3426, 3413, 3403, 3346, 3457, 3438, 3423, 3409, 3399, 3464, 3445, 
         3430, 3417, 3391, 3461, 3442, 3427, 3469, 3451, 3414, 3466, 3448, 
         3473, 3433, 3471, 3453, 3475},
         VertexColors->Automatic], 
        LineBox[{3404, 3419, 3347, 3392, 3348, 3349, 4211, 3350, 3351, 5357, 
         3352, 3353, 3354, 6587, 3355, 3356, 3357, 7782, 3358, 3359, 3360, 
         3361, 3362, 4212, 3363, 3364, 4358, 3365, 3366, 3393, 3367, 3410, 
         3400, 3446, 3431, 3470, 3452},
         VertexColors->Automatic], 
        LineBox[{3474, 3418, 3467, 3449, 3434, 3394, 3462, 3443, 3428, 3415, 
         3405, 3368, 3458, 3439, 3424, 3411, 3401, 3395, 3369, 3627, 3370, 
         3371, 3372, 3776, 3373, 3374, 3375, 3928, 3376, 3377, 4097, 3378, 
         3379, 3380, 5238, 3381, 3382, 6467, 3383, 3384, 3385, 7661, 3386, 
         3387, 3459, 3440, 3425, 3412, 3402, 3396, 3463, 3444, 3429, 3416, 
         3406, 3465, 3447, 3432, 3420, 3468, 3450, 3435, 3472, 3454, 3476, 
         3388},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#27"]& ], 
      TagBox[
       {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{3489, 3601, 3584, 3570, 3557, 3547, 3539, 3490, 3491, 3492, 
         3493, 3494, 3495, 3602, 3585, 3571, 3558, 3548, 3540, 3606, 3589, 
         3575, 3562, 3553, 3496, 3603, 3586, 3572, 3559, 3549, 3609, 3592, 
         3578, 3566, 3541, 3607, 3590, 3576, 3614, 3597, 3563, 3611, 3594, 
         3618, 3581, 3615, 3598, 3620},
         VertexColors->Automatic], 
        LineBox[{3554, 3567, 3497, 3542, 3498, 3499, 4213, 3500, 3501, 5358, 
         3502, 3503, 3504, 6588, 3505, 3506, 3507, 7783, 3508, 3509, 3510, 
         3511, 3512, 4214, 3513, 3514, 4359, 3515, 3516, 3517, 4502, 3518, 
         3543, 3519, 3550, 3544, 3564, 3555, 3579, 3568, 3612, 3595},
         VertexColors->Automatic], 
        LineBox[{3619, 3582, 3616, 3599, 3520, 3604, 3587, 3573, 3560, 3551, 
         3545, 3521, 3522, 3777, 3523, 3524, 3525, 3929, 3526, 3527, 4098, 
         3528, 3529, 3530, 5239, 3531, 3532, 6468, 3533, 3534, 3535, 7662, 
         3536, 3537, 3605, 3588, 3574, 3561, 3552, 3546, 3608, 3591, 3577, 
         3565, 3556, 3610, 3593, 3580, 3569, 3613, 3596, 3583, 3617, 3600, 
         3621, 3538},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#28"]& ], 
      TagBox[
       {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{3634, 3749, 3730, 3715, 3702, 3692, 3684, 3635, 3636, 3637, 
         3638, 3639, 3640, 3750, 3731, 3716, 3703, 3693, 3685, 3754, 3735, 
         3720, 3707, 3698, 3641, 3751, 3732, 3717, 3704, 3694, 3758, 3739, 
         3724, 3711, 3686, 3755, 3736, 3721, 3764, 3745, 3708, 3761, 3742, 
         3769, 3727, 3766, 3747, 3770},
         VertexColors->Automatic], 
        LineBox[{3699, 3712, 3642, 3687, 3643, 3644, 4215, 3645, 3646, 5359, 
         3647, 3648, 3649, 6589, 3650, 3651, 3652, 7784, 3653, 3654, 3655, 
         3656, 3657, 4216, 3658, 3659, 4360, 3660, 3661, 3662, 4503, 3663, 
         3664, 4640, 3665, 3666, 3688, 3667, 3695, 3689, 3756, 3737, 3768},
         VertexColors->Automatic], 
        LineBox[{3722, 3765, 3746, 3709, 3762, 3743, 3728, 3700, 3759, 3740, 
         3725, 3713, 3668, 3752, 3733, 3718, 3705, 3696, 3690, 3669, 3670, 
         3930, 3671, 3672, 4099, 3673, 3674, 3675, 5240, 3676, 3677, 6469, 
         3678, 3679, 3680, 7663, 3681, 3682, 3753, 3734, 3719, 3706, 3697, 
         3691, 3757, 3738, 3723, 3710, 3701, 3760, 3741, 3726, 3714, 3763, 
         3744, 3729, 3767, 3748, 3771, 3683},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#29"]& ], 
      TagBox[
       {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{3784, 3902, 3882, 3866, 3852, 3842, 3834, 3785, 3786, 3787, 
         3788, 3789, 3790, 3903, 3883, 3867, 3853, 3843, 3835, 3907, 3888, 
         3872, 3858, 3848, 3791, 3904, 3884, 3868, 3854, 3844, 3911, 3892, 
         3876, 3862, 3836, 3908, 3889, 3873, 3918, 3899, 3859, 3915, 3896, 
         3921, 3880, 3919, 3900, 3923},
         VertexColors->Automatic], 
        LineBox[{3849, 3864, 3792, 3837, 3793, 3794, 4217, 3795, 3796, 5360, 
         3797, 3798, 3799, 6590, 3800, 3801, 3802, 7785, 3803, 3804, 3805, 
         3806, 3807, 4218, 3808, 3809, 4361, 3810, 3811, 3812, 4504, 3813, 
         3814, 4641, 3815, 3816, 3817, 4783, 3818, 3819, 3838, 3820, 3885, 
         3869, 3917, 3898, 3922},
         VertexColors->Automatic], 
        LineBox[{3914, 3895, 3879, 3845, 3912, 3893, 3877, 3863, 3839, 3909, 
         3890, 3874, 3860, 3850, 3821, 3905, 3886, 3870, 3856, 3846, 3840, 
         3822, 4100, 3823, 3824, 3825, 5241, 3826, 3827, 6470, 3828, 3829, 
         3830, 7664, 3831, 3832, 3906, 3887, 3871, 3857, 3847, 3841, 3910, 
         3891, 3875, 3861, 3851, 3913, 3894, 3878, 3865, 3916, 3897, 3881, 
         3920, 3901, 3924, 3833},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#30"]& ], 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{3936, 4050, 4032, 4017, 4004, 3994, 3986, 3937, 3938, 3939, 
         3940, 3941, 3942, 4051, 4033, 4018, 4005, 3995, 3987, 4055, 4037, 
         4022, 4009, 4000, 3943, 4052, 4034, 4019, 4006, 3996, 4058, 4040, 
         4026, 4013, 3988, 4056, 4038, 4023, 4063, 4046, 4010, 4061, 4043, 
         4067, 4029, 4064, 4047, 4068},
         VertexColors->Automatic], 
        LineBox[{4001, 4014, 3944, 3989, 3945, 3946, 4219, 3947, 3948, 5361, 
         3949, 3950, 3951, 6591, 3952, 3953, 3954, 7786, 3955, 3956, 3957, 
         3958, 3959, 4220, 3960, 3961, 4362, 3962, 3963, 3964, 4505, 3965, 
         3966, 4642, 3967, 3968, 3969, 4784, 3970, 3971, 3972, 4928, 3973, 
         3990, 3974, 3997, 3991, 4024, 4011, 4044, 4030, 4065, 4048, 4069},
         VertexColors->Automatic], 
        LineBox[{4002, 4059, 4041, 4027, 4015, 3975, 4053, 4035, 4020, 4007, 
         3998, 3992, 3976, 3977, 5242, 3978, 3979, 6471, 3980, 3981, 3982, 
         7665, 3983, 3984, 4054, 4036, 4021, 4008, 3999, 3993, 4057, 4039, 
         4025, 4012, 4003, 4060, 4042, 4028, 4016, 4062, 4045, 4031, 4066, 
         4049, 4070, 3985},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#31"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{4107, 4177, 4171, 4166, 4162, 4159, 4157, 4108, 4109, 4110, 
         4111, 4112, 4113, 4114, 4115, 4116, 4117, 4221},
         VertexColors->Automatic], 
        LineBox[{4118, 4119, 5362, 4120, 4121, 4122, 6592, 4123, 4124, 4125, 
         7787, 4126, 4127, 4128, 4129, 4130, 4222},
         VertexColors->Automatic], 
        LineBox[{4131, 4132, 4363, 4133, 4134, 4135, 4506, 4136, 4137, 4643, 
         4138, 4139, 4140, 4785, 4141, 4142, 4143, 4929, 4144, 4145, 5068, 
         4146, 4147, 4148, 5243, 4149, 4150, 6472, 4151, 4152, 4153, 7666, 
         4154, 4155, 4178, 4172, 4167, 4163, 4160, 4158, 4179, 4173, 4168, 
         4164, 4161, 4180, 4174, 4169, 4165, 4181, 4175, 4170, 4182, 4176, 
         4183, 4156},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#32"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{4229, 4338, 4322, 4308, 4297, 4287, 4279, 4230, 4231, 4232, 
         4233, 4234, 4235, 4236, 4237, 4238, 4339, 4323, 4309, 4298, 4288, 
         4280, 4343, 4327, 4313, 4302, 4293, 4239, 4340, 4324, 4310, 4299, 
         4348, 4332, 4318, 4289, 4345, 4329, 4354, 4315},
         VertexColors->Automatic], 
        LineBox[{4335, 4356, 4305, 4319, 4281, 4294, 4240, 4282, 4241, 5363, 
         4242, 4243, 4244, 6593, 4245, 4246, 4247, 7788, 4248, 4249, 4250, 
         4251, 4252, 4253, 4283, 4254, 4290, 4284, 4303, 4295, 4346, 4330, 
         4365},
         VertexColors->Automatic], 
        LineBox[{4355, 4316, 4352, 4336, 4306, 4349, 4333, 4320, 4255, 4341, 
         4325, 4311, 4300, 4291, 4285, 4256, 4257, 4507, 4258, 4259, 4644, 
         4260, 4261, 4262, 4786, 4263, 4264, 4265, 4930, 4266, 4267, 5069, 
         4268, 4269, 4270, 5244, 4271, 4272, 6473, 4273, 4274, 4275, 7667, 
         4276, 4277, 4342, 4326, 4312, 4301, 4292, 4286, 4344, 4328, 4314, 
         4304, 4296, 4347, 4331, 4317, 4307, 4350, 4334, 4321, 4353, 4337, 
         4357, 4278},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#33"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{4370, 4482, 4465, 4450, 4438, 4428, 4420, 4371, 4372, 4373, 
         4374, 4375, 4376, 4377, 4378, 4379, 4483, 4466, 4451, 4439, 4429, 
         4421, 4487, 4470, 4455, 4444, 4434, 4380, 4484, 4467, 4452, 4440, 
         4492, 4476, 4461, 4430, 4490, 4473, 4498, 4458},
         VertexColors->Automatic], 
        LineBox[{4479, 4499, 4447, 4462, 4422, 4435, 4381, 4423, 4382, 5364, 
         4383, 4384, 4385, 6594, 4386, 4387, 4388, 7789, 4389, 4390, 4391, 
         4392, 4393, 4394, 4395, 5365, 4396, 4397, 4424, 4398, 4441, 4431, 
         4474, 4459, 4496, 4480},
         VertexColors->Automatic], 
        LineBox[{4500, 4448, 4493, 4477, 4463, 4425, 4488, 4471, 4456, 4445, 
         4436, 4399, 4485, 4468, 4453, 4442, 4432, 4426, 4400, 4645, 4401, 
         4402, 4403, 4787, 4404, 4405, 4406, 4931, 4407, 4408, 5070, 4409, 
         4410, 4411, 5245, 4412, 4413, 6474, 4414, 4415, 4416, 7668, 4417, 
         4418, 4486, 4469, 4454, 4443, 4433, 4427, 4489, 4472, 4457, 4446, 
         4437, 4491, 4475, 4460, 4449, 4494, 4478, 4464, 4497, 4481, 4501, 
         4419},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#34"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{4513, 4621, 4606, 4592, 4581, 4571, 4563, 4514, 4515, 4516, 
         4517, 4518, 4519, 4520, 4521, 4522, 4622, 4607, 4593, 4582, 4572, 
         4564, 4626, 4611, 4597, 4586, 4577, 4523, 4623, 4608, 4594, 4583, 
         4630, 4615, 4602, 4573, 4628, 4613, 4636, 4599},
         VertexColors->Automatic], 
        LineBox[{4618, 4638, 4589, 4603, 4565, 4578, 4524, 4566, 4525, 5366, 
         4526, 4527, 4528, 6595, 4529, 4530, 4531, 7790, 4532, 4533, 4534, 
         4535, 4536, 4537, 4538, 5367, 4539, 4540, 4541, 5526, 4542, 4567, 
         4543, 4574, 4568, 4587, 4579, 4600, 4590, 4631, 4616},
         VertexColors->Automatic], 
        LineBox[{4637, 4604, 4634, 4619, 4544, 4624, 4609, 4595, 4584, 4575, 
         4569, 4545, 4546, 4788, 4547, 4548, 4549, 4932, 4550, 4551, 5071, 
         4552, 4553, 4554, 5246, 4555, 4556, 6475, 4557, 4558, 4559, 7669, 
         4560, 4561, 4625, 4610, 4596, 4585, 4576, 4570, 4627, 4612, 4598, 
         4588, 4580, 4629, 4614, 4601, 4591, 4632, 4617, 4605, 4635, 4620, 
         4639, 4562},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#35"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{4651, 4762, 4745, 4730, 4719, 4709, 4701, 4652, 4653, 4654, 
         4655, 4656, 4657, 4658, 4659, 4660, 4763, 4746, 4731, 4720, 4710, 
         4702, 4767, 4750, 4735, 4724, 4715, 4661, 4764, 4747, 4732, 4721, 
         4773, 4756, 4741, 4711, 4770, 4753, 4780, 4738},
         VertexColors->Automatic], 
        LineBox[{4760, 4781, 4727, 4743, 4703, 4716, 4662, 4704, 4663, 5368, 
         4664, 4665, 4666, 6596, 4667, 4668, 4669, 7791, 4670, 4671, 4672, 
         4673, 4674, 4675, 4676, 5369, 4677, 4678, 4679, 5527, 4680, 4681, 
         5675, 4682, 4683, 4705, 4684, 4712, 4706, 4768, 4751, 4779},
         VertexColors->Automatic], 
        LineBox[{4736, 4776, 4759, 4725, 4774, 4757, 4742, 4717, 4771, 4754, 
         4739, 4728, 4685, 4765, 4748, 4733, 4722, 4713, 4707, 4686, 4687, 
         4933, 4688, 4689, 5072, 4690, 4691, 4692, 5247, 4693, 4694, 6476, 
         4695, 4696, 4697, 7670, 4698, 4699, 4766, 4749, 4734, 4723, 4714, 
         4708, 4769, 4752, 4737, 4726, 4718, 4772, 4755, 4740, 4729, 4775, 
         4758, 4744, 4778, 4761, 4782, 4700},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#36"]& ], 
      TagBox[
       {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{4794, 4907, 4889, 4873, 4862, 4852, 4844, 4795, 4796, 4797, 
         4798, 4799, 4800, 4801, 4802, 4803, 4908, 4890, 4874, 4863, 4853, 
         4845, 4912, 4895, 4879, 4867, 4858, 4804, 4909, 4891, 4875, 4864, 
         4918, 4901, 4885, 4854, 4915, 4898, 4924, 4882},
         VertexColors->Automatic], 
        LineBox[{4905, 4926, 4870, 4887, 4846, 4859, 4805, 4847, 4806, 5370, 
         4807, 4808, 4809, 6597, 4810, 4811, 4812, 7792, 4813, 4814, 4815, 
         4816, 4817, 4818, 4819, 5371, 4820, 4821, 4822, 5528, 4823, 4824, 
         5676, 4825, 4826, 4827, 5829, 4828, 4829, 4848, 4830, 4892, 4876, 
         4921, 4904, 4925},
         VertexColors->Automatic], 
        LineBox[{4919, 4902, 4886, 4855, 4916, 4899, 4883, 4871, 4849, 4913, 
         4896, 4880, 4868, 4860, 4831, 4910, 4893, 4877, 4865, 4856, 4850, 
         4832, 5073, 4833, 4834, 4835, 5248, 4836, 4837, 6477, 4838, 4839, 
         4840, 7671, 4841, 4842, 4911, 4894, 4878, 4866, 4857, 4851, 4914, 
         4897, 4881, 4869, 4861, 4917, 4900, 4884, 4872, 4920, 4903, 4888, 
         4923, 4906, 4927, 4843},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#37"]& ], 
      TagBox[
       {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{4939, 5049, 5033, 5018, 5007, 4997, 4989, 4940, 4941, 4942, 
         4943, 4944, 4945, 4946, 4947, 4948, 5050, 5034, 5019, 5008, 4998, 
         4990, 5054, 5038, 5023, 5012, 5003, 4949, 5051, 5035, 5020, 5009, 
         5059, 5043, 5029, 4999, 5056, 5040, 5064, 5026},
         VertexColors->Automatic], 
        LineBox[{5046, 5065, 5015, 5031, 4991, 5004, 4950, 4992, 4951, 5372, 
         4952, 4953, 4954, 6598, 4955, 4956, 4957, 7793, 4958, 4959, 4960, 
         4961, 4962, 4963, 4964, 5373, 4965, 4966, 4967, 5529, 4968, 4969, 
         5677, 4970, 4971, 4972, 5830, 4973, 4974, 4975, 5985, 4976, 4993, 
         4977, 5000, 4994, 5024, 5013, 5044, 5030, 5062, 5047, 5066},
         VertexColors->Automatic], 
        LineBox[{5005, 5057, 5041, 5027, 5016, 4978, 5052, 5036, 5021, 5010, 
         5001, 4995, 4979, 4980, 5249, 4981, 4982, 6478, 4983, 4984, 4985, 
         7672, 4986, 4987, 5053, 5037, 5022, 5011, 5002, 4996, 5055, 5039, 
         5025, 5014, 5006, 5058, 5042, 5028, 5017, 5060, 5045, 5032, 5063, 
         5048, 5067, 4988},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#38"]& ], 
      TagBox[
       {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{5079, 5191, 5174, 5159, 5147, 5137, 5129, 5080, 5081, 5082, 
         5083, 5084, 5085, 5086, 5087, 5088, 5192, 5175, 5160, 5148, 5138, 
         5130, 5196, 5179, 5164, 5153, 5143, 5089, 5193, 5176, 5161, 5149, 
         5202, 5185, 5170, 5139, 5199, 5182, 5208, 5167},
         VertexColors->Automatic], 
        LineBox[{5188, 5210, 5156, 5171, 5131, 5144, 5090, 5132, 5091, 5374, 
         5092, 5093, 5094, 6599, 5095, 5096, 5097, 7794, 5098, 5099, 5100, 
         5101, 5102, 5103, 5104, 5375, 5105, 5106, 5107, 5530, 5108, 5109, 
         5678, 5110, 5111, 5112, 5831, 5113, 5114, 5115, 5986, 5116, 5117, 
         6136, 5118, 5119, 5133, 5120, 5150, 5140, 5200, 5183},
         VertexColors->Automatic], 
        LineBox[{5209, 5168, 5206, 5189, 5157, 5203, 5186, 5172, 5134, 5197, 
         5180, 5165, 5154, 5145, 5121, 5194, 5177, 5162, 5151, 5141, 5135, 
         5122, 6479, 5123, 5124, 5125, 7673, 5126, 5127, 5195, 5178, 5163, 
         5152, 5142, 5136, 5198, 5181, 5166, 5155, 5146, 5201, 5184, 5169, 
         5158, 5204, 5187, 5173, 5207, 5190, 5211, 5128},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#39"]& ], 
      TagBox[
       {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.],
         LineBox[{5255, 5325, 5319, 5314, 5310, 5307, 5305, 5256, 5257, 5258, 
         5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5376},
         VertexColors->Automatic], 
        LineBox[{5268, 5269, 5270, 6600, 5271, 5272, 5273, 7795, 5274, 5275, 
         5276, 5277, 5278, 5279, 5280, 5377},
         VertexColors->Automatic], 
        LineBox[{5281, 5282, 5283, 5531, 5284, 5285, 5679, 5286, 5287, 5288, 
         5832, 5289, 5290, 5291, 5987, 5292, 5293, 6137, 5294, 5295, 5296, 
         6291, 5297, 5298, 6480, 5299, 5300, 5301, 7674, 5302, 5303, 5326, 
         5320, 5315, 5311, 5308, 5306, 5327, 5321, 5316, 5312, 5309, 5328, 
         5322, 5317, 5313, 5329, 5323, 5318, 5330, 5324, 5331, 5304},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#40"]& ], 
      TagBox[
       {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{5384, 5504, 5483, 5466, 5452, 5442, 5434, 5385, 5386, 5387, 
         5388, 5389, 5390, 5391, 5392, 5393, 5394, 5395, 5505, 5484, 5467, 
         5453, 5443, 5435, 5509, 5488, 5471, 5458, 5448, 5396, 5506, 5485, 
         5468, 5454, 5444, 5513, 5492, 5475, 5462, 5436, 5510, 5489, 5472, 
         5459, 5516, 5496, 5479, 5449, 5514, 5494, 5477, 5521, 5501, 5464, 
         5518, 5498, 5523},
         VertexColors->Automatic], 
        LineBox[{5481, 5502, 5397, 5437, 5398, 5399, 6601, 5400, 5401, 5402, 
         7796, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411, 5438, 
         5412, 5455, 5445, 5493, 5476, 5520, 5500},
         VertexColors->Automatic], 
        LineBox[{5524, 5463, 5517, 5497, 5480, 5439, 5511, 5490, 5473, 5460, 
         5450, 5413, 5507, 5486, 5469, 5456, 5446, 5440, 5414, 5680, 5415, 
         5416, 5417, 5833, 5418, 5419, 5420, 5988, 5421, 5422, 6138, 5423, 
         5424, 5425, 6292, 5426, 5427, 6481, 5428, 5429, 5430, 7675, 5431, 
         5432, 5508, 5487, 5470, 5457, 5447, 5441, 5512, 5491, 5474, 5461, 
         5451, 5515, 5495, 5478, 5465, 5519, 5499, 5482, 5522, 5503, 5525, 
         5433},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#41"]& ], 
      TagBox[
       {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{5538, 5654, 5635, 5619, 5606, 5596, 5588, 5539, 5540, 5541, 
         5542, 5543, 5544, 5545, 5546, 5547, 5548, 5549, 5655, 5636, 5620, 
         5607, 5597, 5589, 5659, 5640, 5624, 5611, 5602, 5550, 5656, 5637, 
         5621, 5608, 5598, 5662, 5643, 5627, 5615, 5590, 5660, 5641, 5625, 
         5612, 5665, 5646, 5631, 5603, 5663, 5644, 5628, 5669, 5650, 5616, 
         5666, 5647, 5672},
         VertexColors->Automatic], 
        LineBox[{5632, 5651, 5551, 5591, 5552, 5553, 6602, 5554, 5555, 5556, 
         7797, 5557, 5558, 5559, 5560, 5561, 5562, 5563, 5564, 5565, 5566, 
         6603, 5567, 5592, 5568, 5599, 5593, 5613, 5604, 5629, 5617, 5667, 
         5648},
         VertexColors->Automatic], 
        LineBox[{5673, 5633, 5670, 5652, 5569, 5657, 5638, 5622, 5609, 5600, 
         5594, 5570, 5571, 5834, 5572, 5573, 5574, 5989, 5575, 5576, 6139, 
         5577, 5578, 5579, 6293, 5580, 5581, 6482, 5582, 5583, 5584, 7676, 
         5585, 5586, 5658, 5639, 5623, 5610, 5601, 5595, 5661, 5642, 5626, 
         5614, 5605, 5664, 5645, 5630, 5618, 5668, 5649, 5634, 5671, 5653, 
         5674, 5587},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#42"]& ], 
      TagBox[
       {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{5687, 5806, 5785, 5768, 5755, 5745, 5737, 5688, 5689, 5690, 
         5691, 5692, 5693, 5694, 5695, 5696, 5697, 5698, 5807, 5786, 5769, 
         5756, 5746, 5738, 5811, 5790, 5773, 5760, 5751, 5699, 5808, 5787, 
         5770, 5757, 5747, 5815, 5794, 5777, 5764, 5739, 5812, 5791, 5774, 
         5761, 5819, 5798, 5781, 5752, 5816, 5795, 5778, 5824, 5803, 5765, 
         5821, 5800, 5827},
         VertexColors->Automatic], 
        LineBox[{5783, 5804, 5700, 5740, 5701, 5702, 6604, 5703, 5704, 5705, 
         7798, 5706, 5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 
         6605, 5716, 5717, 6753, 5718, 5719, 5741, 5720, 5748, 5742, 5813, 
         5792, 5826},
         VertexColors->Automatic], 
        LineBox[{5775, 5823, 5802, 5762, 5820, 5799, 5782, 5753, 5817, 5796, 
         5779, 5766, 5721, 5809, 5788, 5771, 5758, 5749, 5743, 5722, 5723, 
         5990, 5724, 5725, 6140, 5726, 5727, 5728, 6294, 5729, 5730, 6483, 
         5731, 5732, 5733, 7677, 5734, 5735, 5810, 5789, 5772, 5759, 5750, 
         5744, 5814, 5793, 5776, 5763, 5754, 5818, 5797, 5780, 5767, 5822, 
         5801, 5784, 5825, 5805, 5828, 5736},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#43"]& ], 
      TagBox[
       {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{5841, 5962, 5940, 5922, 5909, 5899, 5891, 5842, 5843, 5844, 
         5845, 5846, 5847, 5848, 5849, 5850, 5851, 5852, 5963, 5941, 5923, 
         5910, 5900, 5892, 5967, 5946, 5928, 5914, 5905, 5853, 5964, 5942, 
         5924, 5911, 5901, 5971, 5950, 5932, 5918, 5893, 5968, 5947, 5929, 
         5915, 5976, 5955, 5937, 5906, 5973, 5952, 5934, 5980, 5959, 5920, 
         5977, 5956, 5982},
         VertexColors->Automatic], 
        LineBox[{5938, 5960, 5854, 5894, 5855, 5856, 6606, 5857, 5858, 5859, 
         7799, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 
         6607, 5870, 5871, 6754, 5872, 5873, 5874, 6901, 5875, 5876, 5895, 
         5877, 5943, 5925, 5979, 5958, 5983},
         VertexColors->Automatic], 
        LineBox[{5975, 5954, 5936, 5902, 5972, 5951, 5933, 5919, 5896, 5969, 
         5948, 5930, 5916, 5907, 5878, 5965, 5944, 5926, 5912, 5903, 5897, 
         5879, 6141, 5880, 5881, 5882, 6295, 5883, 5884, 6484, 5885, 5886, 
         5887, 7678, 5888, 5889, 5966, 5945, 5927, 5913, 5904, 5898, 5970, 
         5949, 5931, 5917, 5908, 5974, 5953, 5935, 5921, 5978, 5957, 5939, 
         5981, 5961, 5984, 5890},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#44"]& ], 
      TagBox[
       {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{5997, 6115, 6095, 6078, 6065, 6055, 6047, 5998, 5999, 6000, 
         6001, 6002, 6003, 6004, 6005, 6006, 6007, 6008, 6116, 6096, 6079, 
         6066, 6056, 6048, 6120, 6100, 6083, 6070, 6061, 6009, 6117, 6097, 
         6080, 6067, 6057, 6123, 6103, 6087, 6074, 6049, 6121, 6101, 6084, 
         6071, 6127, 6107, 6091, 6062, 6124, 6104, 6088, 6130, 6111, 6075, 
         6128, 6109, 6133},
         VertexColors->Automatic], 
        LineBox[{6093, 6113, 6010, 6050, 6011, 6012, 6608, 6013, 6014, 6015, 
         7800, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 
         6609, 6026, 6027, 6755, 6028, 6029, 6030, 6902, 6031, 6032, 6033, 
         7052, 6034, 6051, 6035, 6058, 6052, 6085, 6072, 6108, 6092, 6131, 
         6112, 6134},
         VertexColors->Automatic], 
        LineBox[{6063, 6125, 6105, 6089, 6076, 6036, 6118, 6098, 6081, 6068, 
         6059, 6053, 6037, 6038, 6296, 6039, 6040, 6485, 6041, 6042, 6043, 
         7679, 6044, 6045, 6119, 6099, 6082, 6069, 6060, 6054, 6122, 6102, 
         6086, 6073, 6064, 6126, 6106, 6090, 6077, 6129, 6110, 6094, 6132, 
         6114, 6135, 6046},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#45"]& ], 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{6148, 6268, 6247, 6230, 6216, 6206, 6198, 6149, 6150, 6151, 
         6152, 6153, 6154, 6155, 6156, 6157, 6158, 6159, 6269, 6248, 6231, 
         6217, 6207, 6199, 6273, 6252, 6235, 6222, 6212, 6160, 6270, 6249, 
         6232, 6218, 6208, 6277, 6256, 6239, 6226, 6200, 6274, 6253, 6236, 
         6223, 6281, 6260, 6243, 6213, 6279, 6258, 6241, 6286, 6265, 6228, 
         6283, 6262, 6289},
         VertexColors->Automatic], 
        LineBox[{6245, 6266, 6161, 6201, 6162, 6163, 6610, 6164, 6165, 6166, 
         7801, 6167, 6168, 6169, 6170, 6171, 6172, 6173, 6174, 6175, 6176, 
         6611, 6177, 6178, 6756, 6179, 6180, 6181, 6903, 6182, 6183, 6184, 
         7053, 6185, 6186, 7196, 6187, 6188, 6202, 6189, 6219, 6209, 6278, 
         6257},
         VertexColors->Automatic], 
        LineBox[{6288, 6240, 6285, 6264, 6227, 6282, 6261, 6244, 6203, 6275, 
         6254, 6237, 6224, 6214, 6190, 6271, 6250, 6233, 6220, 6210, 6204, 
         6191, 6486, 6192, 6193, 6194, 7680, 6195, 6196, 6272, 6251, 6234, 
         6221, 6211, 6205, 6276, 6255, 6238, 6225, 6215, 6280, 6259, 6242, 
         6229, 6284, 6263, 6246, 6287, 6267, 6290, 6197},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#46"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{6303, 6420, 6400, 6384, 6371, 6361, 6353, 6304, 6305, 6306, 
         6307, 6308, 6309, 6310, 6311, 6312, 6313, 6314, 6421, 6401, 6385, 
         6372, 6362, 6354, 6425, 6405, 6389, 6376, 6367, 6315, 6422, 6402, 
         6386, 6373, 6363, 6428, 6408, 6392, 6380, 6355, 6426, 6406, 6390, 
         6377, 6431, 6412, 6396, 6368, 6429, 6409, 6393, 6435, 6416, 6381, 
         6432, 6413, 6438},
         VertexColors->Automatic], 
        LineBox[{6397, 6418, 6316, 6356, 6317, 6318, 6612, 6319, 6320, 6321, 
         7802, 6322, 6323, 6324, 6325, 6326, 6327, 6328, 6329, 6330, 6331, 
         6613, 6332, 6333, 6757, 6334, 6335, 6336, 6904, 6337, 6338, 6339, 
         7054, 6340, 6341, 7197, 6342, 6343, 6344, 7345, 6345, 6357, 6346, 
         6364, 6358, 6378, 6369, 6410, 6394, 6436, 6417},
         VertexColors->Automatic], 
        LineBox[{6439, 6382, 6433, 6414, 6398, 6347, 6423, 6403, 6387, 6374, 
         6365, 6359, 6348, 6349, 7681, 6350, 6351, 6424, 6404, 6388, 6375, 
         6366, 6360, 6427, 6407, 6391, 6379, 6370, 6430, 6411, 6395, 6383, 
         6434, 6415, 6399, 6437, 6419, 6440, 6352},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#47"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{6493, 6563, 6557, 6552, 6548, 6545, 6543, 6494, 6495, 6496, 
         6497, 6498, 6499, 6500, 6501, 6502, 6503, 6504, 6505, 6506, 6507, 
         6508, 6614},
         VertexColors->Automatic], 
        LineBox[{6509, 6510, 6511, 7803, 6512, 6513, 6514, 6515, 6516, 6517, 
         6518, 6519, 6520, 6521, 6615},
         VertexColors->Automatic], 
        LineBox[{6522, 6523, 6758, 6524, 6525, 6526, 6905, 6527, 6528, 6529, 
         7055, 6530, 6531, 7198, 6532, 6533, 6534, 7346, 6535, 6536, 7489, 
         6537, 6538, 6539, 7682, 6540, 6541, 6564, 6558, 6553, 6549, 6546, 
         6544, 6565, 6559, 6554, 6550, 6547, 6566, 6560, 6555, 6551, 6567, 
         6561, 6556, 6568, 6562, 6569, 6542},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#48"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{6622, 6732, 6715, 6701, 6690, 6680, 6672, 6623, 6624, 6625, 
         6626, 6627, 6628, 6629, 6630, 6631, 6632, 6633, 6634, 6635, 6636, 
         6733, 6716, 6702, 6691, 6681, 6673, 6737, 6720, 6706, 6695, 6686, 
         6637, 6734, 6717, 6703, 6692, 6741, 6724, 6711, 6682, 6739, 6722, 
         6708, 6745, 6728, 6698, 6742, 6725, 6749, 6712, 6746, 6729, 6751},
         VertexColors->Automatic], 
        LineBox[{6674, 6687, 6638, 6675, 6639, 6640, 7804, 6641, 6642, 6643, 
         6644, 6645, 6646, 6647, 6648, 6649, 6650, 6651, 6676, 6652, 6683, 
         6677, 6696, 6688, 6709, 6699, 6743, 6726},
         VertexColors->Automatic], 
        LineBox[{6750, 6713, 6747, 6730, 6653, 6735, 6718, 6704, 6693, 6684, 
         6678, 6654, 6655, 6906, 6656, 6657, 6658, 7056, 6659, 6660, 7199, 
         6661, 6662, 6663, 7347, 6664, 6665, 7490, 6666, 6667, 6668, 7683, 
         6669, 6670, 6736, 6719, 6705, 6694, 6685, 6679, 6738, 6721, 6707, 
         6697, 6689, 6740, 6723, 6710, 6700, 6744, 6727, 6714, 6748, 6731, 
         6752, 6671},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#49"]& ], 
      TagBox[
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{6765, 6878, 6859, 6844, 6833, 6823, 6815, 6766, 6767, 6768, 
         6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 
         6879, 6860, 6845, 6834, 6824, 6816, 6883, 6864, 6849, 6838, 6829, 
         6780, 6880, 6861, 6846, 6835, 6889, 6870, 6855, 6825, 6886, 6867, 
         6852, 6894, 6875, 6841, 6891, 6872, 6898, 6857, 6895, 6876, 6899},
         VertexColors->Automatic], 
        LineBox[{6817, 6830, 6781, 6818, 6782, 6783, 7805, 6784, 6785, 6786, 
         6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 7806, 6796, 
         6797, 6819, 6798, 6826, 6820, 6884, 6865, 6897},
         VertexColors->Automatic], 
        LineBox[{6850, 6893, 6874, 6839, 6890, 6871, 6856, 6831, 6887, 6868, 
         6853, 6842, 6799, 6881, 6862, 6847, 6836, 6827, 6821, 6800, 6801, 
         7057, 6802, 6803, 7200, 6804, 6805, 6806, 7348, 6807, 6808, 7491, 
         6809, 6810, 6811, 7684, 6812, 6813, 6882, 6863, 6848, 6837, 6828, 
         6822, 6885, 6866, 6851, 6840, 6832, 6888, 6869, 6854, 6843, 6892, 
         6873, 6858, 6896, 6877, 6900, 6814},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#50"]& ], 
      TagBox[
       {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{6913, 7029, 7009, 6993, 6981, 6971, 6963, 6914, 6915, 6916, 
         6917, 6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 
         7030, 7010, 6994, 6982, 6972, 6964, 7034, 7015, 6999, 6987, 6977, 
         6928, 7031, 7011, 6995, 6983, 7040, 7021, 7005, 6973, 7037, 7018, 
         7002, 7045, 7026, 6990, 7042, 7023, 7048, 7007, 7046, 7027, 7050},
         VertexColors->Automatic], 
        LineBox[{6965, 6978, 6929, 6966, 6930, 6931, 7807, 6932, 6933, 6934, 
         6935, 6936, 6937, 6938, 6939, 6940, 6941, 6942, 6943, 7808, 6944, 
         6945, 6946, 7902, 6947, 6948, 6967, 6949, 7012, 6996, 7044, 7025, 
         7049},
         VertexColors->Automatic], 
        LineBox[{7041, 7022, 7006, 6974, 7038, 7019, 7003, 6991, 6968, 7035, 
         7016, 7000, 6988, 6979, 6950, 7032, 7013, 6997, 6985, 6975, 6969, 
         6951, 7201, 6952, 6953, 6954, 7349, 6955, 6956, 7492, 6957, 6958, 
         6959, 7685, 6960, 6961, 7033, 7014, 6998, 6986, 6976, 6970, 7036, 
         7017, 7001, 6989, 6980, 7039, 7020, 7004, 6992, 7043, 7024, 7008, 
         7047, 7028, 7051, 6962},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#51"]& ], 
      TagBox[
       {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{7063, 7175, 7157, 7142, 7131, 7121, 7113, 7064, 7065, 7066, 
         7067, 7068, 7069, 7070, 7071, 7072, 7073, 7074, 7075, 7076, 7077, 
         7176, 7158, 7143, 7132, 7122, 7114, 7180, 7162, 7147, 7136, 7127, 
         7078, 7177, 7159, 7144, 7133, 7185, 7167, 7153, 7123, 7182, 7164, 
         7150, 7188, 7171, 7139, 7186, 7169, 7192, 7155, 7190, 7173, 7194},
         VertexColors->Automatic], 
        LineBox[{7115, 7128, 7079, 7116, 7080, 7081, 7809, 7082, 7083, 7084, 
         7085, 7086, 7087, 7088, 7089, 7090, 7091, 7092, 7093, 7810, 7094, 
         7095, 7096, 7903, 7097, 7098, 7099, 7993, 7100, 7117, 7101, 7124, 
         7118, 7148, 7137, 7168, 7154, 7189, 7172, 7193},
         VertexColors->Automatic], 
        LineBox[{7129, 7183, 7165, 7151, 7140, 7102, 7178, 7160, 7145, 7134, 
         7125, 7119, 7103, 7104, 7350, 7105, 7106, 7493, 7107, 7108, 7109, 
         7686, 7110, 7111, 7179, 7161, 7146, 7135, 7126, 7120, 7181, 7163, 
         7149, 7138, 7130, 7184, 7166, 7152, 7141, 7187, 7170, 7156, 7191, 
         7174, 7195, 7112},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#52"]& ], 
      TagBox[
       {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{7208, 7322, 7303, 7288, 7276, 7266, 7258, 7209, 7210, 7211, 
         7212, 7213, 7214, 7215, 7216, 7217, 7218, 7219, 7220, 7221, 7222, 
         7323, 7304, 7289, 7277, 7267, 7259, 7327, 7308, 7293, 7282, 7272, 
         7223, 7324, 7305, 7290, 7278, 7333, 7314, 7299, 7268, 7330, 7311, 
         7296, 7337, 7318, 7285, 7334, 7315, 7342, 7300, 7339, 7320, 7343},
         VertexColors->Automatic], 
        LineBox[{7260, 7273, 7224, 7261, 7225, 7226, 7811, 7227, 7228, 7229, 
         7230, 7231, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7812, 7239, 
         7240, 7241, 7904, 7242, 7243, 7244, 7994, 7245, 7246, 8084, 7247, 
         7248, 7262, 7249, 7279, 7269, 7331, 7312},
         VertexColors->Automatic], 
        LineBox[{7341, 7297, 7338, 7319, 7286, 7335, 7316, 7301, 7263, 7328, 
         7309, 7294, 7283, 7274, 7250, 7325, 7306, 7291, 7280, 7270, 7264, 
         7251, 7494, 7252, 7253, 7254, 7687, 7255, 7256, 7326, 7307, 7292, 
         7281, 7271, 7265, 7329, 7310, 7295, 7284, 7275, 7332, 7313, 7298, 
         7287, 7336, 7317, 7302, 7340, 7321, 7344, 7257},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#53"]& ], 
      TagBox[
       {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{7357, 7468, 7450, 7436, 7425, 7415, 7407, 7358, 7359, 7360, 
         7361, 7362, 7363, 7364, 7365, 7366, 7367, 7368, 7369, 7370, 7371, 
         7469, 7451, 7437, 7426, 7416, 7408, 7473, 7455, 7441, 7430, 7421, 
         7372, 7470, 7452, 7438, 7427, 7477, 7460, 7446, 7417, 7475, 7457, 
         7443, 7481, 7464, 7433, 7478, 7461, 7485, 7447, 7483, 7466, 7487},
         VertexColors->Automatic], 
        LineBox[{7409, 7422, 7373, 7410, 7374, 7375, 7813, 7376, 7377, 7378, 
         7379, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7814, 7388, 
         7389, 7390, 7905, 7391, 7392, 7393, 7995, 7394, 7395, 8085, 7396, 
         7397, 7398, 8175, 7399, 7411, 7400, 7418, 7412, 7431, 7423, 7458, 
         7444, 7482, 7465},
         VertexColors->Automatic], 
        LineBox[{7486, 7434, 7479, 7462, 7448, 7401, 7471, 7453, 7439, 7428, 
         7419, 7413, 7402, 7403, 7688, 7404, 7405, 7472, 7454, 7440, 7429, 
         7420, 7414, 7474, 7456, 7442, 7432, 7424, 7476, 7459, 7445, 7435, 
         7480, 7463, 7449, 7484, 7467, 7488, 7406},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#54"]& ], 
      TagBox[
       {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.],
         LineBox[{7501, 7614, 7596, 7581, 7569, 7559, 7551, 7502, 7503, 7504, 
         7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 
         7615, 7597, 7582, 7570, 7560, 7552, 7619, 7601, 7586, 7575, 7565, 
         7516, 7616, 7598, 7583, 7571, 7624, 7606, 7592, 7561, 7622, 7604, 
         7589, 7627, 7610, 7578, 7625, 7607, 7631, 7593, 7628, 7611, 7632},
         VertexColors->Automatic], 
        LineBox[{7553, 7566, 7517, 7554, 7518, 7519, 7815, 7520, 7521, 7522, 
         7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7816, 7532, 
         7533, 7534, 7906, 7535, 7536, 7537, 7996, 7538, 7539, 8086, 7540, 
         7541, 7542, 8176, 7543, 7544, 8266, 7545, 7546, 7555, 7547, 7572, 
         7562, 7590, 7579, 7608, 7594, 7629, 7612},
         VertexColors->Automatic], 
        LineBox[{7633, 7556, 7620, 7602, 7587, 7576, 7567, 7548, 7617, 7599, 
         7584, 7573, 7563, 7557, 7549, 7618, 7600, 7585, 7574, 7564, 7558, 
         7621, 7603, 7588, 7577, 7568, 7623, 7605, 7591, 7580, 7626, 7609, 
         7595, 7630, 7613, 7634, 7550},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#55"]& ], 
      TagBox[
       {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{7695, 7765, 7759, 7754, 7750, 7747, 7745, 7696, 7697, 7698, 
         7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 
         7710, 7711, 7712, 7713, 7817},
         VertexColors->Automatic], 
        LineBox[{7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 
         7724, 7725, 7818},
         VertexColors->Automatic], 
        LineBox[{7726, 7727, 7728, 7907, 7729, 7730, 7731, 7997, 7732, 7733, 
         8087, 7734, 7735, 7736, 8177, 7737, 7738, 8267, 7739, 7740, 7741, 
         8357, 7742, 7743, 7766, 7760, 7755, 7751, 7748, 7746, 7767, 7761, 
         7756, 7752, 7749, 7768, 7762, 7757, 7753, 7769, 7763, 7758, 7770, 
         7764, 7771, 7744},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#56"]& ], 
      TagBox[
       {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{7825, 7895, 7889, 7884, 7880, 7877, 7875, 7826, 7827, 7828, 
         7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 
         7840, 7841, 7842, 7843, 7908},
         VertexColors->Automatic], 
        LineBox[{7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 
         7854, 7855, 7856, 7857, 7858, 7909},
         VertexColors->Automatic], 
        LineBox[{7859, 7860, 7861, 7998, 7862, 7863, 8088, 7864, 7865, 7866, 
         8178, 7867, 7868, 8268, 7869, 7870, 7871, 8358, 7872, 7873, 7896, 
         7890, 7885, 7881, 7878, 7876, 7897, 7891, 7886, 7882, 7879, 7898, 
         7892, 7887, 7883, 7899, 7893, 7888, 7900, 7894, 7901, 7874},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#57"]& ], 
      TagBox[
       {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{7916, 7986, 7980, 7975, 7971, 7968, 7966, 7917, 7918, 7919, 
         7920, 7921, 7922, 7923, 7924, 7925, 7926, 7927, 7928, 7929, 7930, 
         7931, 7932, 7933, 7934, 7999},
         VertexColors->Automatic], 
        LineBox[{7935, 7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, 7944, 
         7945, 7946, 7947, 7948, 7949, 7950, 7951, 7952, 8000},
         VertexColors->Automatic], 
        LineBox[{7953, 7954, 8089, 7955, 7956, 7957, 8179, 7958, 7959, 8269, 
         7960, 7961, 7962, 8359, 7963, 7964, 7987, 7981, 7976, 7972, 7969, 
         7967, 7988, 7982, 7977, 7973, 7970, 7989, 7983, 7978, 7974, 7990, 
         7984, 7979, 7991, 7985, 7992, 7965},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#58"]& ], 
      TagBox[
       {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{8007, 8077, 8071, 8066, 8062, 8059, 8057, 8008, 8009, 8010, 
         8011, 8012, 8013, 8014, 8015, 8016, 8017, 8018, 8019, 8020, 8021, 
         8022, 8023, 8024, 8025, 8090},
         VertexColors->Automatic], 
        LineBox[{8026, 8027, 8028, 8029, 8030, 8031, 8032, 8033, 8034, 8035, 
         8036, 8037, 8038, 8039, 8040, 8041, 8042, 8043, 8044, 8045, 8091},
         VertexColors->Automatic], 
        LineBox[{8046, 8047, 8048, 8180, 8049, 8050, 8270, 8051, 8052, 8053, 
         8360, 8054, 8055, 8078, 8072, 8067, 8063, 8060, 8058, 8079, 8073, 
         8068, 8064, 8061, 8080, 8074, 8069, 8065, 8081, 8075, 8070, 8082, 
         8076, 8083, 8056},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#59"]& ], 
      TagBox[
       {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
        AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{8098, 8168, 8162, 8157, 8153, 8150, 8148, 8099, 8100, 8101, 
         8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, 8112, 
         8113, 8114, 8115, 8116, 8181},
         VertexColors->Automatic], 
        LineBox[{8117, 8118, 8119, 8120, 8121, 8122, 8123, 8124, 8125, 8126, 
         8127, 8128, 8129, 8130, 8131, 8132, 8133, 8134, 8135, 8136, 8137, 
         8138, 8139, 8182},
         VertexColors->Automatic], 
        LineBox[{8140, 8141, 8271, 8142, 8143, 8144, 8361, 8145, 8146, 8169, 
         8163, 8158, 8154, 8151, 8149, 8170, 8164, 8159, 8155, 8152, 8171, 
         8165, 8160, 8156, 8172, 8166, 8161, 8173, 8167, 8174, 8147},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#60"]& ], 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{8189, 8259, 8253, 8248, 8244, 8241, 8239, 8190, 8191, 8192, 
         8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 
         8204, 8205, 8206, 8207, 8272},
         VertexColors->Automatic], 
        LineBox[{8208, 8209, 8210, 8211, 8212, 8213, 8214, 8215, 8216, 8217, 
         8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225, 8226, 8227, 8228, 
         8229, 8230, 8231, 8232, 8273},
         VertexColors->Automatic], 
        LineBox[{8233, 8234, 8235, 8362, 8236, 8237, 8260, 8254, 8249, 8245, 
         8242, 8240, 8261, 8255, 8250, 8246, 8243, 8262, 8256, 8251, 8247, 
         8263, 8257, 8252, 8264, 8258, 8265, 8238},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#61"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{8280, 8350, 8344, 8339, 8335, 8332, 8330, 8281, 8282, 8283, 
         8284, 8285, 8286, 8287, 8288, 8289, 8290, 8291, 8292, 8293, 8294, 
         8295, 8296, 8297, 8298, 8363},
         VertexColors->Automatic], 
        LineBox[{8299, 8300, 8301, 8302, 8303, 8304, 8305, 8306, 8307, 8308, 
         8309, 8310, 8311, 8312, 8313, 8314, 8315, 8316, 8317, 8318, 8319, 
         8320, 8321, 8322, 8323, 8324, 8325, 8326, 8364},
         VertexColors->Automatic], 
        LineBox[{8327, 8328, 8351, 8345, 8340, 8336, 8333, 8331, 8352, 8346, 
         8341, 8337, 8334, 8353, 8347, 8342, 8338, 8354, 8348, 8343, 8355, 
         8349, 8356, 8329},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$94623#62"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{8371, 8441, 8435, 8430, 8426, 8423, 8421, 8372, 8373, 8374, 
         8375, 8376, 8377, 8378, 8379, 8380, 8381, 8382, 8383, 8384, 8385, 
         8386, 8387, 8388, 8389, 8448},
         VertexColors->Automatic], 
        LineBox[{8390, 8391, 8392, 8393, 8394, 8395, 8396, 8397, 8398, 8399, 
         8400, 8401, 8402, 8403, 8404, 8405, 8406, 8407, 8408, 8409, 8410, 
         8411, 8412, 8413, 8414, 8415, 8416, 8417, 8418, 8419, 8442, 8436, 
         8431, 8427, 8424, 8422, 8443, 8437, 8432, 8428, 8425, 8444, 8438, 
         8433, 8429, 8445, 8439, 8434, 8446, 8440, 8447, 8420},
         VertexColors->Automatic]},
       Annotation[#, 
        "Charting`Private`Tag$94623#63"]& ], {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
    VertexColors->CompressedData["
1:eJzt3Wd0VFXXB3CQXoSgVAWlGwkv0qQJbOkQioCQoIQSUEoE6R0eQ1CpoQTB
EJEqGBGk+VATQicQYFKHkAQMyUwmIUElIohIeF3vPXwwa80LF+/k7nPv/wOL
tX7rrpl99t7nzpzMzDm1Rkzo/+FzhQoVKlLr739//3+7e1jbrz2uU4vdN3dW
TjxK6Y+Wh/a9lkpwOBwOh8ML3rsc2D1lx6hsirz4pmebLXaqmJj9VqWvLsML
yLn1AxzO2fWaX3rNX7M9r1bxcIvfbOOSZbzOHr/wZyMDKN1Kc+b+OujKNRtt
nRT1bkqMjTpndB/QZmsONZ09MPjuias0q2Ov123dz8Elc27zAg53hWNe8HSj
5t+o44Lz7Kv36/mVuj4khd7zmGnxDckgv4sLb684l0ovTHvU9W5mNm28trrM
hPUWavJdn8A180/BDe7c+hYOfxrXq/8xj7StF7c4ZYmfWzwY1/8ff276nhD/
3OuU08BacUApB10ufNkjYM51avplwMZlW7LpTN2yP+QUOUelp708aF+hk3D4
Uzm3/ocb283Wn7KMS5Y4ZXGz5dPV45Uln87i9G/jSHErkUoPor958HsrBy18
6chln9ev0YOfmnQIWJBN/v3dS6S0PkU3x1RoVNz7BBzuEuc2X+ByuV59yO1x
9Hp8s7lR82nUcXHLm7PrHV2qt1/TJZWy7g3w/723g+Ja1t/U84sUinB/u/+u
adn0ptuINsGLT9C6Ci2T/MqcgMNZO7d5Ci8Y16tP9OpD9L8x8mDU/pQ9b7K4
szzULrUheaJvKpWrsCipr7eDFkamXb3eL4VuXmxXd+6EbNq17rUrFSOP0/kP
Jj1alXUcDjeUc5un8GdzvfqB2+No9fh6zRfZ5ynihz9NPpPDi8/LGp9Ky7pX
bjx/sIOu3pjTtXbzFHbxw+FwOBwuozvbP0Ht747V/s6lmfhek018r8lNfK/J
mav9PoDav2M/fh+yRbwPOYd18VN5n40/1tsSmkJJI70a/bo9gw6OrDYuLwRe
UM6tH+Bwzo759Wz54Ran7OM12/Nyc2554BYPHC5jP6t9XrXrU7XrTVevH52N
d39Gu42DZ0dT0Sn33Y/kJVOLUSk5WVezqP8NxccMUPz6aMW1iqfV4RFTu32S
Rm7bh1Qr+p2D+t/9fFzUukQ4U+d234DDC9Jln0eujofbeGUZl1Hzxm28Zsuz
UfMge/xGda3qotXjcFuXqR2X2uuLni8U+qMjhi4dP+ATFJpK11fe3BrxMJMq
Ryq+PULxkFWKa1X3+B1jilb0tFHQnDaNS11wUO4v3q91zU6AG9y53X/gcFfc
r7jFr1d+jBqPXuM12/MatX/gyLOMLku9tHq9zhPrPodY9/31hHVftlj3WcW6
L1rjz+O0GteUDFtQwPZY6uTZIuOHNTcoqFWFQc+PziTP64rXfFvxoqS4VvFf
DD6ZuvgFOy0KmN3v4DkHjVhQaPP2u/Fw+D+c2/0Ebk6XvZ9dHY8seeA2Ltnz
w82RT+RNRjdb/tWOV6/vPWoVv1avI80tUxeM/yOWQo7XGTLnwQ3yuJ275v36
mdTusuKjIhT/WbhW4+28fuH3mX52Gpp84tO9Zx3UdUJKmmVJPBzuEud2v4LL
5bL3m6vj5JYHo46XW565udr8IJ/G6E/UkadrVRetHufx52gnxPruks77orj6
fvWJ7fMuS6rH0RyvgWcGu6fR/NhlNRJKZdLcdMVbDVS8d5ziWo2rYe+MWT2C
7NQktFxK27/jzF7dqsXJ9+PhcBbO7T4J19dl7ytXxyNLHriNy6h506tvkTee
dYEbO8+yxKnXfWZgztkzmxvGkUeLP8sObptG59ZVD3z1oYP6ZSue2VzxL0IU
55YfOBwOh8PhcFm8u9gH/ozYB7682Ae+i9jvvYPY7/0Tsd97RbFv3n6xb15z
sW/em2J/hqr1lP0ZquXbn8FP/E4nQ+P9GZztg9dU7LdQXuy3MOQJ+zjFid/p
rBK/07nzhN/vqP3+WMd8nzt0f8L3H/B3D7nc6+hr+3o9jKHbEwcXH3Mqlfa0
6bZhb04mXGPnVnc4XMb7Cbf4Xf283OqrV/65xYnx8nSj5pPbfRKub7+pfV61
60G16ztX923Q13vvZfxsoV2V6vZqWD6a/HPK7/SwZ5Kf8PZVFD8tnF2fjKv5
RsaCeCq6q+VHLbzTacbPE97ISMmAM3Vu/QOHu+J+wi1+oz4v4jFnnHBj9An6
Ta56cXv9dfY4ztZfHcT6a4hYf3mK9VeDfOuvW8/4OZpW8cfVivnucKCFgo5t
Snn51zh66dDUj3atzKLk2oqX/lHx7gcU51bHO40y67c+kUAW/3N9+9SxUVhQ
y2Kbouxwgzi3foMb22XvZ73i4ZYHV49Lq+vhcFf0IeLEeDnnQavPp/R6fXf2
+HMvFFpVfrSF9ld6cLThnAQq27juvJvxWeQp/GgVxUcL51bHjufmb57Ww0rH
x7wTe2u2japv6ZrXy8sOh//DufUtnKfL3m96xSlLHhAPT0d+zJlPWe6rZnO9
8q/2ebX6fEqvvr2T06nkdC8Leaz6dMf5ulbKDIyd2iI3i04Ib7pa8Q7LFefW
Jw3/ODDt08+sNO2s75Tlm200sUz1qV/UtsPh/8q59TncGPcTbvHL/rx65VOv
62V3s41X9jyjXubsc1ni1+p1J7B5yA9137FQ4Iv2ZismWOnjptMO1nyURe8J
31pJ8QvCueWh6Z9Tl3bbZKVErwcpp/fZaHtgsN+iMnY4nIVzmy9wfe8n3OJ3
9fNyq69e+ecWJ5ynm61/ZB+v7PFzy48s+dTqdfYLn/TMGz0tNL2yb0TqSivt
C7c+ulH0Jg0Tvrqq4m7HFOeWhy237Gs77rTS9JGr/zPriI3qFOtSq2VhOxxu
KOc274zqstdLr3i45cFs+TdqnLI78lww92Fu8ZvNXV0X9AOc833m4Z2Pm4/z
tFDmvmlNojZaKSqx17JpJW7SBeF3flS8/lXFueUBDofD4XAZvYs4pylSnNNU
UZzT1Fmc09RUnNM0S5zT9II4p2mjOKepiTinqZk4p8lWVzmnyS3fOU3+4pym
mwV0TpOz85is+fbZ/rWA9tn2Fvtp54r9tHeL/bQHiP3cnhP7uc0U+7k5c7X7
GKj93Y3a76ep/Txlq3h/OAPrESl8Um7nGe8ttlDliiviYqrHU/Xn/SaPCs6C
F5Bz6wc43BX3DW7x65UfxGOMcRk1nxgv8gw3Tx1dHWeuWLdeFuvWY2LdSmJ9
GiHWp6+I9WmDfOvQyWId2kSsN61ivfmtWG+6el3pLD8xO98pUmVbLM3uUmNT
v5WnqPB9z8C4wRm0+XvFD/RQvOSfinOru1pv+V6d3S9GWajh5DlBObsTaUS9
WV13lrgJZ+rc+gduTpe9n10djyx54JZPo+YHztPRb3I56vVsrvZzQ2efA2q1
LlNbR61eT6vdKndu67oYSu5ZLO+VXudo3N4Ea1InB4UIf95T8b/2KM6tjmp9
1dIGuZ7Nosm3d2PvwX5JNGjFlvhTv2TBDe7c+hAul8veb66Ok1seuMWDcSE/
RnJueeYWD9wY9fLItx6cpPPndGrzpvb655fO69zmjRhq1paCxkZG0n+GRY1r
uMlBwcI7t1G8uHBu9VLrjitHz+wcEE3xHQM79XFPJs83htb3t2fB4f9wbn0L
N8Z9g1v8euWHW331yqfZ8satb+HIv4xutrq4+vM4V+df7fWd1u46sKRwDDkS
m4f+8NF52mFbn3f5nIMswn+zKt5YOLd6qfUbtW5W+mBkNL01+eKF0nOTqfDQ
zWfup2bB4S5xbv0P1/e+wS1+WR7fqI68wdFXcNSRZ3647buidrxqrx8YvS5t
1K1oanUi0jt0/3nq9q73/W5XHZQqvFuE4pb+inPrB7W+oPjR6Nyx0TSo6Zq8
9zcn09KNNYJ/v54Fh7N2bvPIbI56PVt+EI8xxmXUfMriyD/yZmbHfY9n/ttm
Txw/3hZNw7pcyzgSd57uTztZv8INB0UJH95J8XnCuY1LrV9M8PRKGxdNo2Yu
61B+XzK125C7oNzfeYDDjeTc5p3sLntdXB0Pt/HKkk/kzdjzwmyO+4w5HXWH
w/nPO6fXDyqZPSY1mkoFX1xaOe08+dTymRRoc9AI4cVDFE8Uzi0PcDgcDofL
6GY7ty4+37l1ueLcukvi3LrFAcq5dcM1PrfOS5xbd1ucW7fnCefWqT2HztX7
Rjrbn7+F2O+xQb79Hp252n3M1P4eWe3vLNR+P+fx+9jh4n1s+3x/dx2Rz7nN
d/iz+cnKVc8GB8aQfWh7h/uMczRhwr3PevdxwDV2bnWHG9uN2s+ujkeWPLg6
b7KPl5sjn/rmAfk3Zx7Ujlftek3t+svZOsvVr+POHv/nLT5BtzITqF+r9h+V
+i6cBu34yWPHaBt1ClW8bkvFy4Uqzq2+evnZ29tiXu8RTZNsiR2+youi6cW6
+58enQln6tz6B87Tjdpvro6TWx4Qj1yuVX6QZ575kf3+aVTnNu+etM5qJdZZ
z2m8znJ13673sR6NbB1PsUNW7I4vcYwOXF12cEpNO/3mq/h2H8U/uqI4tz7R
y4ND9y2cUjSaHh4+3bJImct0eNnRkd0PZsIN4tz6DW6Mec1tXHrljVvdtcqb
UfOgV7+ZLW/c+pbbuLi5LHlTG6erPz/S6/VldNztoDln4yj80oM1TctGUP+5
P2WeHG6nmgmKjz2heNxsxbnVUS/fmz57/J6/LPTntJz0dUUttNJ/x3LrxUw4
/B/OrW/h+s5rbuOS5fFlceQB+Tdz/EYdl+zx65UHtdfrtZ7S6v2As8f5c2lo
ypkdcRRwaHmRDrERtOTEf2pcmmmnXoGKl9yt+IfHFedWd7187Ng7Vfrcs5Bj
7chCmydbKK5HTgNvayYc7hLn1v9GddRL27xxi9NseeAWj9nygPxre7/lFr9R
3dX516rueq2/XD2uwBHb9i7fEEd9Z1R+O7LicapUrVuNUQvsNHmk4tWnKt67
quLc+kcv92pWzOG4Y6HfjiUOD91qoVF5xeqvTsqEw1k4t/kiixu1Lq6Oh9t4
9RoX8sBznnLLJzfXqs+Rf571MlsdtRrX2p/rtayxLo7CbBHN27ofp2XnN5R6
dZGdSv+ieK10xd2Fc8uDXh5y46Xc+N8s9Fa1Oz2+OmyhvMwEv5kpmXC4oZzb
vJNlXssyLlkeH/HAkWd584O6ID9mHi8cbiTX6v2wW7svP9i1No7GuyUE3258
nJYNGtyu7RI7Vemh+BR7/P95jT6Kc8sDHA6Hw+GcXa9zuI6Jc7hqiXO41up8
DtdFcQ7XogDlHK4RGp/D5S3O4coV53DtNvg5XLLs0652/8DH+2zcE/tsHMq3
/0Z+3yd+L3Zb/F5sufi9mDN//D3GNPE9xth832/M72o/75P979XwgvF6L/ue
Hlo/nkJeuTe2Wtlj1DL53YQz7nZ4ATm3foDL5bL3myxxYrxwGeuOfjNGftTG
Kcu44DzrpXadq3bd+ngd2uop16Gu7v/Ne5cXynO/SnkZE8tUzQ2jI+Nvty9T
JJ2+yeeHhHPrH1k8runsF263iaMaHp+nR848QbM6V6LYq3Y4U+fWP3BjzF9u
8Rv1eWUfl1Hzxi0/yDPqCOdTR71c6/Xdv/2cUW0+1V6/89Av8+bVSaTuXySk
rfUIp8bFZgW8OiXdqXOrlyzub92Svi0nlrbfWjFi7cqT5Bb1x7VjNTLgBndu
fQjXd/5yi59bnuFwzm7UeWTUcSE/5hyXLHnTa12p1bjUXh+1epd10tErNGJj
TY8ZHcNp+3ifeQc3ptOFfP6tcG51l8WPtXaLLBkVS/du9b57oOQpirhwqGdm
mww4/KmcWz+bzVEvuBkc/SxX3lAvnvVFXYzhrq6j2sd3tg5dJ9ah7cQ69JHO
v6PUar50DRj94dnlV2jMpbgJPXqFU+Cl/XtT9qU7dW79I4un+R0b2DIslo6e
fxD7fbtTFBwSMOBUtww43CXOrf9ld9nrwi0e2R35NHbeZJnXRnVX5xn1NYZr
VS+1jyPLvjpqx+Xserd2eW9VmnOFBoycH/N133CaeL3iu72Ppjt1bnmQxd39
z/6+/r+xtK9FYnTngafINzwvbl7vDDictXObR7LMX1ni5xYnxguX0dFv5syP
UceF/MD/TR3VXt/i0Mif+ky+Qi/2/O/Bpf3D6VBpj+puEek0dofi1fsovtVN
cW75kcW33dncOnRfLDXt8lrzhGGnaKmH3atc3ww43FDObd5xm7/c4jfq82Jc
xnat8o86Grv/Zbk/w43Rb3A4HK7VfUzt9b8Nv9DW9+Mr9NrS0Ngx74bT5w9n
vRpxPJ1ynTi3/MDhcDgcztllOU/TS5yneVucp7kH52myPk+zoM4Nedrv2To7
B+RJ+9VXFz5T+JP2OdyWz5+0f8XdfP6k758fyedqv1eGvyPBC9KjO5Yod7BK
In17/3jo/zQKpxXDguZ5zEyHa+zc6g43xvziNi698sat7q7Om+x5wHiN4agL
TzdbXZyt+5yt7x6v18Kecr2mdv2lNv9qr990xrfejlrJNDc+oUHtBWEUv9vt
xWMN0ujCKcVtwjfsUZxbvczmRR926fhJkpUuRDf6NGdKOEW5db5Xs5ANztS5
9Q9c3/nFbVyyPD4cbgbHPDKGo4488/akdVz+z+O0WsdpNV611++qPZ/KLUii
F44vCy68PYxmLsqyHPo4jZJrKj5T+NuLFefWD2ZzvwoPV3f3sdJD+5mlO1eE
08U22dS6hQ1ucOfWh0Z11EvbvCEeno78IP8yOvJmDNerjlo9r6s/19MrD0k7
fTJzOyXRTs9B62/sD6M5NdrdOb04jby+V/y5norXfkVxbn1lNn/7sw93V61v
pdix9+av/SqcRjd48cDk3jY4/B/OrW9lcaPWxdXxcBsvxmXsPHCLR3bH/cGc
Lkvdua2z1I5L7fWnMtzuJrkn0dqyk760Hg6jHpX67fZdk0Zb7IpbhZ8Vzq2v
zOZzjvhOfrOclUoG/FT6yqZwCljVes9ubxsc7hLn1v+yzC9ZxiXL48seDxzO
wTEvjOGoo7bO7XM0tfVVe71P8RXeWdWTaF0Ve/L0sDD6sesHDf1D0mhnIcWT
qiper4fi3OplNi9c0jFzZREr7VjaoGGjreG0pm+Tr8jHBoezcG7zhdv84jYu
vfLGre565c2ojryZM5+yxGk2R10KJm9qr68TGpO0tkoSLfh6ybgt4WHk655a
K3J9GqV8q3iQ8E+Ec8uP2dx7UvvVF/MSaPrDIiPbfBNOjleXTPEcaoPDDeWy
zy9Z7huyPL7s8cgep+x5QJ5RLzjqAofD4UZ1tfdntddPH/LQ0bxSEnX2urfQ
/VgYnVxRdvmlr9Pono/iw4T/IZxbfuBwOBwO5+w4BxDnABbkOYCynPugdr9x
P5X72jn73WIH4THCRwlX+3sctd9Tkv1zBzgcDofD4a5zte9n1L4/8cr3fiMD
7zfgcDgcDocL1+r9Bv6+AYfD4XA4XK3j7xtwOBwOh8P1cvx9Aw6Hw+FwuF6O
9xtwOBwOh8PhcDgcDofD4dr6/wJ7u0kC
     "]], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Sleeping Time\"", TraditionalForm], 
    FormBox["\"Reward Value\"", TraditionalForm]},
  AxesOrigin->{0., 0.},
  AxesStyle->{{
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.01]}, {
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.01]}},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1082.5324675324666`, Automatic},
  LabelStyle->{
    Directive[
     GrayLevel[0], 13, 
     Thickness[Large]]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Reward Function for Sleeping\"", TraditionalForm],
  PlotRange->{{-2, 17}, {0, 5.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{{{-2, 
      FormBox["\"22:00\"", TraditionalForm]}, {-1, 
      FormBox["\"23:00\"", TraditionalForm]}, {0, 
      FormBox["\"0:00\"", TraditionalForm]}, {1, 
      FormBox["\"1:00\"", TraditionalForm]}, {2, 
      FormBox["\"2:00\"", TraditionalForm]}, {3, 
      FormBox["\"3:00\"", TraditionalForm]}, {4, 
      FormBox["\"4:00\"", TraditionalForm]}, {5, 
      FormBox["\"5:00\"", TraditionalForm]}, {6, 
      FormBox["\"6:00\"", TraditionalForm]}, {7, 
      FormBox["\"7:00\"", TraditionalForm]}, {8, 
      FormBox["\"8:00\"", TraditionalForm]}, {9, 
      FormBox["\"9:00\"", TraditionalForm]}, {10, 
      FormBox["\"10:00\"", TraditionalForm]}, {11, 
      FormBox["\"11:00\"", TraditionalForm]}, {12, 
      FormBox["\"12:00\"", TraditionalForm]}, {13, 
      FormBox["\"13:00\"", TraditionalForm]}, {14, 
      FormBox["\"14:00\"", TraditionalForm]}, {15, 
      FormBox["\"15:00\"", TraditionalForm]}, {16, 
      FormBox["\"16:00\"", TraditionalForm]}, {17, 
      FormBox["\"17:00\"", TraditionalForm]}}, Automatic},
  TicksStyle->Directive[
    GrayLevel[0]]]], "Output",
 CellChangeTimes->{
  3.7890151777501955`*^9, 3.789015270335402*^9, {3.789015535242151*^9, 
   3.789015575692712*^9}, 3.789055049614135*^9, {3.7890552257656045`*^9, 
   3.7890552862920647`*^9}, 3.789055344714436*^9, {3.7890564391612415`*^9, 
   3.7890565146878085`*^9}, {3.7890565598243837`*^9, 3.789056583053692*^9}, 
   3.7890567444326286`*^9, 3.7890568491224723`*^9, {3.7890642314681573`*^9, 
   3.7890642553364086`*^9}, 3.789064346078126*^9, 3.789064633308304*^9, 
   3.789064683412485*^9, 3.7890647255008616`*^9},
 CellLabel->
  "Out[883]=",ExpressionUUID->"5d81532f-99bf-4656-a300-66d3540d4e2e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"strict", "[", 
    RowBox[{"strictness_", ",", "prod_", ",", "enjoy_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"strictness", "*", "prod"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "strictness"}], ")"}], "*", "enjoy"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7890589110524793`*^9, 3.789058991787248*^9}, {
  3.7890635901378374`*^9, 3.789063667414628*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6af79459-1066-4ec0-9b6d-40d97cdd3ccd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"strict", "[", 
             RowBox[{
              RowBox[{"#", "/", "4"}], ",", "8", ",", "4"}], "]"}], ",", 
            RowBox[{"14", "\[LessEqual]", "x", "\[LessEqual]", "16"}]}], 
           "}"}], "}"}], "]"}], "&"}], ",", "5", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "12", ",", "18"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "12"}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "12"}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"11.75", ",", "18.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "9"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"12", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Reward Value\>\""}], "}"}]}], ",", 
     " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Reward function for fixed-time tasks\>\""}],
      ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "13", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<:00\>\""}]}], 
            "}"}], "&"}], ",", "7", ",", "12"}], "]"}], ",", "Automatic"}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"14", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "8"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "8"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"#", "/", "4"}], ",", "2"}], "]"}], "]"}], ",", "12"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"16.5", ",", 
           RowBox[{"4", "+", "#"}]}], "}"}]}], "]"}], "]"}], "&"}], ",", "5", 
     ",", "0"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Strictness\>\"", ",", "13"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"16.5", ",", "8.75"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Productivity = 8\>\"", ",", "12"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"13.2", ",", "8"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Enjoyment = 4\>\"", ",", " ", "12"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"13.2", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7890636742254744`*^9, 3.7890641667163925`*^9}, {
  3.7890653825460773`*^9, 3.7890658070528035`*^9}, {3.789065838230508*^9, 
  3.78906583976505*^9}, {3.7890658716668987`*^9, 3.7890659114419107`*^9}, {
  3.789065944804493*^9, 3.7890660971986527`*^9}, {3.7890756025243235`*^9, 
  3.7890756656299915`*^9}, {3.7891541656199303`*^9, 3.7891541701481*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"c8ed6e9a-83f2-4aca-ba17-c8d6a7014db9"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], 
         LineBox[{1, 111, 95, 80, 69, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          12, 13, 14, 15, 16, 112, 96, 81, 70, 60, 52, 116, 100, 85, 74, 65, 
          17, 113, 97, 82, 71, 121, 105, 91, 61, 118, 102, 126, 88, 123, 108},
          VertexColors->Automatic], 
         LineBox[{77, 93, 53, 66, 18, 54, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
          28, 29, 30, 31, 32, 55, 33, 62, 56, 86, 75, 106, 92},
          VertexColors->Automatic], 
         LineBox[{109, 127, 67, 119, 103, 89, 78, 34, 114, 98, 83, 72, 63, 57,
           35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 115, 
          99, 84, 73, 64, 58, 117, 101, 87, 76, 68, 120, 104, 90, 79, 122, 
          107, 94, 125, 110, 128, 50},
          VertexColors->Automatic], 
         LineBox[{134, 244, 228, 213, 202, 192, 184, 135, 136, 137, 138, 139, 
          140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 245, 229, 214, 
          203, 193, 185, 249, 233, 218, 207, 198, 150, 246, 230, 215, 204, 
          254, 238, 224, 194, 251, 235, 259, 221, 256, 241},
          VertexColors->Automatic], 
         LineBox[{210, 226, 186, 199, 151, 187, 152, 153, 154, 155, 156, 157, 
          158, 159, 160, 161, 162, 163, 164, 165, 188, 166, 195, 189, 219, 
          208, 239, 225},
          VertexColors->Automatic], 
         LineBox[{242, 260, 200, 252, 236, 222, 211, 167, 247, 231, 216, 205, 
          196, 190, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 
          179, 180, 181, 182, 248, 232, 217, 206, 197, 191, 250, 234, 220, 
          209, 201, 253, 237, 223, 212, 255, 240, 227, 258, 243, 261, 183},
          VertexColors->Automatic], 
         LineBox[{267, 377, 361, 346, 335, 325, 317, 268, 269, 270, 271, 272, 
          273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 378, 362, 347, 
          336, 326, 318, 382, 366, 351, 340, 331, 283, 379, 363, 348, 337, 
          387, 371, 357, 327, 384, 368, 392, 354, 389, 374},
          VertexColors->Automatic], 
         LineBox[{343, 359, 319, 332, 284, 320, 285, 286, 287, 288, 289, 290, 
          291, 292, 293, 294, 295, 296, 297, 298, 321, 299, 328, 322, 352, 
          341, 372, 358},
          VertexColors->Automatic], 
         LineBox[{375, 393, 333, 385, 369, 355, 344, 300, 380, 364, 349, 338, 
          329, 323, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 
          312, 313, 314, 315, 381, 365, 350, 339, 330, 324, 383, 367, 353, 
          342, 334, 386, 370, 356, 345, 388, 373, 360, 391, 376, 394, 316},
          VertexColors->Automatic], 
         LineBox[{400, 510, 494, 479, 468, 458, 450, 401, 402, 403, 404, 405, 
          406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 511, 495, 480, 
          469, 459, 451, 515, 499, 484, 473, 464, 416, 512, 496, 481, 470, 
          520, 504, 490, 460, 517, 501, 525, 487, 522, 507},
          VertexColors->Automatic], 
         LineBox[{476, 492, 452, 465, 417, 453, 418, 419, 420, 421, 422, 423, 
          424, 425, 426, 427, 428, 429, 430, 431, 454, 432, 461, 455, 485, 
          474, 505, 491},
          VertexColors->Automatic], 
         LineBox[{508, 526, 466, 518, 502, 488, 477, 433, 513, 497, 482, 471, 
          462, 456, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 
          445, 446, 447, 448, 514, 498, 483, 472, 463, 457, 516, 500, 486, 
          475, 467, 519, 503, 489, 478, 521, 506, 493, 524, 509, 527, 449},
          VertexColors->Automatic], 
         LineBox[{533, 643, 627, 612, 601, 591, 583, 534, 535, 536, 537, 538, 
          539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 644, 628, 613, 
          602, 592, 584, 648, 632, 617, 606, 597, 549, 645, 629, 614, 603, 
          653, 637, 623, 593, 650, 634, 658, 620, 655, 640},
          VertexColors->Automatic], 
         LineBox[{609, 625, 585, 598, 550, 586, 551, 552, 553, 554, 555, 556, 
          557, 558, 559, 560, 561, 562, 563, 564, 587, 565, 594, 588, 618, 
          607, 638, 624},
          VertexColors->Automatic], 
         LineBox[{641, 659, 599, 651, 635, 621, 610, 566, 646, 630, 615, 604, 
          595, 589, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 
          578, 579, 580, 581, 647, 631, 616, 605, 596, 590, 649, 633, 619, 
          608, 600, 652, 636, 622, 611, 654, 639, 626, 657, 642, 660, 582},
          VertexColors->Automatic]},
        Annotation[#, "Charting`Private`Tag$18798#1"]& ], {}}, {{}, {}, {}}},
     VertexColors->CompressedData["
1:eJzt20tIVGEUB/DB0LFAgxAJqfA1BIkVaK2UgyE+SuxBCyEqsiJdlBXqpqJy
wFr4QGzREBLZosRSF8Jgk2aM4Cwiplyo+UidcaY7Zg8KoaJM5rS929v/wNnc
C7/F4Zz/953ll1ZZc+RsjM1mc6191q39v5Y8z+vImqW9vZEnyRMeCqy2PD40
M0fq/9enPXHXjPNzVFCSvPvmsTAdXbxSlJ47rW6Ro90Hdcw9QptLSn0puWkO
mHuKlieaa26yXMp5mfXpeNnblhn/hkZs6703HO/p7nJ62eEeg6pS+qJ+f5Z9
8yN2tLnU2b/8TnjX3RqiiYHqnHJvmPa491U0O8bULXK0+6COuUdoc0mpLyU3
zQFzT9HyRHPNTZZLOS+zPqkqsTT7zhh5Thzw2QcXyOv/Y6/oDlPBAnvuU/a+
c+xoc6mzX3euRAIPlujTcefQ9/pF8rv6u54Vv1a3yNHugzrmHqHNJaW+lNw0
B8w9RcsTzTU3WS7lvMz6vLXT3Z+yaZy2TZ4q+/krSBfzjMKGriDVD7AX2yuj
brz9EHW0udTZ8xOdP7KCH2nj8unYFwkz9C2wKzvS7lO3yNHugzrmHqHNJaW+
lNw0B8w9RcsTzTU3WS7lvMz6bOzcEnu7YYp2nHTHN9WFaOXzhsKD++fpQsbW
qPtr2VMfsqPNpc4eeZWfebVmiTpd28eTfMM0eubSapsxrG6Ro90Hdcw9QptL
Sn0puWkOmHuKlieaa26yXMp5mfU5NcjvPpr+vfuYnOd3H2kh9svl7D332P8C
rrxcuw==
      "]], {}, {}}, LineBox[{{14, 0}, {14, 8}}], LineBox[{{16, 0}, {16, 8}}], 
   InsetBox[
    StyleBox["\<\"0\"\>",
     StripOnInput->False,
     FontSize->12], {16.5, 4}], InsetBox[
    StyleBox["\<\"0.25\"\>",
     StripOnInput->False,
     FontSize->12], {16.5, 5}], InsetBox[
    StyleBox["\<\"0.50\"\>",
     StripOnInput->False,
     FontSize->12], {16.5, 6}], InsetBox[
    StyleBox["\<\"0.75\"\>",
     StripOnInput->False,
     FontSize->12], {16.5, 7}], InsetBox[
    StyleBox["\<\"1.0\"\>",
     StripOnInput->False,
     FontSize->12], {16.5, 8}], InsetBox[
    StyleBox["\<\"Strictness\"\>",
     StripOnInput->False,
     FontSize->13], {16.5, 8.75}], InsetBox[
    StyleBox["\<\"Productivity = 8\"\>",
     StripOnInput->False,
     FontSize->12], {13.2, 8}], InsetBox[
    StyleBox["\<\"Enjoyment = 4\"\>",
     StripOnInput->False,
     FontSize->12], {13.2, 4}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Reward Value\"", TraditionalForm]},
  AxesOrigin->{12., 0.},
  AxesStyle->{{
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.02]}, {
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.02]}},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{566.8749999999862, Automatic},
  LabelStyle->Directive[
    GrayLevel[0], 13, 
    Thickness[Large]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Reward function for fixed-time tasks\"", TraditionalForm],
  PlotRange->{{11.75, 18.5}, {0, 9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{12, 
      FormBox["\"12:00\"", TraditionalForm]}, {13, 
      FormBox["\"13:00\"", TraditionalForm]}, {14, 
      FormBox["\"14:00\"", TraditionalForm]}, {15, 
      FormBox["\"15:00\"", TraditionalForm]}, {16, 
      FormBox["\"16:00\"", TraditionalForm]}, {17, 
      FormBox["\"17:00\"", TraditionalForm]}, {18, 
      FormBox["\"18:00\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.7890659761073403`*^9, 3.789066027682292*^9}, {
   3.7890660708777237`*^9, 3.78906609781884*^9}, {3.789075635714959*^9, 
   3.7890756662976027`*^9}, 3.7891541732040024`*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"b38c1299-71bf-4520-8c80-d3de573cddc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rwd", " ", "func", " ", "for", " ", "fixed"}], "-", 
    RowBox[{"ddl", " ", "tasks"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"findDDL", "[", 
      RowBox[{"x_", ",", "p1x_", ",", "p1y_", ",", "p2x_", ",", "p2y_"}], 
      "]"}], ":=", 
     RowBox[{"p1y", "+", "1", "-", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"p1y", "+", "1", "-", "p2y"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"p2x", "-", "p1x"}], ")"}]}], "*", 
        RowBox[{"(", 
         RowBox[{"x", "-", "p1x"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"appTime", "=", 
     RowBox[{"3", "*", "1.4"}]}], ";", 
    RowBox[{"ddl", "=", "10"}], ";", 
    RowBox[{"rwd", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"points", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "rwd"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"appTime", ",", 
         RowBox[{"rwd", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ddl", ",", 
         RowBox[{"rwd", "/", "5"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"findDDL", "[", 
               RowBox[{"x", ",", "0", ",", "rwd", ",", "appTime", ",", 
                RowBox[{"rwd", "/", "2"}]}], "]"}], ",", 
              RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "appTime"}]}],
              "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"findDDL", "[", 
               RowBox[{"x", ",", "appTime", ",", 
                RowBox[{"rwd", "/", "2"}], ",", "ddl", ",", 
                RowBox[{"rwd", "/", "5"}]}], "]"}], ",", 
              RowBox[{
              "appTime", "\[LessEqual]", "x", "\[LessEqual]", "ddl"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"x", "\[GreaterEqual]", "ddl"}]}], "}"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"findDDL", "[", 
               RowBox[{"x", ",", "0", ",", "rwd", ",", "ddl", ",", 
                RowBox[{"rwd", "/", "5"}]}], "]"}], ",", 
              RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "ddl"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"x", "\[GreaterEqual]", "ddl"}]}], "}"}]}], "}"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"ddl", "+", "2"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "11"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "5.5"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "12"}], "]"}], ",", 
            RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "12"}], "]"}], ",", 
            RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Reward function for fixed-deadline tasks\>\""}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time/hours\>\"", ",", "\"\<Reward Value\>\""}], "}"}]}],
        ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "13", ",", "Thick"}], "]"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
       RowBox[{"Ticks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{"#", "&"}], ",", "11", ",", "0"}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "\"\<\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "0.005"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "10", ",", "0.5"}], "}"}]}], 
             "]"}]}], "]"}], ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ddl", ",", 
            RowBox[{"rwd", "/", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ddl", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"VertexColors", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Purple"}], "}"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", 
             RowBox[{"findDDL", "[", 
              RowBox[{"3", ",", "0", ",", "rwd", ",", "appTime", ",", 
               RowBox[{"rwd", "/", "2"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"findDDL", "[", 
              RowBox[{"3", ",", "0", ",", "rwd", ",", "appTime", ",", 
               RowBox[{"rwd", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"appTime", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"appTime", ",", 
             RowBox[{"findDDL", "[", 
              RowBox[{"appTime", ",", "0", ",", "rwd", ",", "appTime", ",", 
               RowBox[{"rwd", "/", "2"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"findDDL", "[", 
              RowBox[{"appTime", ",", "0", ",", "rwd", ",", "appTime", ",", 
               RowBox[{"rwd", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
       "}"}], "]"}], ",", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"7.5", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7.5", ",", 
             RowBox[{"findDDL", "[", 
              RowBox[{"7.5", ",", "0", ",", "rwd", ",", "ddl", ",", 
               RowBox[{"rwd", "/", "5"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"findDDL", "[", 
              RowBox[{"7.5", ",", "0", ",", "rwd", ",", "ddl", ",", 
               RowBox[{"rwd", "/", "5"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"7.5", "*", "1.4"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"7.5", "*", "1.4"}], ",", "0.05"}], "}"}]}], "}"}], 
         "]"}]}], "}"}], "]"}], ",", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Expected duration: 7.5h\>\"", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"5.8", ",", "2.8"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Expected duration: 3h\>\"", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.5", ",", "3.7"}], "}"}]}], "]"}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7890656814031434`*^9, 3.789065688250639*^9}, {
  3.7890669327602253`*^9, 3.7890671125332212`*^9}, {3.7890671545743885`*^9, 
  3.7890675193505287`*^9}, {3.7890677894130125`*^9, 3.789068061301509*^9}, {
  3.7890693583603954`*^9, 3.7890693611164255`*^9}, {3.7890760570095725`*^9, 
  3.7890761359167566`*^9}, {3.789076189384506*^9, 3.789076298007823*^9}, {
  3.7890763371856937`*^9, 3.789076652074946*^9}, {3.789076735757951*^9, 
  3.789076736570306*^9}, {3.7890767926710925`*^9, 3.7890768267051387`*^9}, {
  3.7890768634841833`*^9, 3.789076942676292*^9}, {3.7890770246814127`*^9, 
  3.7890770799603033`*^9}, {3.789077153346943*^9, 3.789077204931258*^9}, {
  3.78907723523697*^9, 3.7890773057299213`*^9}, {3.7890773777456045`*^9, 
  3.789077475032214*^9}, {3.7894101498910465`*^9, 3.7894102117245755`*^9}},
 CellLabel->
  "In[646]:=",ExpressionUUID->"481e7513-6763-4566-8d0b-53873af53464"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
3Ib+D3mURKc=
     "], {{{}, {}, 
       TagBox[
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[{1, 138, 112, 90, 72, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
           12, 13, 14, 15, 16, 17, 139, 113, 91, 73, 60, 52, 146, 120, 98, 80,
           67, 153, 127, 105, 87, 18, 140, 114, 92, 160, 134, 74, 156, 130, 
          165, 108},
          VertexColors->Automatic], 
         LineBox[{162, 136, 167, 61, 151, 125, 103, 85, 53, 147, 121, 99, 81, 
          68, 19, 141, 115, 93, 75, 62, 54, 20, 21, 22, 23, 24, 25, 26, 27, 
          28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 142, 116, 94, 
          76, 63, 55, 148, 122, 100, 82, 69, 41, 143, 117, 95, 77, 64, 152, 
          126, 104, 86, 56, 149, 123, 101, 83, 157, 131, 109, 70, 154, 128, 
          164, 106, 161, 135, 166},
          VertexColors->Automatic], 
         LineBox[{88, 158, 132, 110, 42, 144, 118, 96, 78, 65, 57, 43, 44, 45,
           46, 47, 48, 49, 145, 119, 97, 79, 66, 58, 150, 124, 102, 84, 71, 
          155, 129, 107, 89, 159, 133, 111, 163, 137, 168, 50},
          VertexColors->Automatic]},
        Annotation[#, "Charting`Private`Tag$57847#1"]& ], 
       TagBox[
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwNzu8uwmEcxuFfzUZbxtoabTVlM44nZ+AAOLSKCuV/QkRIeh2bbBo21oat
XC+uPZ/7++rJrG1k10NBEKySY86Y5Ee/80KPPAU22aJIiTLb7LBLhSp77HPA
IUccc0KNU+qccc4FDS65osk1N7S45Y572jzQ4ZF5/53iV3/Q54mkW5SR/uKN
Lgm3CH/6k1cW7BlCDO1nUnqasf5mUceYYGCnvbMsE2aJOCv8A0ymNPQ=
          "],
          VertexColors->Automatic], 
         LineBox[{247, 291, 275, 261, 216, 282, 266, 252, 241, 233, 228, 217, 
          218, 219, 220, 221, 222, 223, 283, 267, 253, 242, 234, 229, 286, 
          270, 256, 245, 237, 289, 273, 259, 248, 292, 276, 262, 294, 278, 
          297, 224},
          VertexColors->Automatic]},
        Annotation[#, 
         "Charting`Private`Tag$57847#2"]& ], {}}, {{}, {}, {}, {}}},
     VertexColors->CompressedData["
1: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
b01a8B/2Y+ei3HUUyXgWpA41G7GKEKLRormI1IuL/LPZixl1eP3z4N9ZCWyw
e/otQ4W4YPowdqtkU2H5UuukhXQratfv7eZW/wd+2Bl1NEC+DikvYhcEHG6H
XUO1PSeJi1t9HtpZ+lS8lbYziyb7+4D+bdf8gentS52J1dfzoSLU517Lo2om
gtXfnMlnceErwNw4b4wC4YTJvJ+adJiGvVPt+42O/utU17DGYiq27nyVm9dE
B8uctu3z2H+Ip8edwO10CrSlh4bNaTQYizjeDfnNHiCtb0FqLcnflDvCpVbU
F2EZfWhkP68IqgUnDrHb62Dsuyy1JYWcFyPfUwYEuWAdENzwgdTdgTdl7GtX
tkJG3vV4bdWf+zk3cs2+A6p1uO7jdlTWqx2ZC1J0tyRwka2qamdjREXOtacZ
AXEMuIadEbjd/5u6rtn5usWPCs0pYo1tOxMF7CTxZCYX7S7pS0/9omDJo/Pp
Clvp4NnmFJX9RkcYeLz9wZKjYv98k6r8PjrKB7Y6Zn7/83ddLm/86y2bgt7b
1R1n+2lgKLcH2P5Gd8dIFSvfGaTgzuDGrS2ydKiwpN6LkTypJyZN52YTBd7p
Ca7ULzR4xc2oFpvz53uY6eysSeI4nYyrg+G2JFmqSwXKP5kHyZoR+B+NBwZS

      "]], {}, {}}, LineBox[{{10, 1}, {10, 0}},
    VertexColors->{
      RGBColor[0, 0, 1], 
      RGBColor[0.5, 0, 0.5]}], 
   {GrayLevel[0.5], 
    LineBox[{{3, 0}, {3, 3.5530785295232628`}, {0, 3.5530785295232628`}}]}, 
   {GrayLevel[0.5], 
    LineBox[{{4.199999999999999, 0}, {4.199999999999999, 2.5}, {0, 2.5}}]}, 
   {GrayLevel[0.5], 
    LineBox[{{7.5, 0}, {7.5, 2.6562984751178904`}, {
      0, 2.6562984751178904`}}]}, 
   {GrayLevel[0.5], LineBox[{{10.5, 0}, {10.5, 0.05}}]}, InsetBox[
    StyleBox["\<\"Expected duration: 7.5h\"\>",
     StripOnInput->False,
     FontSize->12], {5.8, 2.8}], InsetBox[
    StyleBox["\<\"Expected duration: 3h\"\>",
     StripOnInput->False,
     FontSize->12], {1.5, 3.7}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time/hours\"", TraditionalForm], 
    FormBox["\"Reward Value\"", TraditionalForm]},
  AxesOrigin->{0., 0.},
  AxesStyle->{{
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.02]}, {
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.02]}},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{784.9519230768917, Automatic},
  LabelStyle->Directive[
    GrayLevel[0], 13, 
    Thickness[Large]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Reward function for fixed-deadline tasks\"", TraditionalForm],
  PlotRange->{{0, 11}, {0, 5.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {0., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {0.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {1., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {1.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {2., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {2.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {3., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {3.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {4., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {4.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {5., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {5.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {6., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {6.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {7., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {7.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {8., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {8.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {9., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {9.5, 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}, {10., 
      FormBox["\"\"", TraditionalForm], {0, -0.005}}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.789067408387048*^9, {3.789067445085878*^9, 3.789067466181855*^9}, 
   3.7890675198665514`*^9, {3.7890677913874855`*^9, 3.7890678137759724`*^9}, {
   3.7890678536051455`*^9, 3.789067995913187*^9}, {3.789068041164959*^9, 
   3.7890680622686067`*^9}, 3.7890693623696847`*^9, {3.789076108255932*^9, 
   3.789076136435028*^9}, 3.7890761993119245`*^9, 3.789076261956212*^9, 
   3.7890764303372564`*^9, {3.7890765192935233`*^9, 3.789076561848019*^9}, {
   3.789076597482234*^9, 3.7890766225678988`*^9}, 3.7890767372083054`*^9, 
   3.7890768272698607`*^9, {3.7890768822138557`*^9, 3.789076943250086*^9}, 
   3.7890770806372485`*^9, {3.789077177271658*^9, 3.789077213151204*^9}, {
   3.789077299254225*^9, 3.789077306236454*^9}, {3.789077381123145*^9, 
   3.7890774755510015`*^9}, {3.789410198670349*^9, 3.7894102122141657`*^9}},
 CellLabel->
  "Out[649]=",ExpressionUUID->"860d518d-990b-45af-83ec-51ba41695b8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rwd", " ", "func", " ", "for", " ", "asap", " ", "tasks"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"asap", "[", 
      RowBox[{"x_", ",", "p1x_", ",", "p1y_", ",", "p2x_", ",", "p2y_"}], 
      "]"}], ":=", 
     RowBox[{"p1y", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Log", "[", 
           RowBox[{"p1y", "/", "p2y"}], "]"}]}], "/", 
         RowBox[{"(", 
          RowBox[{"p2x", "-", "p1x"}], ")"}]}], "*", 
        RowBox[{"(", 
         RowBox[{"x", "-", "p1x"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"appTime", "=", 
     RowBox[{"2", "*", "1.4"}]}], ";", 
    RowBox[{"rwd", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"asap", "[", 
        RowBox[{"x", ",", "0", ",", "rwd", ",", "appTime", ",", 
         RowBox[{"rwd", "/", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"appTime", "*", "5"}]}], "}"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Reward function for as-soon-as-possible tasks\>\""}], ",", " ", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", " ", "13", ",", " ", "Thick"}], "]"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time/hours\>\"", ",", " ", "\"\<Reward Value\>\""}], 
         "}"}]}], ",", " ", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "12"}], "]"}], ",", 
            RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "12"}], "]"}], ",", 
            RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "14"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"rwd", "+", "0.5"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"appTime", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"appTime", ",", 
             RowBox[{"rwd", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"rwd", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"asap", "[", 
              RowBox[{"2", ",", "0", ",", "rwd", ",", "appTime", ",", 
               RowBox[{"rwd", "/", "2"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"asap", "[", 
              RowBox[{"2", ",", "0", ",", "rwd", ",", "appTime", ",", 
               RowBox[{"rwd", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Expected duration: 2h\>\"", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.8", ",", "3.2"}], "}"}]}], "]"}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.789072548644969*^9, 3.789072607152834*^9}, {
  3.789072695807525*^9, 3.789072723460126*^9}, {3.78907275433444*^9, 
  3.789072765305396*^9}, {3.7890728083753567`*^9, 3.789072818603757*^9}, {
  3.7890728517953587`*^9, 3.7890730842544985`*^9}, {3.7890731359255795`*^9, 
  3.789073309009719*^9}, {3.7890761500097494`*^9, 3.7890761675498314`*^9}, {
  3.7890775408826447`*^9, 3.789077589888661*^9}, {3.789164491073803*^9, 
  3.78916449870702*^9}},
 CellLabel->
  "In[445]:=",ExpressionUUID->"9cf86a2d-9d78-4cf6-8d9d-03dadb7a850d"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJwVzH840wkcB/CZi8Id26Qdkma0+a6O5Crk86lY7SkrkixcIsrhonNKpaQ6
VvLjoUn1pGWeotRJV88T+qHvNB5qasI5vx0RaUfMop374/28n9fzvJ/30rCD
fhFUCoXiM5f/Wxp4+1E6L9fTNdLrvU7HwPibVdRASRPQxCEDm+7RccWKsoL7
O3qhVm591jWIhsRTddwJtw/gvD+AJXYxQ700ZfQWrRoKLZKbzgm+w5I8v9Xz
Hk7CaHbFJX0HE5Qkb7vRY/sFrJJMmJMCI3zakFgcPawDnnNO/Ymo+RhdzdU0
CqmouMpt51UYIDN1Z+zUyW/QKN7Jmf7jPOxLktw93G2A+p59odQ/9XF7Vx6I
mQswovSkdHUkFV0mYidivY0x+yrbQ+Kih64ewb+VSL/F9MGTvX9pddCmNuQn
Npti0nYB9XTXLAhj96m3WtOQu4Ej/vTkC/y89r7v5s10rB+bdTd7NQ27qjpF
JqEM/MoxazK20YCqdaHiWJY5KsqWZwRFTQLrDtFZUboQz8uclpeNToCOuXV3
focFJvnXsHN/GYf8DtGBfiMmHvMZcbOm/QsUEd9Ga/c96r/3i9nY8wk0sevc
Kv0t0Vnl/vxu8Bg8X8v46hVvhbrLn8O0/FHwDnm3Y026NfYEDZx2/ekDiCxl
pi0PF+PxI2/V6oND4Jm5/VfPJhs0nLzQ7VIzCG2Np6/d0rPFDSIvywNmAxBP
CWgYyLdF+j2/z0Vn+uFQ5iLhAvZSXKLaoi/m9YFbVGeqXtVS1I0b9TUoeyC6
MM+4U8DC8Pmt9ok3uiHp1PqQMRULQ71fCMytumDbH+N730Xboa/dM0I+/Ddc
cLv4WKqxQ2lC16rL+u2QS/Oo3ZDDRhXzWLd0URtQvd7YK5bYY5fF7vT+6BYQ
svYIU2/bY+8uUahLfzOE+ai59I0OqOGPXnANVEHn20Oi35UOOBJZt3dI9wZY
N6fdlVHL8EzgqqEEWRNsdDg8KKRwcIamqUzer4RGSv9AeQYHhQ+qlzXefAVL
OAEFw2wu7jNkKMaPNkBb6aNCwwoupvmajzVI6iG+zfSgyNMRg1K7E8PbFaD0
j1WnNDtii0cH94PlS7hEPH6ZEUbguVhF62yeHGSVUZM6HYFDBZWLKBQSRlae
dRVJnoOF7M10rT8Dr43T9vDLCdwqDk+R1ZLQI7C4EiQph+OXMsxLShh4xTQy
d0hMYHFWWEszTw7SlmrHolYCn7T3i0LDSGg4vCYyVCKF9dXFp4pVDLy8OHu5
eyKBfYrdUaWhcrj+zyA5QRK46fpAsHceCTfqcrN9Rwis13htm3Ca89vjM1GS
HGA9m3rPH2ZgAbtYGx5DIG+NyUryqBwKR2ZyFlcSaN8zlR9RNrdX3go52kug
kvVx0xUBCUU1J15wJgmM2RGwJZpJgs/5edxkySmwl+kn2H5mIPPWD3uP7CeQ
nuVu2JEmB5u4NI3zQwJrVvJW6T0mgeXvQmZ2ENjWmWCs3Tln/gLHdWoCLetm
ze6wSWDDRLD5FwJrl72YdjYhQaa1SC2SxMPV0bq4LC0DW4cS8qgRBGYlcuJi
MuXQWd5AVFXM/WXO9Pk+I6H34pEpZjuB6GSwnhc85zRhyMuPBOrlk/jakYT+
lLXZ1zQE3nnt98CHTsK+2bvcc7MECoItrJgGJPwH8wM8Tg==
     "], {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50},
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$40570#1"]& ]},
     VertexColors->CompressedData["
1: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
Qayr
      "]], {}, {}}, 
   {GrayLevel[0.5], 
    LineBox[NCache[{{2.8, 0}, {2.8, Rational[5, 2]}, {0, Rational[5, 2]}}, {{
       2.8, 0}, {2.8, 2.5}, {0, 2.5}}]]}, 
   {GrayLevel[0.5], 
    LineBox[{{2, 0}, {2, 3.0475341355111887`}, {0, 3.0475341355111887`}}]}, 
   InsetBox[
    StyleBox["\<\"Expected duration: 2h\"\>",
     StripOnInput->False,
     FontSize->12], {3.8, 3.2}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time/hours\"", TraditionalForm], 
    FormBox["\"Reward Value\"", TraditionalForm]},
  AxesOrigin->{0., 0.},
  AxesStyle->{{
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.02]}, {
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.02]}},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->{613.7499999999901, Automatic},
  LabelStyle->Directive[
    GrayLevel[0], 13, 
    Thickness[Large]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Reward function for as-soon-as-possible tasks\"", TraditionalForm],
  PlotRange->{{0, 14}, {0, 5.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7890730165472374`*^9, 3.789073085629675*^9, {3.789073181877944*^9, 
   3.7890733095111217`*^9}, 3.789076168045044*^9, {3.789077573563898*^9, 
   3.789077590323141*^9}, 3.7891645018255825`*^9},
 CellLabel->
  "Out[447]=",ExpressionUUID->"7c8522d6-d379-47ca-a2d9-027a3cc2c0fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rwd", " ", "func", " ", "for", " ", "fun", " ", "tasks"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"strict", "[", 
              RowBox[{
               RowBox[{"#", "/", "4"}], ",", "1", ",", "7"}], "]"}], ",", 
             RowBox[{"18", "\[LessEqual]", "x", "\[LessEqual]", "20"}]}], 
            "}"}], "}"}], "]"}], "&"}], ",", "5", ",", "0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "16", ",", "22"}], "}"}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "12"}], "]"}], ",", 
           RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "12"}], "]"}], ",", 
           RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15.75", ",", "22.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "8"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"16", ",", "0"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<Reward Value\>\""}], "}"}]}], ",", 
      " ", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Reward function for fun tasks\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "13", ",", "Thick"}], "]"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<:00\>\""}]}], 
             "}"}], "&"}], ",", "7", ",", "16"}], "]"}], ",", "Automatic"}], 
        "}"}]}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"ColorData", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Rainbow\>\"", ",", "\"\<Reverse\>\""}], "}"}], 
        "]"}]}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"20", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"20", ",", "7"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"18", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"18", ",", "7"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"#", "/", "4"}], ",", "2"}], "]"}], "]"}], ",", "12"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"20.5", ",", 
            RowBox[{"1", "+", 
             RowBox[{"1.5", "*", "#"}]}]}], "}"}]}], "]"}], "]"}], "&"}], ",",
       "5", ",", "0"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Strictness\>\"", ",", "13"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"20.5", ",", "7.5"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Productivity = 1\>\"", ",", "12"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"17.2", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Enjoyment = 7\>\"", ",", "12"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"17.2", ",", "7"}], "}"}]}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7890636742254744`*^9, 3.7890641667163925`*^9}, {
   3.7890653825460773`*^9, 3.7890658070528035`*^9}, {3.789065838230508*^9, 
   3.78906583976505*^9}, {3.7890658716668987`*^9, 3.7890659114419107`*^9}, {
   3.789065944804493*^9, 3.7890660971986527`*^9}, {3.789073809839348*^9, 
   3.789073834538762*^9}, {3.78907393741088*^9, 3.7890739932479744`*^9}, {
   3.78907423151578*^9, 3.7890746467446184`*^9}, {3.789075430743308*^9, 
   3.789075432472901*^9}, {3.78916229259655*^9, 3.7891623182677307`*^9}, 
   3.7891623584563503`*^9, {3.7891645048967333`*^9, 3.789164512188842*^9}},
 CellLabel->
  "In[448]:=",ExpressionUUID->"11c5aca1-4801-40ce-b79e-8e4823aa4227"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
9QTT+kEphE1rGW+2eaL17xM36b/IH0KU
     "], {{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], 
         LineBox[{1, 111, 95, 80, 69, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          12, 13, 14, 15, 16, 112, 96, 81, 70, 60, 52, 116, 100, 85, 74, 65, 
          17, 113, 97, 82, 71, 121, 105, 91, 61, 118, 102, 126, 88, 123, 108},
          VertexColors->Automatic], 
         LineBox[{77, 93, 53, 66, 18, 54, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
          28, 29, 30, 31, 32, 55, 33, 62, 56, 86, 75, 106, 92},
          VertexColors->Automatic], 
         LineBox[{109, 127, 67, 119, 103, 89, 78, 34, 114, 98, 83, 72, 63, 57,
           35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 115, 
          99, 84, 73, 64, 58, 117, 101, 87, 76, 68, 120, 104, 90, 79, 122, 
          107, 94, 125, 110, 128, 50},
          VertexColors->Automatic], 
         LineBox[{134, 244, 228, 213, 202, 192, 184, 135, 136, 137, 138, 139, 
          140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 245, 229, 214, 
          203, 193, 185, 249, 233, 218, 207, 198, 150, 246, 230, 215, 204, 
          254, 238, 224, 194, 251, 235, 259, 221, 256, 241},
          VertexColors->Automatic], 
         LineBox[{210, 226, 186, 199, 151, 187, 152, 153, 154, 155, 156, 157, 
          158, 159, 160, 161, 162, 163, 164, 165, 188, 166, 195, 189, 219, 
          208, 239, 225},
          VertexColors->Automatic], 
         LineBox[{242, 260, 200, 252, 236, 222, 211, 167, 247, 231, 216, 205, 
          196, 190, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 
          179, 180, 181, 182, 248, 232, 217, 206, 197, 191, 250, 234, 220, 
          209, 201, 253, 237, 223, 212, 255, 240, 227, 258, 243, 261, 183},
          VertexColors->Automatic], 
         LineBox[{267, 377, 361, 346, 335, 325, 317, 268, 269, 270, 271, 272, 
          273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 378, 362, 347, 
          336, 326, 318, 382, 366, 351, 340, 331, 283, 379, 363, 348, 337, 
          387, 371, 357, 327, 384, 368, 392, 354, 389, 374},
          VertexColors->Automatic], 
         LineBox[{343, 359, 319, 332, 284, 320, 285, 286, 287, 288, 289, 290, 
          291, 292, 293, 294, 295, 296, 297, 298, 321, 299, 328, 322, 352, 
          341, 372, 358},
          VertexColors->Automatic], 
         LineBox[{375, 393, 333, 385, 369, 355, 344, 300, 380, 364, 349, 338, 
          329, 323, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 
          312, 313, 314, 315, 381, 365, 350, 339, 330, 324, 383, 367, 353, 
          342, 334, 386, 370, 356, 345, 388, 373, 360, 391, 376, 394, 316},
          VertexColors->Automatic], 
         LineBox[{400, 510, 494, 479, 468, 458, 450, 401, 402, 403, 404, 405, 
          406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 511, 495, 480, 
          469, 459, 451, 515, 499, 484, 473, 464, 416, 512, 496, 481, 470, 
          520, 504, 490, 460, 517, 501, 525, 487, 522, 507},
          VertexColors->Automatic], 
         LineBox[{476, 492, 452, 465, 417, 453, 418, 419, 420, 421, 422, 423, 
          424, 425, 426, 427, 428, 429, 430, 431, 454, 432, 461, 455, 485, 
          474, 505, 491},
          VertexColors->Automatic], 
         LineBox[{508, 526, 466, 518, 502, 488, 477, 433, 513, 497, 482, 471, 
          462, 456, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 
          445, 446, 447, 448, 514, 498, 483, 472, 463, 457, 516, 500, 486, 
          475, 467, 519, 503, 489, 478, 521, 506, 493, 524, 509, 527, 449},
          VertexColors->Automatic], 
         LineBox[{533, 643, 627, 612, 601, 591, 583, 534, 535, 536, 537, 538, 
          539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 644, 628, 613, 
          602, 592, 584, 648, 632, 617, 606, 597, 549, 645, 629, 614, 603, 
          653, 637, 623, 593, 650, 634, 658, 620, 655, 640},
          VertexColors->Automatic], 
         LineBox[{609, 625, 585, 598, 550, 586, 551, 552, 553, 554, 555, 556, 
          557, 558, 559, 560, 561, 562, 563, 564, 587, 565, 594, 588, 618, 
          607, 638, 624},
          VertexColors->Automatic], 
         LineBox[{641, 659, 599, 651, 635, 621, 610, 566, 646, 630, 615, 604, 
          595, 589, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 
          578, 579, 580, 581, 647, 631, 616, 605, 596, 590, 649, 633, 619, 
          608, 600, 652, 636, 622, 611, 654, 639, 626, 657, 642, 660, 582},
          VertexColors->Automatic]},
        Annotation[#, "Charting`Private`Tag$40621#1"]& ], {}}, {{}, {}, {}}},
     VertexColors->CompressedData["
1:eJzt009IVHEQB/ClwlCIxHIVUSnX6BBWWi2Ez0bM3LJLdOhQh1g1rEOYBUns
hlanFv9kISm1iZ0ChQgSYoswcjEpaMult4jpaumy24rYQSkklfc7v+vrOzCX
9+BzGGa+85udNQ2nL2yw2Ww965+N6//Ep7JCb8MvetqzW9/+YYhG6hpXO+ND
JP5/ffH4G82/Z5KczxMD9shr+rHa/uzU96i4RY72HsQx7whtLi71ueQmOWDe
KVqeaC658XIu+zLr892WTTfjl6P02Z25/9a5GFWfuF1VcHCCdgRSDB9w2Q1v
insMR5tLXHn9H+3OyOEQ/Z2oLq7sGKfH5WEtOB8Xt8jR3oM45h2hzcWlPpfc
JAfMO0XLE80lN17OZV9mfRaN+WcD/bPkHI54FoMxKsmu0wdLw+R932t401vl
rQG34WhziSt/tTJcsS86TmlXykYf0RyttE+/6A1Oi1vkaO9BHPOO0ObiUp9L
bpID5p2i5Ynmkhsv57Ivsz6Xfuqt6ecTVPulu3CsZo52LR04m7Y5RNf6Iob3
u5S3NCpHm0tc+aE+n7/IHaMHC2d0R2eM2rpzHParX8UtcrT3II55R2hzcanP
JTfJAfNO0fJEc8mNl3PZl1mf13PuHa3QkzTTrPlebp2h1Ob6Y+HKj+TNVe74
XWp43jblaHOJK/+XUZIxOZWk0JHMweWLU5T15KGv7caouEWO9h7EMe8IbS4u
9bnkJjlg3ilanmguufFyLvsy6/Nb3smuS84k3Q3kuvZqYaot6PKU5wdpOVt5
lUf5/VTla3CcVWs=
      "]], {}, {}}, LineBox[{{20, 0}, {20, 7}}], LineBox[{{18, 0}, {18, 7}}], 
   InsetBox[
    StyleBox["\<\"0\"\>",
     StripOnInput->False,
     FontSize->12], {20.5, 1.}], InsetBox[
    StyleBox["\<\"0.25\"\>",
     StripOnInput->False,
     FontSize->12], {20.5, 2.5}], InsetBox[
    StyleBox["\<\"0.50\"\>",
     StripOnInput->False,
     FontSize->12], {20.5, 4.}], InsetBox[
    StyleBox["\<\"0.75\"\>",
     StripOnInput->False,
     FontSize->12], {20.5, 5.5}], InsetBox[
    StyleBox["\<\"1.0\"\>",
     StripOnInput->False,
     FontSize->12], {20.5, 7.}], InsetBox[
    StyleBox["\<\"Strictness\"\>",
     StripOnInput->False,
     FontSize->13], {20.5, 7.5}], InsetBox[
    StyleBox["\<\"Productivity = 1\"\>",
     StripOnInput->False,
     FontSize->12], {17.2, 1}], InsetBox[
    StyleBox["\<\"Enjoyment = 7\"\>",
     StripOnInput->False,
     FontSize->12], {17.2, 7}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Reward Value\"", TraditionalForm]},
  AxesOrigin->{16., 0.},
  AxesStyle->{{
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.02]}, {
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.02]}},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{646.2499999999912, Automatic},
  LabelStyle->Directive[
    GrayLevel[0], 13, 
    Thickness[Large]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Reward function for fun tasks\"", TraditionalForm],
  PlotRange->{{15.75, 22.5}, {0, 8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{16, 
      FormBox["\"16:00\"", TraditionalForm]}, {17, 
      FormBox["\"17:00\"", TraditionalForm]}, {18, 
      FormBox["\"18:00\"", TraditionalForm]}, {19, 
      FormBox["\"19:00\"", TraditionalForm]}, {20, 
      FormBox["\"20:00\"", TraditionalForm]}, {21, 
      FormBox["\"21:00\"", TraditionalForm]}, {22, 
      FormBox["\"22:00\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.7890742639803*^9, {3.789074343836776*^9, 3.789074389552137*^9}, {
   3.789074420572502*^9, 3.7890745434450307`*^9}, {3.789074610471344*^9, 
   3.78907461576925*^9}, 3.789074647662292*^9, 3.789075432853937*^9, {
   3.7891623048156505`*^9, 3.7891623189259806`*^9}, 3.7891623590641236`*^9, 
   3.789164513081636*^9},
 CellLabel->
  "Out[448]=",ExpressionUUID->"94d4910f-7325-4838-a993-d06d195d29d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rwd", " ", "func", " ", "for", " ", "long"}], "-", 
    RowBox[{"term", " ", "tasks"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"longTerm", "[", 
      RowBox[{"x_", ",", "lamda_", ",", "t_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"x", "*", "lamda"}], "+", "1"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "t"}], "*", 
          RowBox[{"5", "/", "1.5"}]}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"3", "*", 
          RowBox[{"longTerm", "[", 
           RowBox[{"x", ",", "lamda", ",", "t"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"lamda", ",", "0.7", ",", "0.9", ",", "0.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0.5", ",", "1.5", ",", "0.5"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "7"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "8.05"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "8.25"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Reward function for long-term tasks\>\""}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", " ", "13", ",", " ", "Thick"}], "]"}]}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "12"}], "]"}], ",", 
            RowBox[{"Arrowheads", "[", "0.01", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "12"}], "]"}], ",", 
            RowBox[{"Arrowheads", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Days\>\"", ",", "\"\<Reward Value\>\""}], "}"}]}], ",", 
       RowBox[{"Ticks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{"#", "&"}], ",", "7"}], "]"}], ",", "Automatic"}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<0.5h/d, \[Lambda]=0.7\>\"", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"7.55", ",", 
          RowBox[{"3", "*", 
           RowBox[{"longTerm", "[", 
            RowBox[{"7", ",", "0.7", ",", "0.5"}], "]"}]}]}], "}"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<1.0h/d, \[Lambda]=0.7\>\"", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"7.55", ",", 
          RowBox[{"3", "*", 
           RowBox[{"longTerm", "[", 
            RowBox[{"7", ",", "0.7", ",", "1"}], "]"}]}]}], "}"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<1.5h/d, \[Lambda]=0.7\>\"", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"7.55", ",", 
          RowBox[{"3", "*", 
           RowBox[{"longTerm", "[", 
            RowBox[{"7", ",", "0.7", ",", "1.5"}], "]"}]}]}], "}"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<0.5h/d, \[Lambda]=0.9\>\"", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"7.55", ",", 
          RowBox[{"3", "*", 
           RowBox[{"longTerm", "[", 
            RowBox[{"7", ",", "0.9", ",", "0.5"}], "]"}]}]}], "}"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<1.0h/d, \[Lambda]=0.9\>\"", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"7.55", ",", 
          RowBox[{"3", "*", 
           RowBox[{"longTerm", "[", 
            RowBox[{"7", ",", "0.9", ",", "1"}], "]"}]}]}], "}"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<1.5h/d, \[Lambda]=0.9\>\"", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"7.55", ",", 
          RowBox[{"3", "*", 
           RowBox[{"longTerm", "[", 
            RowBox[{"7", ",", "0.9", ",", "1.5"}], "]"}]}]}], "}"}]}], "]"}], 
      "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7890800533354053`*^9, 3.789080121203435*^9}, {
   3.789154260189543*^9, 3.789154395393017*^9}, {3.7891544929694448`*^9, 
   3.7891545063435144`*^9}, {3.7891545519605856`*^9, 
   3.7891548383209033`*^9}, {3.789161918741902*^9, 3.789161923326665*^9}, {
   3.78916198603714*^9, 3.7891620956883073`*^9}, {3.7891622741449146`*^9, 
   3.789162281535822*^9}, 3.7891623768213305`*^9, {3.789162434604765*^9, 
   3.789162469900902*^9}, {3.7891628338310237`*^9, 3.7891629076522226`*^9}, {
   3.7891630934153957`*^9, 3.7891632140149155`*^9}, {3.789163250388122*^9, 
   3.789163278390806*^9}, {3.789163313001762*^9, 3.7891633304713*^9}, {
   3.7891633778154044`*^9, 3.7891639783582253`*^9}, {3.7891640297984624`*^9, 
   3.7891641868355865`*^9}, {3.789164235855275*^9, 3.789164351143283*^9}, {
   3.789164516229889*^9, 3.789164523429909*^9}},
 CellLabel->
  "In[449]:=",ExpressionUUID->"c6ac506a-d5e0-4dbb-af1c-899a10c39409"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
t9mc/Zc8m04X2HeCxkL/AyWYeuw=
     "], {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50},
         VertexColors->Automatic], 
        LineBox[{78, 148, 142, 137, 133, 130, 128, 79, 80, 81, 82, 83, 84, 85,
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 149, 143, 
         138, 134, 131, 129, 150, 144, 139, 135, 132, 151, 145, 140, 136, 152,
          146, 141, 153, 147, 154, 127},
         VertexColors->Automatic], 
        LineBox[{155, 225, 219, 214, 210, 207, 205, 156, 157, 158, 159, 160, 
         161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
          175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 
         188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
          202, 203, 226, 220, 215, 211, 208, 206, 227, 221, 216, 212, 209, 
         228, 222, 217, 213, 229, 223, 218, 230, 224, 231, 204},
         VertexColors->Automatic], LineBox[CompressedData["
1:eJwNzNlWgQEAhdFfkTJrkKLB0FwIr9GNR/AA9dooJZKpwb7YF986a51S96Xz
HAqC4IkeNXFNhTOKHNO3DXjljSHvfDDikzETvpjyzYw5C5as+OGXP/4J/IfY
YJMwEbaIss0OMeIkSJIiTYYsu+yxzwE5DslT54Yq55xQoMEtF5Q45ZE7LinT
5J4rWjzQ5og16U8ebA==
         "],
         VertexColors->Automatic], LineBox[CompressedData["
1:eJwV0NlWQQEAQNHbp/iIBhGRMVQ0KUNRoiRkqBTlz9se9lrn+YTaw8rbVhAE
JbbFNzNGvPJMlx122SPMPhGiHBAjziEJkhyRIk2GLDnyHFOgSIkTTjmjTIVz
Lrjkimuq3HBLjToNmtxxT4s2DzzS4Yc5Ywa80GPJB+9sRvRZ8cmEIb98MeWP
BWue+Ae0Ix2t
         "],
         VertexColors->Automatic], LineBox[CompressedData["
1:eJwNxls2QgEAAMBrKS2oH0toAdlDIakkCuVRpKiQSHklJUliTeZjzplQZGU5
uhQEQZiYzBgz4IkeXeKsssY6CTZIskmKNBm2yLJNjh12yVNgj30OKFLikCOO
OaFMhVPOqHJOjToXXNKgSYsrrrmhzS0d7vjmgzee6fPAnAlDXnjkh0/eeWXB
lBG/fPHHPf/R8TTW
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$40703#1"]& ]},
     VertexColors->CompressedData["
1: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
Vlvt
      "]], {}, {}}, InsetBox[
    StyleBox["\<\"0.5h/d, \[Lambda]=0.7\"\>",
     StripOnInput->False,
     FontSize->12], {7.55, 5.9106429451786395}], InsetBox[
    StyleBox["\<\"1.0h/d, \[Lambda]=0.7\"\>",
     StripOnInput->False,
     FontSize->12], {7.55, 7.027019194606837}], InsetBox[
    StyleBox["\<\"1.5h/d, \[Lambda]=0.7\"\>",
     StripOnInput->False,
     FontSize->12], {7.55, 7.2378754317111245}], InsetBox[
    StyleBox["\<\"0.5h/d, \[Lambda]=0.9\"\>",
     StripOnInput->False,
     FontSize->12], {7.55, 6.57461231937358}], InsetBox[
    StyleBox["\<\"1.0h/d, \[Lambda]=0.9\"\>",
     StripOnInput->False,
     FontSize->12], {7.55, 7.816396184618526}], InsetBox[
    StyleBox["\<\"1.5h/d, \[Lambda]=0.9\"\>",
     StripOnInput->False,
     FontSize->12], {7.55, 8.050938860760622}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Days\"", TraditionalForm], 
    FormBox["\"Reward Value\"", TraditionalForm]},
  AxesOrigin->{0., 2.},
  AxesStyle->{{
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.01]}, {
     Directive[
      GrayLevel[0], 12], 
     Arrowheads[0.01]}},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{703.124999999979, Automatic},
  LabelStyle->Directive[
    GrayLevel[0], 13, 
    Thickness[Large]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Reward function for long-term tasks\"", TraditionalForm],
  PlotRange->{{0, 8.05}, {2, 8.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.789080089690164*^9, {3.789154270426753*^9, 3.7891543124457474`*^9}, {
   3.7891543475890417`*^9, 3.789154398174319*^9}, {3.7891544949772253`*^9, 
   3.7891545066874223`*^9}, {3.7891545908384376`*^9, 
   3.7891547337669764`*^9}, {3.78915477339082*^9, 3.7891548066294007`*^9}, 
   3.789154838882044*^9, 3.7891619237332954`*^9, 3.789161987822883*^9, {
   3.789162069099327*^9, 3.7891620963456197`*^9}, 3.7891622820289917`*^9, 
   3.7891623774324236`*^9, {3.7891624626124535`*^9, 3.7891624717539425`*^9}, {
   3.7891628461434774`*^9, 3.789162908059202*^9}, {3.789163171285203*^9, 
   3.7891632021306086`*^9}, {3.7891632546359596`*^9, 
   3.7891632787328587`*^9}, {3.7891633148708663`*^9, 
   3.7891633313236904`*^9}, {3.789163396395181*^9, 3.789163435126068*^9}, 
   3.7891634848509192`*^9, {3.789163593807749*^9, 3.789163655662941*^9}, {
   3.7891637547248893`*^9, 3.78916379412123*^9}, {3.7891638621593513`*^9, 
   3.7891639791258364`*^9}, {3.789164062821644*^9, 3.7891640867126694`*^9}, {
   3.789164117894291*^9, 3.789164187397027*^9}, {3.789164244896223*^9, 
   3.789164351587406*^9}, 3.7891645239747257`*^9},
 CellLabel->
  "Out[450]=",ExpressionUUID->"f7305f32-8be3-453e-8419-4f428e698f2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"func", " ", "for", " ", "neccesity"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"LogisticSigmoid", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"17", "-", "\[Alpha]"}], ")"}], "/", "\[Gamma]"}], "]"}], 
       "\[Equal]", "0.99"}], ",", 
      RowBox[{
       RowBox[{"LogisticSigmoid", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"18", "-", "\[Alpha]"}], ")"}], "/", "\[Gamma]"}], "]"}], 
       "\[Equal]", "0.01"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Gamma]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7893988314261203`*^9, 3.7893989119239445`*^9}, {
  3.789398974869427*^9, 3.7893989787861247`*^9}, {3.789399164881604*^9, 
  3.789399191402793*^9}, {3.78940933935962*^9, 3.7894093397578807`*^9}, {
  3.78941284565913*^9, 
  3.7894128530014772`*^9}},ExpressionUUID->"d788b1da-6571-4965-a52c-\
837a1fb16646"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "17.5`"}], ",", 
    RowBox[{"\[Gamma]", "\[Rule]", 
     RowBox[{"-", "0.10881109009275464`"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7893989131416826`*^9, 3.7893989796185756`*^9, {3.789399168646603*^9, 
   3.7893991919452825`*^9}, 3.7894093401521473`*^9},
 CellLabel->
  "Out[620]=",ExpressionUUID->"b36f5e4a-6823-476d-beda-af8a32b7eea0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rwd", " ", "func", " ", "for", " ", "neccesity", " ", "tasks"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{
         RowBox[{"LogisticSigmoid", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "16.5"}], ")"}], "/", "0.1088"}], "]"}], "+", 
         RowBox[{"LogisticSigmoid", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"18.5", "-", "x"}], ")"}], "/", "0.1088"}], "]"}], "-", 
         "1"}], " ", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"LogisticSigmoid", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", "17"}], ")"}], "/", "0.1088"}], "]"}], "+", 
           RowBox[{"LogisticSigmoid", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"18", "-", "x"}], ")"}], "/", "0.1088"}], "]"}], "-", 
           "1"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"LogisticSigmoid", "[", 
             RowBox[{"0.5", "/", "0.1088"}], "]"}]}], "-", "1"}], ")"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "15", ",", "20"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.05"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "12"}], "]"}], ",", 
           RowBox[{"Arrowheads", "[", "0.01", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "12"}], "]"}], ",", 
           RowBox[{"Arrowheads", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Reward function for necessity tasks\>\""}],
       ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "13", ",", "Thick"}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<Reward Value\>\""}], "}"}]}], ",", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{
                 RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<:00\>\""}]}],
                "}"}], "&"}], ",", "6", ",", "15"}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"t", ",", "\"\<\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "0.004"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "15", ",", "20", ",", "0.25"}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"t", "+", "0.5"}], ",", 
               RowBox[{
                RowBox[{"ToString", "[", "t", "]"}], "<>", "\"\<:30\>\""}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "15", ",", "19", ",", "1"}], "}"}]}], "]"}]}],
           "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"v", ",", 
               RowBox[{"ToString", "[", "v", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", "0.1", ",", "0.9", ",", "0.1"}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "\"\<1.0\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "\"\<0\>\""}], "}"}]}], "}"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"v", ",", "\"\<\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "0.0025"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], 
            "]"}]}], "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<No time suggestion\>\"", ",", 
           "\"\<Better during 17:00-18:00\>\"", ",", 
           "\"\<Better around 17:30\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.75", ",", "0.6"}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "]"}]}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"t", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "16.5", ",", "18.5", ",", "0.5"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Gray", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"17.5", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"17.5", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Gray", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"15", ",", "0.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"18.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7893989219992123`*^9, 3.789399064773243*^9}, {
  3.7893991771687593`*^9, 3.7893991978937225`*^9}, {3.7894092365837183`*^9, 
  3.789409240422082*^9}, {3.7894093032647343`*^9, 3.7894093068076468`*^9}, {
  3.7894093549052153`*^9, 3.7894095751806445`*^9}, {3.789409706940653*^9, 
  3.7894097503803825`*^9}, {3.789409933685052*^9, 3.7894100951877604`*^9}, {
  3.7894103027089033`*^9, 3.7894105498334084`*^9}, {3.789410605518868*^9, 
  3.789410670530987*^9}, {3.789410751892706*^9, 3.7894110971891737`*^9}, {
  3.789411129473167*^9, 3.78941125189402*^9}, {3.78941197367846*^9, 
  3.7894120604471254`*^9}, {3.7894121007262325`*^9, 3.7894121455678544`*^9}, {
  3.7894121761514883`*^9, 3.789412262844795*^9}, {3.789412305269911*^9, 
  3.78941259376649*^9}, {3.789412669511153*^9, 3.7894127227451735`*^9}},
 CellLabel->
  "In[714]:=",ExpressionUUID->"2b446158-1905-4039-87cd-adb806b8a47e"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrdiWw8zAoOfAAAYf7G8/Un8rL4ngT7V/fM3eCMHf
p5a3eWcGgv+r81zK9NkIvpa/5PLSswg+v1PFp15mfTiffeMaIS4zBH+L71fr
AzkIfqiPxreyRQg+53GD1olXEPyd25fxFbMawPk/Tsq7npdD8A14+Y6sNkfw
ndPb3JcGIfjx9ZlbL2Qj+GHrrqlLtiP47nw7Hz1ciOA76rB13NmF4Isl3jX8
chXB/xIsf8z2PYK/NvZ13BIuQzg/YYaOQ7cqgi8z8Qb3EjsEf/MCvjs3IxH8
4Lz10xyLEfy3OUdnavYg+ElNqQv1liP4D0ILJqceQPAtHVi7dt5G8Luj+U/2
fkPwn5u0fJrMbwTny6o2K2zXQvBjL7+x4HFB8KdvOj3zYQyCv3qFyf/L5Qj+
yRgO/x8TEPyD6mmLLdcg+Ic36D1acxTB35+Vk7ngHoI/1drk64afCH7pqbTs
z0LGcL5+gfKzID0E/7Fb6EojTwR/4e2PYS5JCL5luwRncS2Cf/vDyqWXpyH4
Zd0burasR/Df2DiWbDqF4OessfF49BjBX2firPzxI4L/YY/nv///EXwAOPby
FA==
          "]]},
        Annotation[#, "Charting`Private`Tag$67921#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
BWVo+L9GH7EQPSN6AuKfDqfoF6GbazVCz58A/3pJ3nXF6PSgTd/rT4DVmvuD
T0qo+yKizfrqSWCPux36roxa/8JHr+dPgU2qy9cV1ej8KIEweRfYW5O+v4Wy
Su9p33gXUBwbzLv7Hp1jd26G8wxw0GyD5WrR0o2Bt0fOQM5LIyXDBjTtT0Fg
ryssf0cLCP+IPhM3tbfXDdJ3hred+oQeMj8useUc6GdMbdZqRTsveIqePwdh
4TkNs23ouDcN/qvcgd9GWcDmM5XvtbmhRuehoCHy1PYudJDJz/7E82C1+2fR
qm50x4Kx76/zcF86376sB33782BYkgdITqk+le5DL+P0Kl/lBVWOsQv/KD8M
ZKl09oLjrXNGHd/QbkOpynVekP761czNAXRaitHZ0AtAv76LmBpGR6aoLcpc
BEIYml4z0OacZQ+TfaH39kOJqElqf82ClEQvwxUWFg+XKbSRmWJ0zGWoGCgV
2vhjG+k37TU4tdcP9mdrOl2fxfLtb1Nf7L8CY5se59v+ovKpyUgk9AqERC1d
vnMOvZXbPqjlCjR7V2SO/qb2uxn8bK+CpbbOL+MFKt/sfY39r8H8y+R9WxbR
O+8k72+8Bne3cNxb+g/HOySfeXqDPzA4nMStWWgkS9mTjK2v/UFxXLJyJSv6
2qr9smzX4dXL5FXn2NDbpgtobYHAes/vcjtlt1N52+hBoOdnNanBjo6qSnC9
FQRduquaOTlopN/ykfb3OsHA0nk+6gEnlm/+s9qy9ibo/tUSqeHC8m5zGQ6B
UAjvFb29jRvLC/0vmQaGQmfF3EIkZXg+pzAfCs63M77YrsT6+WfOmJ0NgzBR
vsc/V2F5cYP1I8dwaCe/bd7ISyNL71x4u9LtDmyUKo6/Tvlj4M8lBXfg1PIY
rjG0n8yLurHFO/C3SW88fy2Wa5deeBEaCeKOOdn662gkeVzIxaE4Ck4EXFH1
EsBys7Zsc/1YeH7SOrWb8vjL/Qcex8K8wXbBPYJYX/2An8+fWLjF/31+pRCW
zwe5nn0WB9kpxiWPhTE+HaVlOtJ3Ye69mPYHURxf1k1O2/QBsF0Tfqkohh4T
tOUofgC86us3R6NJtZefFGQfglzWqpWHxWlkguSbWNslCWAbsfBxZCN6uUHz
8/4EqLL67MQuRSPtHu9SPdmYCC1r21pPonulWpSC1jyG3rpm3Xopaj3nq6+Y
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
+9aMAp2MFZT2TJ1kQEkka/J6RVwvpUC/vdMMeKRFX+6DVt+6fLMX2n/G1rkX
PTbxaFMqWs+sWDFNiU42pObzsv9gQOtarzdq23G9zD7JFKLHI8bbD++gkzUS
IfxsP/G8aYqol6MlpT992YrOmdZ7KL0T40tfEDFBe5mkHmWgr2Y8nL+HXsbr
OO23i07m7LL3lJvF+y+8nSuJoJOz/2Cp8i/Mt5OC33gA1z8iztMcHbfbqvAS
uuQY+wkPNP/05xMHScwX/68V+ejVpl8qV2ji+UxzfkyfY4DhVvH7nmj/G8fk
jdC3ltq796OruTQ1ndGcuX2bSvbQSbWUS2ufoFnXDV4+q4359Tbj6prfDCDH
pQ/2oIddgiO2oi9XHlfYr4P7c/qwmjb67/nvXZJ76WTI/ZmDnuifrWM723Vx
/515Z1rRw7E/fhD6dFI5+Omg/zzu/1nl2qdofcYPsTj00X3nEwUMMF/bBtkz
0X2/Z42n0Tv2Xe1rQX+2ms98YkQnEzmuTG74g/urtCuA15hOJp+hv9yGtuTy
sbmM5rO5rLwb/fH1wopDB+ikCofAQUd0g8iSE9ymdDKyxsAyCc39czdcQGcb
CE2+QOvVX+UfREfk2um8Rb+7tKzyjRnOX32B/hVd2sOx6ZwFnXzwa7Wo0F88
LwmrujoO0cl2lTusV9AjEr+9wQrzd4hH7BZaPOWb4BN0XeWTlTHo25kFB12t
cf/NDjpmoI8XOrSwH8b9/CzD8gn9QMPAzRntP1Zc1IP+WKq6phm9QzfXaBi9
+x230f0jmB+Hi+bn0cIf82uU7HA9Yu67iS7g78vBRyfj0NNNqQxpdGDnTc5/
6EjTFp1t6J+9djo19nTS7jQEAPrD+IpyO0c8D9sEDY+gr3HYvrp9DNf/7vdj
UejC4H2WP9DT/5Xm3UVPrlT+ZXkc15O1qv8R+jDf8u2SJ+hko29SfyZadeOL
7MKTdDI1Wtu9Au2SdN9I/BSdzJpQrn+PTpIJnAhAy4a+5PyAXqNwWO7AaTrJ
b3xTtgM9qsaROuRMJ5e5pvGOoTeVTOkY/Ifn8Yz3jUm05e6ugRx0hOvX3hl0
5d7nEr4uaP2Dmgvoh2bWD/lc6eS9uq5K7kU8n23ahDe6SMfhKA+a25rW/QU9
eFBqdC36gj2b8NOzeF5URdOF0KYuz6J3n6OTf3uT56XRhlWvVZ6gaxKHyjej
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
cHVVK1F0/Y2j5EfKdmrq7R+JjBniiF4b5UC9gfvNxKm+kA3PmK7L4bBuJmQb
e7rWtjO9R0iwmUh66mvdzXT1WdbYJuKeQ4mlayflmehrCY3ErUYN0+huZn76
Sr+oJ/RKbvP+YTrVylu3nuDM6G6y7WHOz9LgSx3hf+OS8eYvlNsNrNfUET5E
sUFRL3M/9AKu1xDOGeq6fd+Y8yktyX5HZPXyvTHpZ5anth54R0zyjW9/y3RB
5amZKsL90n2JpAHmfL4zNKoIH8PFxaNDzPE5679WECVXW8+3Mq0rIhVSQbC8
zBrTGWbGa1K3q4LwF7PtlPnOHG/3j/i3xO3JN3nfRyi7nlx3opxolIyVsxpl
7ucuS9FygveQ6+Mapifdyz+VEdFl4uFPx5jzy5vfW0Y8iLji/N8E5WzvSztL
iSzlPRJTU8z+utTii4jJE8Lx9tPM/oSeyBQRivd/8DQzbefQmf+ayGdLWsz5
QZnlXFBnIVHSuqzT/SezPxdVlVcEC1e38QDTYctVmwoITch7Zz5LmdSq/a+A
qEo5mqfyi9nfkdinL4kPXlVhc3PM/FsqtDOf4M18wHHyN2VaOW9vHmH21cO3
g+nGza6BeUT7PhnnwnnmeHma3blEr1DgXp+/zP4Hn0W/IDYZ2ZWMMR3moqL7
gnC6tmP74QVm/YO/5nOI4dHhTcQiszyHzymH2CJeFpfFtHjgcaEcwtksjkfs
H3O8gK9Nz4mswLM3QpkmV/oGPycmi/Yt/mP6//9P43/idwpY
          "]]},
        Annotation[#, "Charting`Private`Tag$67921#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
H/o9wzaL8VhdFjoPFj+qbP/D/v///+J/0FrCCg==
          "]]},
        Annotation[#, "Charting`Private`Tag$67921#3"]& ]}, {}, {}}, 
     {GrayLevel[0.5], LineBox[{{16.5, 0}, {16.5, 0.5}}]}, 
     {GrayLevel[0.5], LineBox[{{17., 0}, {17., 0.5}}]}, 
     {GrayLevel[0.5], LineBox[{{17.5, 0}, {17.5, 0.5}}]}, 
     {GrayLevel[0.5], LineBox[{{18., 0}, {18., 0.5}}]}, 
     {GrayLevel[0.5], LineBox[{{18.5, 0}, {18.5, 0.5}}]}, 
     {GrayLevel[0.5], LineBox[{{17.5, 0}, {17.5, 1}}]}, 
     {GrayLevel[0.5], LineBox[{{15, 0.5}, {18.5, 0.5}}]}}, InsetBox[
     TemplateBox[{
      "\"No time suggestion\"","\"Better during 17:00-18:00\"",
       "\"Better around 17:30\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], 13, 
           Thickness[Large]], FontFamily -> "Arial"}, Background -> Automatic,
          StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "13", ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.6}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Time\"", TraditionalForm], 
     FormBox["\"Reward Value\"", TraditionalForm]},
   AxesOrigin->{15, 0},
   AxesStyle->{{
      Directive[
       GrayLevel[0], 12], 
      Arrowheads[0.01]}, {
      Directive[
       GrayLevel[0], 12], 
      Arrowheads[0.01]}},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{813.0769230769239, Automatic},
   LabelStyle->Directive[
     GrayLevel[0], 13, 
     Thickness[Large]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
    "\"Reward function for necessity tasks\"", TraditionalForm],
   PlotRange->{{15, 20}, {0, 1.05}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{{{15, 
       FormBox["\"15:00\"", TraditionalForm]}, {16, 
       FormBox["\"16:00\"", TraditionalForm]}, {17, 
       FormBox["\"17:00\"", TraditionalForm]}, {18, 
       FormBox["\"18:00\"", TraditionalForm]}, {19, 
       FormBox["\"19:00\"", TraditionalForm]}, {20, 
       FormBox["\"20:00\"", TraditionalForm]}, {15., 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {15.25, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {15.5, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {15.75, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {16., 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {16.25, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {16.5, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {16.75, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {17., 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {17.25, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {17.5, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {17.75, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {18., 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {18.25, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {18.5, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {18.75, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {19., 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {19.25, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {19.5, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {19.75, 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {20., 
       FormBox["\"\"", TraditionalForm], {0, -0.004}}, {15.5, 
       FormBox["\"15:30\"", TraditionalForm]}, {16.5, 
       FormBox["\"16:30\"", TraditionalForm]}, {17.5, 
       FormBox["\"17:30\"", TraditionalForm]}, {18.5, 
       FormBox["\"18:30\"", TraditionalForm]}, {19.5, 
       FormBox["\"19:30\"", TraditionalForm]}}, {{0.1, 
       FormBox["\"0.1\"", TraditionalForm]}, {0.2, 
       FormBox["\"0.2\"", TraditionalForm]}, {0.30000000000000004`, 
       FormBox["\"0.3\"", TraditionalForm]}, {0.4, 
       FormBox["\"0.4\"", TraditionalForm]}, {0.5, 
       FormBox["\"0.5\"", TraditionalForm]}, {0.6, 
       FormBox["\"0.6\"", TraditionalForm]}, {0.7000000000000001, 
       FormBox["\"0.7\"", TraditionalForm]}, {0.8, 
       FormBox["\"0.8\"", TraditionalForm]}, {0.9, 
       FormBox["\"0.9\"", TraditionalForm]}, {1, 
       FormBox["\"1.0\"", TraditionalForm]}, {0, 
       FormBox["\"0\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.05, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.1, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.15000000000000002`, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.2, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.25, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.30000000000000004`, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.35000000000000003`, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.4, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.45, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.5, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.55, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.6000000000000001, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.65, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.7000000000000001, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.75, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.8, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.8500000000000001, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.9, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {0.9500000000000001, 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}, {1., 
       FormBox["\"\"", TraditionalForm], {0, -0.0025}}}}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrdiWw8zAoOfAAAYf7G8/Un8rL4ngT7V/fM3eCMHf
p5a3eWcGgv+r81zK9NkIvpa/5PLSswg+v1PFp15mfTiffeMaIS4zBH+L71fr
AzkIfqiPxreyRQg+53GD1olXEPyd25fxFbMawPk/Tsq7npdD8A14+Y6sNkfw
ndPb3JcGIfjx9ZlbL2Qj+GHrrqlLtiP47nw7Hz1ciOA76rB13NmF4Isl3jX8
chXB/xIsf8z2PYK/NvZ13BIuQzg/YYaOQ7cqgi8z8Qb3EjsEf/MCvjs3IxH8
4Lz10xyLEfy3OUdnavYg+ElNqQv1liP4D0ILJqceQPAtHVi7dt5G8Luj+U/2
fkPwn5u0fJrMbwTny6o2K2zXQvBjL7+x4HFB8KdvOj3zYQyCv3qFyf/L5Qj+
yRgO/x8TEPyD6mmLLdcg+Ic36D1acxTB35+Vk7ngHoI/1drk64afCH7pqbTs
z0LGcL5+gfKzID0E/7Fb6EojTwR/4e2PYS5JCL5luwRncS2Cf/vDyqWXpyH4
Zd0burasR/Df2DiWbDqF4OessfF49BjBX2firPzxI4L/YY/nv///EXwAOPby
FA==
            "]]}, "Charting`Private`Tag$67921#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1: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
BWVo+L9GH7EQPSN6AuKfDqfoF6GbazVCz58A/3pJ3nXF6PSgTd/rT4DVmvuD
T0qo+yKizfrqSWCPux36roxa/8JHr+dPgU2qy9cV1ej8KIEweRfYW5O+v4Wy
Su9p33gXUBwbzLv7Hp1jd26G8wxw0GyD5WrR0o2Bt0fOQM5LIyXDBjTtT0Fg
ryssf0cLCP+IPhM3tbfXDdJ3hred+oQeMj8useUc6GdMbdZqRTsveIqePwdh
4TkNs23ouDcN/qvcgd9GWcDmM5XvtbmhRuehoCHy1PYudJDJz/7E82C1+2fR
qm50x4Kx76/zcF86376sB33782BYkgdITqk+le5DL+P0Kl/lBVWOsQv/KD8M
ZKl09oLjrXNGHd/QbkOpynVekP761czNAXRaitHZ0AtAv76LmBpGR6aoLcpc
BEIYml4z0OacZQ+TfaH39kOJqElqf82ClEQvwxUWFg+XKbSRmWJ0zGWoGCgV
2vhjG+k37TU4tdcP9mdrOl2fxfLtb1Nf7L8CY5se59v+ovKpyUgk9AqERC1d
vnMOvZXbPqjlCjR7V2SO/qb2uxn8bK+CpbbOL+MFKt/sfY39r8H8y+R9WxbR
O+8k72+8Bne3cNxb+g/HOySfeXqDPzA4nMStWWgkS9mTjK2v/UFxXLJyJSv6
2qr9smzX4dXL5FXn2NDbpgtobYHAes/vcjtlt1N52+hBoOdnNanBjo6qSnC9
FQRduquaOTlopN/ykfb3OsHA0nk+6gEnlm/+s9qy9ibo/tUSqeHC8m5zGQ6B
UAjvFb29jRvLC/0vmQaGQmfF3EIkZXg+pzAfCs63M77YrsT6+WfOmJ0NgzBR
vsc/V2F5cYP1I8dwaCe/bd7ISyNL71x4u9LtDmyUKo6/Tvlj4M8lBXfg1PIY
rjG0n8yLurHFO/C3SW88fy2Wa5deeBEaCeKOOdn662gkeVzIxaE4Ck4EXFH1
EsBys7Zsc/1YeH7SOrWb8vjL/Qcex8K8wXbBPYJYX/2An8+fWLjF/31+pRCW
zwe5nn0WB9kpxiWPhTE+HaVlOtJ3Ye69mPYHURxf1k1O2/QBsF0Tfqkohh4T
tOUofgC86us3R6NJtZefFGQfglzWqpWHxWlkguSbWNslCWAbsfBxZCN6uUHz
8/4EqLL67MQuRSPtHu9SPdmYCC1r21pPonulWpSC1jyG3rpm3Xopaj3nq6+Y
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
+9aMAp2MFZT2TJ1kQEkka/J6RVwvpUC/vdMMeKRFX+6DVt+6fLMX2n/G1rkX
PTbxaFMqWs+sWDFNiU42pObzsv9gQOtarzdq23G9zD7JFKLHI8bbD++gkzUS
IfxsP/G8aYqol6MlpT992YrOmdZ7KL0T40tfEDFBe5mkHmWgr2Y8nL+HXsbr
OO23i07m7LL3lJvF+y+8nSuJoJOz/2Cp8i/Mt5OC33gA1z8iztMcHbfbqvAS
uuQY+wkPNP/05xMHScwX/68V+ejVpl8qV2ji+UxzfkyfY4DhVvH7nmj/G8fk
jdC3ltq796OruTQ1ndGcuX2bSvbQSbWUS2ufoFnXDV4+q4359Tbj6prfDCDH
pQ/2oIddgiO2oi9XHlfYr4P7c/qwmjb67/nvXZJ76WTI/ZmDnuifrWM723Vx
/515Z1rRw7E/fhD6dFI5+Omg/zzu/1nl2qdofcYPsTj00X3nEwUMMF/bBtkz
0X2/Z42n0Tv2Xe1rQX+2ms98YkQnEzmuTG74g/urtCuA15hOJp+hv9yGtuTy
sbmM5rO5rLwb/fH1wopDB+ikCofAQUd0g8iSE9ymdDKyxsAyCc39czdcQGcb
CE2+QOvVX+UfREfk2um8Rb+7tKzyjRnOX32B/hVd2sOx6ZwFnXzwa7Wo0F88
LwmrujoO0cl2lTusV9AjEr+9wQrzd4hH7BZaPOWb4BN0XeWTlTHo25kFB12t
cf/NDjpmoI8XOrSwH8b9/CzD8gn9QMPAzRntP1Zc1IP+WKq6phm9QzfXaBi9
+x230f0jmB+Hi+bn0cIf82uU7HA9Yu67iS7g78vBRyfj0NNNqQxpdGDnTc5/
6EjTFp1t6J+9djo19nTS7jQEAPrD+IpyO0c8D9sEDY+gr3HYvrp9DNf/7vdj
UejC4H2WP9DT/5Xm3UVPrlT+ZXkc15O1qv8R+jDf8u2SJ+hko29SfyZadeOL
7MKTdDI1Wtu9Au2SdN9I/BSdzJpQrn+PTpIJnAhAy4a+5PyAXqNwWO7AaTrJ
b3xTtgM9qsaROuRMJ5e5pvGOoTeVTOkY/Ifn8Yz3jUm05e6ugRx0hOvX3hl0
5d7nEr4uaP2Dmgvoh2bWD/lc6eS9uq5K7kU8n23ahDe6SMfhKA+a25rW/QU9
eFBqdC36gj2b8NOzeF5URdOF0KYuz6J3n6OTf3uT56XRhlWvVZ6gaxKHyjej
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
cHVVK1F0/Y2j5EfKdmrq7R+JjBniiF4b5UC9gfvNxKm+kA3PmK7L4bBuJmQb
e7rWtjO9R0iwmUh66mvdzXT1WdbYJuKeQ4mlayflmehrCY3ErUYN0+huZn76
Sr+oJ/RKbvP+YTrVylu3nuDM6G6y7WHOz9LgSx3hf+OS8eYvlNsNrNfUET5E
sUFRL3M/9AKu1xDOGeq6fd+Y8yktyX5HZPXyvTHpZ5anth54R0zyjW9/y3RB
5amZKsL90n2JpAHmfL4zNKoIH8PFxaNDzPE5679WECVXW8+3Mq0rIhVSQbC8
zBrTGWbGa1K3q4LwF7PtlPnOHG/3j/i3xO3JN3nfRyi7nlx3opxolIyVsxpl
7ucuS9FygveQ6+Mapifdyz+VEdFl4uFPx5jzy5vfW0Y8iLji/N8E5WzvSztL
iSzlPRJTU8z+utTii4jJE8Lx9tPM/oSeyBQRivd/8DQzbefQmf+ayGdLWsz5
QZnlXFBnIVHSuqzT/SezPxdVlVcEC1e38QDTYctVmwoITch7Zz5LmdSq/a+A
qEo5mqfyi9nfkdinL4kPXlVhc3PM/FsqtDOf4M18wHHyN2VaOW9vHmH21cO3
g+nGza6BeUT7PhnnwnnmeHma3blEr1DgXp+/zP4Hn0W/IDYZ2ZWMMR3moqL7
gnC6tmP74QVm/YO/5nOI4dHhTcQiszyHzymH2CJeFpfFtHjgcaEcwtksjkfs
H3O8gK9Nz4mswLM3QpkmV/oGPycmi/Yt/mP6//9P43/idwpY
            "]]}, "Charting`Private`Tag$67921#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1: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
H/o9wzaL8VhdFjoPFj+qbP/D/v///+J/0FrCCg==
            "]]}, "Charting`Private`Tag$67921#3"]}}, {}, {}}, {
       GrayLevel[0.5], 
       Line[{{16.5, 0}, {16.5, 0.5}}]}, {
       GrayLevel[0.5], 
       Line[{{17., 0}, {17., 0.5}}]}, {
       GrayLevel[0.5], 
       Line[{{17.5, 0}, {17.5, 0.5}}]}, {
       GrayLevel[0.5], 
       Line[{{18., 0}, {18., 0.5}}]}, {
       GrayLevel[0.5], 
       Line[{{18.5, 0}, {18.5, 0.5}}]}, {
       GrayLevel[0.5], 
       Line[{{17.5, 0}, {17.5, 1}}]}, {
       GrayLevel[0.5], 
       Line[{{15, 0.5}, {18.5, 0.5}}]}}, {
     DisplayFunction -> Identity, 
      Ticks -> {{{15, "15:00"}, {16, "16:00"}, {17, "17:00"}, {18, "18:00"}, {
         19, "19:00"}, {20, "20:00"}, {15., "", {0, -0.004}}, {
         15.25, "", {0, -0.004}}, {15.5, "", {0, -0.004}}, {
         15.75, "", {0, -0.004}}, {16., "", {0, -0.004}}, {
         16.25, "", {0, -0.004}}, {16.5, "", {0, -0.004}}, {
         16.75, "", {0, -0.004}}, {17., "", {0, -0.004}}, {
         17.25, "", {0, -0.004}}, {17.5, "", {0, -0.004}}, {
         17.75, "", {0, -0.004}}, {18., "", {0, -0.004}}, {
         18.25, "", {0, -0.004}}, {18.5, "", {0, -0.004}}, {
         18.75, "", {0, -0.004}}, {19., "", {0, -0.004}}, {
         19.25, "", {0, -0.004}}, {19.5, "", {0, -0.004}}, {
         19.75, "", {0, -0.004}}, {20., "", {0, -0.004}}, {15.5, "15:30"}, {
         16.5, "16:30"}, {17.5, "17:30"}, {18.5, "18:30"}, {
         19.5, "19:30"}}, {{0.1, "0.1"}, {0.2, "0.2"}, {
         0.30000000000000004`, "0.3"}, {0.4, "0.4"}, {0.5, "0.5"}, {
         0.6, "0.6"}, {0.7000000000000001, "0.7"}, {0.8, "0.8"}, {
         0.9, "0.9"}, {1, "1.0"}, {0, "0"}, {0., "", {0, -0.0025}}, {
         0.05, "", {0, -0.0025}}, {0.1, "", {0, -0.0025}}, {
         0.15000000000000002`, "", {0, -0.0025}}, {0.2, "", {0, -0.0025}}, {
         0.25, "", {0, -0.0025}}, {0.30000000000000004`, "", {0, -0.0025}}, {
         0.35000000000000003`, "", {0, -0.0025}}, {0.4, "", {0, -0.0025}}, {
         0.45, "", {0, -0.0025}}, {0.5, "", {0, -0.0025}}, {
         0.55, "", {0, -0.0025}}, {0.6000000000000001, "", {0, -0.0025}}, {
         0.65, "", {0, -0.0025}}, {0.7000000000000001, "", {0, -0.0025}}, {
         0.75, "", {0, -0.0025}}, {0.8, "", {0, -0.0025}}, {
         0.8500000000000001, "", {0, -0.0025}}, {0.9, "", {0, -0.0025}}, {
         0.9500000000000001, "", {0, -0.0025}}, {1., "", {0, -0.0025}}}}, 
      AxesOrigin -> {15, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"Time", "Reward Value"}, AxesOrigin -> {15., 0}, 
      AxesStyle -> {{
         Directive[
          GrayLevel[0], 12], 
         Arrowheads[0.01]}, {
         Directive[
          GrayLevel[0], 12], 
         Arrowheads[0.01]}}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
        GrayLevel[0], 13, 
        Thickness[Large]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotLabel -> 
      "Reward function for necessity tasks", 
      PlotRange -> {{15, 20}, {0, 1.05}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      Ticks -> {{{15, "15:00"}, {16, "16:00"}, {17, "17:00"}, {18, "18:00"}, {
         19, "19:00"}, {20, "20:00"}, {15., "", {0, -0.004}}, {
         15.25, "", {0, -0.004}}, {15.5, "", {0, -0.004}}, {
         15.75, "", {0, -0.004}}, {16., "", {0, -0.004}}, {
         16.25, "", {0, -0.004}}, {16.5, "", {0, -0.004}}, {
         16.75, "", {0, -0.004}}, {17., "", {0, -0.004}}, {
         17.25, "", {0, -0.004}}, {17.5, "", {0, -0.004}}, {
         17.75, "", {0, -0.004}}, {18., "", {0, -0.004}}, {
         18.25, "", {0, -0.004}}, {18.5, "", {0, -0.004}}, {
         18.75, "", {0, -0.004}}, {19., "", {0, -0.004}}, {
         19.25, "", {0, -0.004}}, {19.5, "", {0, -0.004}}, {
         19.75, "", {0, -0.004}}, {20., "", {0, -0.004}}, {15.5, "15:30"}, {
         16.5, "16:30"}, {17.5, "17:30"}, {18.5, "18:30"}, {
         19.5, "19:30"}}, {{0.1, "0.1"}, {0.2, "0.2"}, {
         0.30000000000000004`, "0.3"}, {0.4, "0.4"}, {0.5, "0.5"}, {
         0.6, "0.6"}, {0.7000000000000001, "0.7"}, {0.8, "0.8"}, {
         0.9, "0.9"}, {1, "1.0"}, {0, "0"}, {0., "", {0, -0.0025}}, {
         0.05, "", {0, -0.0025}}, {0.1, "", {0, -0.0025}}, {
         0.15000000000000002`, "", {0, -0.0025}}, {0.2, "", {0, -0.0025}}, {
         0.25, "", {0, -0.0025}}, {0.30000000000000004`, "", {0, -0.0025}}, {
         0.35000000000000003`, "", {0, -0.0025}}, {0.4, "", {0, -0.0025}}, {
         0.45, "", {0, -0.0025}}, {0.5, "", {0, -0.0025}}, {
         0.55, "", {0, -0.0025}}, {0.6000000000000001, "", {0, -0.0025}}, {
         0.65, "", {0, -0.0025}}, {0.7000000000000001, "", {0, -0.0025}}, {
         0.75, "", {0, -0.0025}}, {0.8, "", {0, -0.0025}}, {
         0.8500000000000001, "", {0, -0.0025}}, {0.9, "", {0, -0.0025}}, {
         0.9500000000000001, "", {0, -0.0025}}, {1., "", {0, -0.0025}}}}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
       "No time suggestion", "Better during 17:00-18:00", 
        "Better around 17:30"}, LegendMarkers -> None, LabelStyle -> Directive[
         GrayLevel[0], 13, 
         Thickness[Large]], LegendLayout -> "Column"]], {
      Scaled[{0.75, 0.6}], {0, 0}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.789412413164296*^9, 3.7894124586607013`*^9}, {
   3.7894124964100113`*^9, 3.789412594490145*^9}, {3.7894126848301697`*^9, 
   3.7894126958132477`*^9}, 3.789412727553732*^9},
 CellLabel->
  "Out[714]=",ExpressionUUID->"19619871-f546-4301-bdbb-e00eb970998c"]
}, Open  ]]
},
WindowSize->{1220, 626},
WindowMargins->{{Automatic, -5}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (2018\:5e743\:670828\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 888, 26, 60, "Input",ExpressionUUID->"d9a36d09-c0f7-4ab7-af78-f47c85e19b66"],
Cell[CellGroupData[{
Cell[1471, 50, 1382, 35, 133, "Input",ExpressionUUID->"981b4f8c-c929-40e7-826b-2a14dd14bdfc"],
Cell[2856, 87, 18153, 315, 314, "Output",ExpressionUUID->"69877c80-39a4-4b53-a63e-4f0fed5711f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21046, 407, 358, 9, 55, "Input",ExpressionUUID->"b10fd17a-bfd5-4926-8d09-5b5ea1203c92"],
Cell[21407, 418, 392, 8, 39, "Output",ExpressionUUID->"f7152d60-7168-42a7-a4f4-932d9e6927c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21836, 431, 427, 10, 56, "Input",ExpressionUUID->"a435531e-c85c-4c1d-9f2c-a5f7da089497"],
Cell[22266, 443, 418, 9, 39, "Output",ExpressionUUID->"0cfdf960-617e-47c3-a125-3b491e33099b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22721, 457, 853, 23, 75, "Input",ExpressionUUID->"040cefc0-6da7-4544-b44c-491c7d598e69"],
Cell[23577, 482, 3294, 72, 287, "Output",ExpressionUUID->"cb0a0a08-5cd8-4058-b704-66c6ef0a2c0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26908, 559, 1623, 42, 121, "Input",ExpressionUUID->"b007378d-e2c5-4e51-a958-e5893f9ca00f"],
Cell[28534, 603, 641, 13, 53, "Message",ExpressionUUID->"589148cd-f26d-40f7-8df2-59311d59fb98"],
Cell[29178, 618, 575, 11, 39, "Output",ExpressionUUID->"0fd015df-c2ba-4249-a707-92681d6e3ac0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29790, 634, 3507, 85, 174, "Input",ExpressionUUID->"5f86d4cc-fa5f-42c4-9cdc-7b45ddc02f64"],
Cell[33300, 721, 15007, 256, 335, "Output",ExpressionUUID->"202e2300-c130-4756-8198-00a5825e50a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48344, 982, 8508, 225, 497, "Input",ExpressionUUID->"e450b15a-7041-477a-a6f2-b37340b0fbed"],
Cell[56855, 1209, 46773, 805, 719, "Output",ExpressionUUID->"57d4b1a4-8e69-4763-a441-17fdd7beeb77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103665, 2019, 1576, 45, 83, "Input",ExpressionUUID->"7dc02264-70a3-4096-a0d4-6b1fde6d9a96"],
Cell[105244, 2066, 23668, 409, 286, "Output",ExpressionUUID->"5f3a28ca-a108-42ce-8c4c-d525b3823a04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128949, 2480, 7242, 182, 585, "Input",ExpressionUUID->"0e6414d3-b0d2-45d9-8c74-3fa72f8edbf4"],
Cell[136194, 2664, 147398, 2447, 366, "Output",ExpressionUUID->"1edbfaec-e02e-44b1-ba99-60e7167c5244"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283629, 5116, 347, 9, 55, "Input",ExpressionUUID->"c0e2ad8e-5dad-4594-bafd-b5294b12690a"],
Cell[283979, 5127, 401, 9, 39, "Output",ExpressionUUID->"f9469198-6ab6-435f-be68-61d2be33c4a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284417, 5141, 5399, 134, 484, "Input",ExpressionUUID->"2dd57153-6651-428e-aa5d-e5d2acb7e175"],
Cell[289819, 5277, 50954, 886, 536, "Output",ExpressionUUID->"a4b810dd-6a04-42d9-ba69-a4fae46ca2af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340810, 6168, 23819, 619, 1365, "Input",ExpressionUUID->"7029e3af-cf07-4ce7-8c1f-3f81ebc491ea"],
Cell[364632, 6789, 107227, 1827, 826, "Output",ExpressionUUID->"5d81532f-99bf-4656-a300-66d3540d4e2e"]
}, Open  ]],
Cell[471874, 8619, 508, 13, 35, "Input",ExpressionUUID->"6af79459-1066-4ec0-9b6d-40d97cdd3ccd"],
Cell[CellGroupData[{
Cell[472407, 8636, 4535, 125, 370, "Input",ExpressionUUID->"c8ed6e9a-83f2-4aca-ba17-c8d6a7014db9"],
Cell[476945, 8763, 10591, 207, 467, "Output",ExpressionUUID->"b38c1299-71bf-4520-8c80-d3de573cddc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487573, 8975, 9689, 250, 940, "Input",ExpressionUUID->"481e7513-6763-4566-8d0b-53873af53464"],
Cell[497265, 9227, 18126, 332, 590, "Output",ExpressionUUID->"860d518d-990b-45af-83ec-51ba41695b8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515428, 9564, 4660, 122, 463, "Input",ExpressionUUID->"9cf86a2d-9d78-4cf6-8d9d-03dadb7a850d"],
Cell[520091, 9688, 7039, 144, 463, "Output",ExpressionUUID->"7c8522d6-d379-47ca-a2d9-027a3cc2c0fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527167, 9837, 5147, 136, 439, "Input",ExpressionUUID->"11c5aca1-4801-40ce-b79e-8e4823aa4227"],
Cell[532317, 9975, 10778, 210, 529, "Output",ExpressionUUID->"94d4910f-7325-4838-a993-d06d195d29d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543132, 10190, 6120, 157, 574, "Input",ExpressionUUID->"c6ac506a-d5e0-4dbb-af1c-899a10c39409"],
Cell[549255, 10349, 26746, 472, 554, "Output",ExpressionUUID->"f7305f32-8be3-453e-8419-4f428e698f2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576038, 10826, 1035, 28, 79, "Input",ExpressionUUID->"d788b1da-6571-4965-a52c-837a1fb16646"],
Cell[577076, 10856, 447, 11, 39, "Output",ExpressionUUID->"b36f5e4a-6823-476d-beda-af8a32b7eea0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577560, 10872, 7362, 195, 619, "Input",ExpressionUUID->"2b446158-1905-4039-87cd-adb806b8a47e"],
Cell[584925, 11069, 114569, 1994, 636, "Output",ExpressionUUID->"19619871-f546-4301-bdbb-e00eb970998c"]
}, Open  ]]
}
]
*)

